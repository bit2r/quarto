{
  "hash": "58f4fc3ea018bf3cc1b0cf41dd5091ed",
  "result": {
    "markdown": "---\ntitle: \"디지털 글쓰기\"\nsubtitle: \"R 마크다운 &rarr; PDF\"\ndescription: |\n  R마크다운 파일을 PDF파일로 변환해보자.\nauthor:\n  - name: 이광춘\n    url: https://www.linkedin.com/in/kwangchunlee/\n    affiliation: 한국 R 사용자회\n    affiliation-url: https://github.com/bit2r\ntitle-block-banner: true\n#title-block-banner: \"#562457\"\nformat:\n  html:\n    theme: flatly\n    code-fold: true\n    code-overflow: wrap\n    toc: true\n    toc-depth: 3\n    toc-title: 목차\n    number-sections: true\n    highlight-style: github    \n    self-contained: false\nfilters:\n   - lightbox\nlightbox: auto\nbibliography: bibliography.bib\nlink-citations: true\ncsl: apa-single-spaced.csl\nknitr:\n  opts_chunk: \n    message: false\n    warning: false\n    collapse: true\n    comment: \"#>\" \n    R.options:\n      knitr.graphics.auto_pdf: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n# YAML 설정 {#basic-yaml-setting}\n\n## $\\LaTeX$ 엔진 {#latex-engine}\n\nR마크다운에서 PDF 파일 문서를 생성하기 위해서는 $\\LaTeX$ 엔진이 필요한데 유니코드를 지원하는 `xeLaTeX`을 기본 엔진으로 설정한다.\n이를 위해서 [ko.TeX](http://project.ktug.org/ko.TeX/)를 설치하고 RStudio에서 `RSTUDIO_PDFLATEX` 환경변수 설정을 통해 $\\LaTeX$ 엔진을 연결시킨다.\n`usethis::edit_r_environ()` 명령어를 통해 `RSTUDIO_PDFLATEX=\"C:\\texlive\\2020\\bin\\win32\"`와 같이 `ko.TeX`이 설치된 경로를 지정하면 된다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSys.getenv(\"RSTUDIO_PDFLATEX\")\n#> [1] \"\"\n```\n:::\n\n\n## $\\LaTeX$ 글꼴 {#latex-font}\n\n$\\LaTeX$을 통해 `PDF` 파일을 조판하기 위해서는 한글글꼴이 필요하다. \nYAML 헤더에 `mainfont: NanumGothic`을 지정하여 한글 글꼴을 명시해야 `???` 혹은 `ㅁ` 와 같은 한글깨짐 문제를 해결할 수 있다.\n\n````yaml\n---\nlayout: page\ntitle: \"LaTeX 과 PDF \"\nsubtitle: \"PDF 문서 기본\"\nauthor: \"이광춘\"\ndate: \"2023-05-22\"\noutput:\n  pdf_document: \n    latex_engine: xelatex     <-- `LaTeX` 엔진 지정\n    toc: true\n    toc_depth: 2  \n    number_sections: true\n    fig_width: 3\n    fig_height: 2\n    fig_caption: true\n    df_print: kable\n    highlight: tango\nmainfont: NanumGothic        <-- 한글 글꼴 설정\n---\n````\n\n## R lorem ipsum {#basic-lorem-ipsum}\n\nR 마크다운으로도 다른 $\\LaTeX$과 마찬가지로 로렘입섬(Lorem Ipsum)을 작성할 수 있는 팩키지가 다수 존재한다.\n\n- [`lorem`](https://github.com/gadenbuie/lorem)\n- [`shinipsum`](https://github.com/ThinkR-open/shinipsum)\n\n[`shinipsum`](https://github.com/ThinkR-open/shinipsum)은 특히 샤이니 앱을 개발할 때 빠르게 기능을 구현하는데 도움을 준다.\n`lorem::ipsum()` 기능도 좋지만, `shinipsum::random_*()` 함수를 사용하게 되면 텍스트는 물론이고 표, 모형, `ggplot`, 이미지 등을 빠르게 문서에 Shiny 앱에 넣을 수가 있다.\n\n\n```{{r}}\nlibrary(tidyverse)\ncat(readr::read_lines('lipsum/rmarkdown/basics.Rmd'), sep = '\\n')\n```\n\n\n# PDF 예제 {#pdf-rmarkdown}\n\nR마크다운 문서파일에 `output:`에  `pdf_document:` 출력결과를 하고 PDF 파일 기본설정을 통해 작성한 PDF 문서를 살펴보자.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"lipsum/rmarkdown/basics.pdf\")\n```\n\n::: {.cell-output-display}\n![](lipsum/rmarkdown/basics.pdf){width=800px height=460px}\n:::\n:::\n\n\n## $\\LaTeX$ 구조 {#latex-structure}\n\n$\\LaTeX$ 문서구조는 `Preamble` 전문과 본문(Body)으로 구성된다. \nR마크다운에 들어가는 내용은 주로 본문으로 구성되기 때문에 문서 앞과 뒤를 넣을 수 있는 부분을 \n$\\LaTeX$의 전문(Preamble) 기능으로 대체할 경우 품질 좋은 데이터 과학 문서를 제작할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\\documentclass{article}\n% 전문 preamble\n\n\\begin{document}\n% 본문 body\n\\end{document}\n```\n:::\n\n\n## R마크다운 PDF 구조 {#latex-rmarkdown-str}\n\n`preamble`을 조금더 직관적으로 표현하면 $\\LaTeX$의 팩키지를 가져오는 `import.tex` 파일로 지정하고, 첫장을 `cover.tex` PDF 파일로 준비한다.\n그리고 나머지 부분은 일반적인 문서 작성하듯이 하면 된다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreport/\n|-- rmarkdown.Rmd\n|-- biblatex.bib\n|-- sections/\n  |-- import.tex\n  |-- cover.tex\n|-- images/\n  |-- ggplot.png\n```\n:::\n\n\n## R마크다운 문서 {#latex-rmarkdown-document}\n\n`in_header`에 가져올 팩키지를 지정하고, 겉표지 PDF는 `cover.tex`에서 설정한다.\n\n````yaml\n---\nlayout: page\noutput:\n  bookdown::pdf_document2: \n    latex_engine: xelatex\n    toc: true\n    toc_depth: 2  \n    number_sections: true\n    fig_width: 3\n    fig_height: 2\n    fig_caption: true\n    df_print: kable\n    highlight: tango\n    includes:\n      in_header: sections/import.tex   <-- 팩키지 설정\n      before_body: sections/cover.tex  <-- 겉표지 PDF\nmainfont: NanumGothic\n---\n````\n\n# 문서구조 상세 {#latex-rmarkdown-document-structure}\n\n## `import.tex` {#latex-import}\n\n`pdfpages`를 사용하기 위해 `import.tex` 파일에 가져올 팩키지를 명시하고 HTML 파일을 PDF 파일에서 클릭하면 \n바로 연결할 수 있도록 `\\renewcommand` 매크로도 함께 설정한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(readr::read_lines('lipsum/rmarkdown/sections/import.tex'), sep = '\\n')\n#> \\usepackage{kotex}\n#> \n#> % PDF 겉장 -------------------------------\n#> \\usepackage{pdfpages}\n#> \n#> % HTML 링크\n#> \\renewcommand{\\href}[2]{#2\\footnote{\\url{#1}}}\n```\n:::\n\n\n## `cover.tex` {#latex-cover-tex}\n\n`cover.tex` 파일에는 [`canva`](https://www.canva.com/) 웹사이트에서 제작한 겉표지 PDF 파일을 R마크다운 문서에 넣을 수 있도록 설정한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(readr::read_lines('lipsum/rmarkdown/sections/cover.tex'), sep = '\\n')\n#> \n#> \\includepdf[fitpaper]{cover-pdf}\n```\n:::\n\n\n## `basics-latex.Rmd` {#latex-rmarkdown}\n\n`basics-latex.Rmd` 파일은 PDF $\\LaTeX$ 겉장을 포함시켜 데이터 과학 보고서를 제작할 수 있도록 설정한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(readr::read_lines('lipsum/rmarkdown/basics-latex.Rmd'), sep = '\\n')\n#> ---\n#> layout: page\n#> output:\n#>   bookdown::pdf_document2: \n#>     latex_engine: xelatex\n#>     toc: true\n#>     toc_depth: 2  \n#>     number_sections: true\n#>     fig_width: 3\n#>     fig_height: 2\n#>     fig_caption: true\n#>     df_print: kable\n#>     highlight: tango\n#>     includes:\n#>       in_header: sections/import.tex\n#>       before_body: sections/cover.tex\n#> mainfont: NanumGothic\n#> ---\n#> \n#> ```{r setup, include=FALSE}\n#> knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE,\n#>                       comment=\"\", digits = 3, tidy = FALSE, prompt = FALSE, fig.align = 'center')\n#> library(tidyverse)\n#> ```\n#> \n#> \n#> # 들어가며 {#rmd-intro}\n#> \n#> [`lorem`](https://github.com/gadenbuie/lorem), [`shinipsum`](https://github.com/ThinkR-open/shinipsum) 팩키지가 도움이 된다.\n#> \n#> `r lorem::ipsum(paragraphs = 1)`\n#> \n#> # 텍스트 {#rmd-main}\n#> \n#> `r lorem::ipsum(paragraphs = 1)`\n#> \n#> ## 증명 {#rmd-proof}\n#> \n#> `r lorem::ipsum(paragraphs = 1)`\n#> \n#> ## 표 {#rmd-table}\n#> \n#> `r shinipsum::random_table(5, 7, \"numeric\")`\n#> \n#> ## 그래프 {#rmd-graph}\n#> \n#> <!-- `r shinipsum::random_ggplot()` -->\n#> \n#> ```{r lorem-ipsum-penguin}\n#> library(palmerpenguins)\n#> library(tidyverse)\n#> \n#> ggplot(data = penguins,\n#>                        aes(x = flipper_length_mm,\n#>                            y = body_mass_g)) +\n#>   geom_point(aes(color = species,\n#>                  shape = species),\n#>              size = 1,\n#>              alpha = 0.8) +\n#>   theme_minimal() +\n#>   scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n#>   theme(legend.position = c(0.2, 0.7),\n#>         legend.background = element_rect(fill = \"white\", color = NA),\n#>         plot.title.position = \"plot\",\n#>         plot.caption = element_text(hjust = 0, face= \"italic\"),\n#>         plot.caption.position = \"plot\")\n#> ```\n#> \n#> \n#> ## 그림 {#rmd-image}\n#> \n#> <!-- `r shinipsum::random_image()` -->\n#> \n#> ![](../fig/latex-editor.png)\n#> \n#> ## 모형 {#rmd-model}\n#> \n#> `r shinipsum::random_print(\"model\")  %>% broom::glance()`\n#> \n#> # 마무리 {#rmd-conclusion}\n#> \n#> `r lorem::ipsum(paragraphs = 1)`\n```\n:::\n\n\n# R 마크다운 + $\\LaTeX$ {#latex-rmarkdown-document-output}\n\n$\\LaTeX$ 겉장을 R 마크다운 데이터 과학 보고서와 결합시켜 제작한 PDF 산출물은 다음과 같다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"lipsum/rmarkdown/basics-latex.pdf\")\n```\n\n::: {.cell-output-display}\n![](lipsum/rmarkdown/basics-latex.pdf){width=800px height=460px}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}