{
  "hash": "ef100b5ad85def997606aca913e10105",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    theme: [\"simple\", \"theme/q-theme.scss\"]\n    slide-number: c/t\n    logo: \"../fig/koRea_logo.png\"\n    footer: \"[한국 R 사용자회](https://r2bit.com/)&nbsp;\"\n    code-copy: true\n    center-title-slide: false\n    include-in-header: heading-meta.html\n    code-link: true\n    code-overflow: wrap\n    highlight-style: a11y\n    height: 1080\n    width: 1920\n    smaller: true\n    scrollable: true    \nexecute: \n  eval: true\n  echo: true\n  freeze: auto  \neditor_options: \n  chunk_output_type: console\n---\n<h1> 데이터 사이언스와 디자인 </h1>\n  \n  <h2> 디자인과 아키텍쳐의 중요성 </h2>\n  \n  <hr>\n  \n  <h3> 이광춘, 한국 R 사용자회 </h3>\n  \n  <h3> 2022-10-11 </h3>\n  <br>\n  \n  <h3> `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 496 512\" style=\"height:1em;width:0.97em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:black;overflow:visible;position:relative;\"><path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3 .3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5 .3-6.2 2.3zm44.2-1.7c-2.9 .7-4.9 2.6-4.6 4.9 .3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3 .7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3 .3 2.9 2.3 3.9 1.6 1 3.6 .7 4.3-.7 .7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3 .7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3 .7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"/></svg>`{=html} &nbsp; [github.com/bit2r/quarto](https://github.com/bit2r/quarto)\n\n![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png){.absolute top=425 left=1100 width=\"300\"}\n![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/tidymodels.png){.absolute top=425 left=1400 width=\"300\"}\n\n![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/tidyverse.png){.absolute top=680 left=1250 width=\"300\"}\n\n\n\n## {auto-animate=true}\n\n::: {style=\"margin-top: 100px; color: black\"}\n데이터 사이언스\n:::\n\n## {auto-animate=true}\n\n::: {style=\"margin-top: 300px; font-size: 5em; color: black;\"}\n데이터 사이언스\n:::\n\n## 데이터 사이언스\n\n::: {.r-stack}\n\n![](../fig/horst-eco-r4ds.png){.fragment}\n\n![](../fig/data-science-overview.png){.fragment width=\"800\"}\n:::\n\n## 데이터 과학 욕구단계설\n\n::: panel-tabset\n\n### 매슬로 욕구단계설 \n\n![](../fig/pyramid-needs.png)\n\n### 가치 피라미드\n\n![](../fig/pyramid-data-science.png)\n\n\n:::\n\n\n\n\n\n\n## {auto-animate=true}\n\n::: {style=\"margin-top: 100px; color: black\"}\n데이터 과학 문제\n:::\n\n## {auto-animate=true}\n\n::: {style=\"margin-top: 300px; font-size: 5em; color: black;\"}\n데이터 과학 문제\n:::\n\n## 데이터 사이언스 - 출판\n\n::: panel-tabset\n### 문제점\n\n![문제점](../fig/single-sourcing-problem.jpg){#fig-problem width=\"50%\"}\n\n### 개념\n\n![Single Sourcing 개념](../fig/single-sourcing-concept.jpg){#fig-concept width=\"50%\"}\n\n### Single Sourcing Multi-Use\n\n![Single Sourcing Multi-Use](../fig/single-sourcing-publishing.jpg){#fig-publishing width=\"60%\"}\n:::\n\n\n\n## 복잡성\n\n::: panel-tabset\n\n### 엑셀 [^excel]\n\n[^excel]: [XKCD 1667: Algorithms](https://www.explainxkcd.com/wiki/index.php/1667:_Algorithms)\n\n<br>\n\n<center>\n![](../fig/xkcd-algorithms.png){width=\"1000\"}\n</center>\n\n### 아래한글 [^markdown] {.selected}\n\n<center>\n![](../fig/markdown-writing.png) \n</center>\n\n[^markdown]: [Writing Technical Papers with Markdown and Pandoc](https://blog.kdheepak.com/writing-papers-with-markdown.html)\n\n:::\n\n\n\n## 시각화 - 그래프 문법 ^[Comparing ggplot2 and R Base Graphics By [Nathan Yau](https://flowingdata.com/2016/03/22/comparing-ggplot2-and-r-base-graphics/)]\n\n::: {.panel-tabset}\n\n<!-- 데이터  -->\n:::: columns\n\n::: {.column}\n\n### R 코드\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nbill_df <- data.frame(\n  sex = factor(c(\"여성\",\"여성\",\"남성\",\"남성\")),\n  time = factor(c(\"점심\",\"저녁\",\"점심\",\"저녁\"), levels=c(\"점심\",\"저녁\")),\n  total_bill = c(13.53, 16.81, 16.24, 17.42)\n)\n```\n:::\n:::\n\n::: {.column}\n### 실행결과\n::: {.cell}\n\n```{.r .cell-code}\nbill_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   sex time total_bill\n1 여성 점심      13.53\n2 여성 저녁      16.81\n3 남성 점심      16.24\n4 남성 저녁      17.42\n```\n:::\n:::\n:::\n\n::::\n\n\n<!-- ggplot -->\n::: {.columns}\n\n::: {.column}\n\n### R 코드\n\n::: {.cell}\n\n```{.r .cell-code}\nbill_df %>% \n  ggplot(aes(x=time, y=total_bill, group=sex, shape=sex, colour=sex)) +\n    geom_line(aes(linetype=sex), size=1) +    \n    geom_point(size=3, fill=\"white\") +        \n    expand_limits(y=0) +                      \n    scale_colour_hue(name=\"결재자 성별\", l=30) +\n    scale_shape_manual(name=\"결재자 성별\", values=c(22,21)) +\n    scale_linetype_discrete(name=\"결재자 성별\") +\n    xlab(\"점심, 석식\") + ylab(\"팁(Tip)\") +\n    ggtitle(\"식사 결재 평균 팁\") +    \n    theme_bw() +\n    theme(legend.position=c(.7, .4))\n```\n:::\n:::\n\n::: {.column}\n### 실행결과\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n:::\n\n:::\n\n<!-- Base R -->\n\n::: {.columns}\n\n::: {.column}\n\n### R 코드\n\n::: {.cell}\n\n```{.r .cell-code}\nbill_mat <- matrix( bill_df$total_bill,\n                   nrow = 2,\n                   byrow=TRUE,\n                   dimnames = list(c(\"여성\", \"남성\"), c(\"점심\", \"저녁\"))\n                   )\n\nmf_col <- c(\"#3CC3BD\", \"#FD8210\")\nbarplot(bill_mat, beside = TRUE, border=NA, col=mf_col)\nlegend(\"topleft\", row.names(bill_mat), pch=15, col=mf_col)\n\n\npar(cex=1.2, cex.axis=1.1)\nmatplot(bill_mat, type=\"b\", lty=1, pch=19, col=mf_col,\n    cex=1.5, lwd=3, las=1, bty=\"n\", xaxt=\"n\",\n    xlim=c(0.7, 2.2), ylim=c(12,18), ylab=\"\",\n    main=\"식사 결재 평균 팁\", yaxt=\"n\")\naxis(2, at=axTicks(2), labels=sprintf(\"$%s\", axTicks(2)),\n    las=1, cex.axis=0.8, col=NA, line = -0.5)\ngrid(NA, NULL, lty=3, lwd=1, col=\"#000000\")\nabline(v=c(1,2), lty=3, lwd=1, col=\"#000000\")\nmtext(\"점심\", side=1, at=1)\nmtext(\"저녁\", side=1, at=2)\ntext(1.5, 17.3, \"남성\", srt=8, font=3)\ntext(1.5, 15.1, \"여성\", srt=33, font=3)\n```\n:::\n:::\n\n::: {.column}\n### 실행결과\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n:::\n\n:::\n\n:::\n\n\n\n\n## 디자인 - 코드\n\n::: panel-tabset\n\n### 데이터 가공\n\n> 날짜와 시간별로 총 빈도수와 출발연착 평균 시간을 구한다. 단, 총빈도수가 10 회 미만인 것은 제외하고  출발연착 시간의 결측값을 제거하고 계산한다.\n\n- `flights` 데이터프레임에서\n- 출발 연착시간(`dep_delay`) 칼럼에서 결측값이 없는 (`!is.na()`) 행을 필터링 하고\n- 날짜별(`date`), 시간별(`hour`) 그룹을 묶어\n- 평균 출발 연착시간을 계산하고 총빈도수 총계를 내고\n- 총빈도수가 10회 이상인 날짜와 시간을 찾아내시오\n\n### `dplyr` R\n\n::: {.cell}\n\n```{.r .cell-code}\nhourly_delay <- flights %>%  \n  filter(!is.na(dep_delay)) %>% \n  group_by(date, hour) %>% \n  summarise(delay = mean(dep_delay), n = n()) %>%  \n  filter(n > 10) \n```\n:::\n\n### Base R \n\n::: {.cell}\n\n```{.r .cell-code}\nhourly_delay <- filter(   \n    summarise(   \n        group_by(   \n             filter(   \n                 flights,    \n                 !is.na(dep_delay)   \n             ),    \n             date, hour   \n        ),    \n    delay = mean(dep_delay),    \n         n = n()   \n    ),    \n    n > 10   \n)\n```\n:::\n\n\n### SQL\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT \"date\", \"hour\", \"delay\", \"n\"\nFROM (\n    SELECT \"date\", \"hour\",\n        AVG(\"dep_delay\") AS \"delay\",\n        COUNT() AS \"n\"\n    FROM \"flights\"\n    WHERE NOT(\"dep_delay\" IS NULL)\n    GROUP BY \"date\", \"hour\"\n) AS \"_W1\"\nWHERE \"n\" > 10.0\n```\n:::\n\n### 파이썬\n\n::: {.cell}\n\n```{.python .cell-code}\nflights[['date','hour','dep_delay']]\n...\n```\n:::\n\n::: \n\n## 디자인 - 데이터\n\n::: panel-tabset\n\n### 정돈된 데이터\n\n<center>\n![](../fig/messy_tidy_data.png){width=\"1000\"}\n</center>\n\n### 사례 - 결핵 데이터\n\n- WHO [결핵 원데이터](http://www.who.int/tb/country/data/download/en/) \n- WHO 에서 년도별, 국가별, 연령별, 성별, 진단방법별 결핵 발병사례 조사 통계 데이터\n- 진단방법\n    - `rel` stands for cases of relapse\n    - `ep` stands for cases of extrapulmonary TB\n    - `sn` stands for cases of pulmonary TB that could not be diagnosed by a pulmonary smear (smear negative)\n    - `sp` stands for cases of pulmonary TB that could be diagnosed by a pulmonary smear (smear positive)\n- 연령\n    - 014 = 0 – 14 years old\n    - 1524 = 15 – 24 years old\n    - 2534 = 25 – 34 years old\n    - 3544 = 35 – 44 years old\n    - 4554 = 45 – 54 years old\n    - 5564 = 55 – 64 years old\n    - 65 = 65 or older\n- 성별\n    - males (m) \n    - females (f)\n    \n\n### 사례 - Messy 데이터\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntidyr::who \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7,240 × 60\n   country     iso2  iso3   year new_s…¹ new_s…² new_s…³ new_s…⁴ new_s…⁵ new_s…⁶\n   <chr>       <chr> <chr> <int>   <int>   <int>   <int>   <int>   <int>   <int>\n 1 Afghanistan AF    AFG    1980      NA      NA      NA      NA      NA      NA\n 2 Afghanistan AF    AFG    1981      NA      NA      NA      NA      NA      NA\n 3 Afghanistan AF    AFG    1982      NA      NA      NA      NA      NA      NA\n 4 Afghanistan AF    AFG    1983      NA      NA      NA      NA      NA      NA\n 5 Afghanistan AF    AFG    1984      NA      NA      NA      NA      NA      NA\n 6 Afghanistan AF    AFG    1985      NA      NA      NA      NA      NA      NA\n 7 Afghanistan AF    AFG    1986      NA      NA      NA      NA      NA      NA\n 8 Afghanistan AF    AFG    1987      NA      NA      NA      NA      NA      NA\n 9 Afghanistan AF    AFG    1988      NA      NA      NA      NA      NA      NA\n10 Afghanistan AF    AFG    1989      NA      NA      NA      NA      NA      NA\n# … with 7,230 more rows, 50 more variables: new_sp_m65 <int>,\n#   new_sp_f014 <int>, new_sp_f1524 <int>, new_sp_f2534 <int>,\n#   new_sp_f3544 <int>, new_sp_f4554 <int>, new_sp_f5564 <int>,\n#   new_sp_f65 <int>, new_sn_m014 <int>, new_sn_m1524 <int>,\n#   new_sn_m2534 <int>, new_sn_m3544 <int>, new_sn_m4554 <int>,\n#   new_sn_m5564 <int>, new_sn_m65 <int>, new_sn_f014 <int>,\n#   new_sn_f1524 <int>, new_sn_f2534 <int>, new_sn_f3544 <int>, …\n```\n:::\n:::\n\n### 사례 - 코드\n\n::: {.cell}\n\n```{.r .cell-code}\nwho %>%\n  pivot_longer(\n    cols = new_sp_m014:newrel_f65, \n    names_to = \"key\", \n    values_to = \"cases\", \n    values_drop_na = TRUE\n  ) %>% \n  mutate(\n    key = stringr::str_replace(key, \"newrel\", \"new_rel\")\n  ) %>%\n  separate(key, c(\"new\", \"var\", \"sexage\")) %>% \n  select(-new, -iso2, -iso3) %>% \n  separate(sexage, c(\"sex\", \"age\"), sep = 1)\n```\n:::\n\n### 사례 - Tidy 데이터\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 76,046 × 6\n   country      year var   sex   age   cases\n   <chr>       <int> <chr> <chr> <chr> <int>\n 1 Afghanistan  1997 sp    m     014       0\n 2 Afghanistan  1997 sp    m     1524     10\n 3 Afghanistan  1997 sp    m     2534      6\n 4 Afghanistan  1997 sp    m     3544      3\n 5 Afghanistan  1997 sp    m     4554      5\n 6 Afghanistan  1997 sp    m     5564      2\n 7 Afghanistan  1997 sp    m     65        0\n 8 Afghanistan  1997 sp    f     014       5\n 9 Afghanistan  1997 sp    f     1524     38\n10 Afghanistan  1997 sp    f     2534     36\n# … with 76,036 more rows\n```\n:::\n:::\n\n:::\n\n## 디자인 - 사람 대 기계\n\n::: panel-tabset\n\n### 전체 개발 시간\n\n<br>\n<center>\n![](../fig/human-computer-total.png)\n</center>\n\n\n### 사람 `<` 기계 \n\n<br>\n<center>\n![](../fig/human-computer-machine.png)\n</center>\n\n### 사람 `>` 기계 \n\n<br>\n<center>\n![](../fig/human-computer-human.png)\n</center>\n\n\n:::\n\n\n\n## {auto-animate=true}\n\n::: {style=\"margin-top: 100px; color: black\"}\n데이터 과학 노력들\n:::\n\n## {auto-animate=true}\n\n::: {style=\"margin-top: 300px; font-size: 5em; color: black;\"}\n데이터 과학 노력들\n:::\n\n## Quarto\n\n::: panel-tabset\n### R\n\n![](../fig/quarto_workflow/rmd-knitr.png)\n\n### 파이썬\n\n![](../fig/quarto_workflow/jupyter-alone.png)\n\n### Quarto: R\n\n![](../fig/quarto_workflow/qmd-knitr.png)\n\n### Quarto: 파이썬\n\n![](../fig/quarto_workflow/qmd-jupyter.png)\n:::\n\n\n\n## {background-image=\"../fig/slide-end.png\" background-size=\"contain\"}\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}