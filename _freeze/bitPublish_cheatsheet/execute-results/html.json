{
  "hash": "99ce56e6f65c7d08f7cf3e6dff32b632",
  "result": {
    "markdown": "---\ntitle: \"디지털 글쓰기\"\nsubtitle: \"`bitPublish` 참조 안내서\"\ndescription: |\n  `bitPublish` 디지털 출판을 원활하게 할 수 있는 `bitPublish` 글쓰기 주요기능을 참조 안내서로 정리한다.\nauthor:\n  - name: 이광춘\n    url: https://www.linkedin.com/in/kwangchunlee/\n    affiliation: 한국 R 사용자회\n    affiliation-url: https://github.com/bit2r\ntitle-block-banner: true\n#title-block-banner: \"#562457\"\nformat:\n  html:\n    theme: flatly\n    code-fold: false\n    code-overflow: wrap\n    toc: true\n    toc-depth: 3\n    toc-title: 목차\n    number-sections: true\n    highlight-style: github    \n    self-contained: false\nfilters:\n   - lightbox\nlightbox: auto\nbibliography: bibliography.bib\nlink-citations: true\ncsl: apa-single-spaced.csl\nknitr:\n  opts_chunk: \n    message: false\n    warning: false\n    collapse: true\n    R.options:\n      knitr.graphics.auto_pdf: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# 용지규격\n\n현재 bitPublish의 기본 페이지 레이아웃\\index{페이지 레이아웃} 설정은 $4\\times6$ 배판으로 설계되었습니다. $4\\times6$ 배판 `판형`\\index{판형}의 레이아웃 설정을 변경하려면, `_extensions/bit2r/bitPublish/_extension.yml` 파일의 다음 행들을 수정합니다. `LaTeX`의 `geometry`\\index{geometry} 패키지를 사용합니다.\n\n[[Booktory 용지규격](http://www.booktory.com.cn/prm/print-in2.asp)]{.aside}\n\n:::{.panel-tabset}\n\n## $4\\times6$ 배판\n\n학위논문, 팬북 등\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n  geometry:       # 4x6 배판 도서를 위한 설정\n    - paper=a4paper\n    - layoutwidth=190mm\n    - layoutheight=260mm\n    - layouthoffset=10mm\n    - layoutvoffset=18.5mm\n    - showcrop\n    - top=20mm\n    - headsep=10mm             \n    - bottom=30mm\n    - footskip=15mm                 \n    - left=25mm\n    - right=25mm\n    - centering   \n```\n:::\n\n\n## 국배판(A4)\n\n학원교재\n\n## 국배배판(A3)\n\n포스터 등\n\n## 신국판\n\n소설, 수필, 자서전, 전문서적 등\n\n## 크라운판\n\n소설, 수필, 자서전, 전문서적 등\n\n## Letter\n\n해외대학 학위논문, 해외서적 등\n\n:::\n\n\n# 글꼴\n\nbitPublish는 전자책이 아닌 종이에 출력되는 책의 저작을 목적으로 만들어졌기 때문에, 폰트의 선택에서 `TTF`(`True Type Font`)\\index{TTF}\\index{True Type Font}가 아닌 `OTF`(`Open Type Font`)\\index{OTF}\\index{Open Type Font}를 선택하였습니다.\n\n:::{.callout-warning}\n\n#### 폰트 선정의 기준\n\n- 출판 시 발생할 라이센스 이슈\n    - **모든 폰트를 상업적으로 이용이 가능한 폰트로 선정**\n    - serif[^serif] 영어 폰트인 Times New Roman\\index{Times New Roman} 저작권의 이슈\n        - 가독성이 뛰어난 범용적인 세리프체로 영문 에세이와 학위 논문의 표준 폰트로 자리잡았으나\n        - 상업용으로 쓸 땐 저작권 면책 조건을 확인해야 함 \n    - sans-serif[^sans-serif] 영어 폰트인 Helvetica\\index{Helvetica} 저작권의 이슈\n        - 대표적인 산세리프 글꼴로 20세기에 널리 쓰였음  \n- 출판 인쇄물의 미적 완성도\n    - 가독성, 심미성 등  \n\n:::\n\n:::{.panel-tabset}\n\n#### 한국어 글꼴\n\n- serif 폰트:\n    - **KoPubWorld바탕체_Pro**\n- sans-serif 폰트:\n    - **KoPubWorld돋움체_Pro**\n    \n#### 영어 글꼴\n\n- serif 폰트:\n    - Times New Roman 대체 폰트\n    - **STIX Two Text**\n- sans-serif 폰트:\n    - **Nimbus Sans L**\n   \n#### 한자 글꼴\n\n- **KoPubWorld돋움체_Pro**\n \n#### 코딩 글꼴\n\n- mono space 폰트\n    - **D2Coding**\n       - 영어/한국어 모두 동일한 폰트 사용\n       - 영어 mono space\\index{mono space}와 한국어 mono space를 혼용하면 자간격이 틀어짐\n\n#### 수학 글꼴\n\n- STIX Two Math\n\n#### R 그래픽스 글꼴\n\n- 한국어 폰트\n    - **나눔스퀘어**\n- 영어 폰트\n    - **Nimbus Sans L**\n\n[^serif]: serif 폰트는 바탕체 폰트를 의미합니다. 글자의 획에서 부리처럼 날카롭게 튀어나온 부분을 `세리프`(`serif`)\\index{세리프}\\index{serif}라 합니다. 영어는 `로만체`, 한국어의 경우에는 과거에 `명조체`라는 이름으로 통용되던 `바탕체`\\index{바탕체} 서체를 의미합니다.\n[^sans-serif]: serif 폰트는 `돋움체`\\index{돋움체} 폰트를 의미합니다. 프랑스어로 sans는 \"~가 없이\"라는 뜻으로, `sans-serif`\\index{sans-serif}는 세리프가 없는 서체입니다. 한국어의 경우에는 과거에 `고딕체`라는 이름으로 통용되던 `돋움체`\\index{돋움체} 서체를 의미합니다.\n\n:::\n\n:::{.callout-warning}\n\n#### 주의사항\n\n모든 폰트는 \\_extensions/bit2r/bitPublish/fonts 디렉토리에 위치합니다. 그래서 따로 설치할 필요도 없고, 이미 설치된 폰트도 중복으로 위치하게 됩니다. 그리고 `KoPubWorld바탕체_Pro`와 `KoPubWorld돋움체_Pro` 폰트를 사용하기 위해서는 `한국출판인회의` 홈페이지인 https://forms.gle/aQU7b3EoaF53zMKaA에 사용자 정보를 등록 후 무료로 사용하실 수 있습니다. 이 경우에는 https://www.kopus.org/wp-content/uploads/2021/04/서체_라이센스.pdf 페이지의 라이센스를 일독하시기 바랍니다.\n:::\n\n# 머리글 바닥글\n\n`머리글`(`header`)\\index{머리글}\\index{header}과 `바닥글`(`footer`)\\index{바닥글}\\index{footer}는 `fancyhdr`\\index{fancyhdr} 패키지를 사용해서 정의하였습니다.\n\n\\_extensions/bit2r/bitPublish/_extension.yml 파일에 다음과 같이 설정되어 있습니다.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\usepackage{fancyhdr}\n\\pagestyle{fancy}\n\n중간 생략\n\n\\fancyhf{}\n\\fancyhead[EL]{\\changesize \\numberfont --- bitPublish를 이용하여}\n\\fancyhead[OR]{\\changesize \\numberfont 한글 책 조판하기 ---}\n\\fancyfoot[EL]{{\\pagefont\\thepage}{\\hskip4mm}{\\changesize \\leftmark}}\n\\fancyfoot[OR]{{\\changesize \\rightmark}{\\hskip4mm}{\\pagefont\\thepage}}\n```\n:::\n\n\n만약에 머리글과 바닥글의 모양을 바꾸려면 직접 LaTeX 스크립트를 수정하면 됩니다. 책의 제목을 바꾸기 위해서는 `fancyhead`\\index{fancyhead}의 `EL`\\index{EL}과 `OR`\\index{OR}을 변경하면 됩니다.\n\n# `bitPublish` 서식\n\n`bitPublish`는 본문에서 예제, 연습문제, 주의, 정보, 인용 등을 표현할 수 있는 여러 LaTeX 서식을 지원합니다. 이 서식은 다음과 같은 구조의 LaTeX `환경`\\index{환경}(`enviroment`\\index{enviroment})으로 제공합니다.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\begin{enviroment name}[optional argument]{main argument}\n  text of enviroment\n\\end{enviroment name}\n```\n:::\n\n\n또한 다음과 같은 LaTeX `명령`(`command`)으로도 제공합니다.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\command name[optional argument]{main argument} \n```\n:::\n\n\n## 멀티 아웃 포맷\n\nbitPublish 서식은 전자출판이 아닌, 종이로 된 서책의 출판을 염두에 둔 것이라서 LaTeX을 기반으로 서식을 정의합니다. 그러나 이 경우에는 종이 서책 출판을 위한 PDF 포맷은 지원하지만 전자책 위한 HTML 포맷을 지원하지 못하는 단점이 있습니다.  \n\nbitPublish 초기 버전에서 대부분의 서식은 LaTeX 출력을 지원하지만, 전자책을 위한 HTML 출력도 동시에 지원하는 `멀티 아웃 포맷`(`multiple output formats`)\\index{멀티 아웃 포맷}\\index{multiple output formats}으로 업그레이드하려 합니다. \n\n## 사용자 정의 블록\n\nbitPublish 서식의 대표적인 것에 `커스텀 블록`(`custom blocks`)\\index{사용자 정의 블록}\\index{custom blocks}[@rmcook]이 있습니다. 사용자 정의 블록은 보고서나 책의 일부 콘텐츠를 블록으로 정의하여 본문보다 돋보이게 하여 독자가 핵심 포인트를 쉽게 이해할 수 있도록 주목도를 높이는 서식입니다. \n\n사용자 정의 블록은 `팬독`의 `fenced Div blocks` 기능을 사용합니다. 이 기능은 Div 블록을 HTML과 LaTeX 모두로 변환해줍니다.\n\n다음의 `팬독` 사용자 정의 블록은,\n\n\n::: {.cell}\n\n```{.md .cell-code}\n::: {.verbatim data-latex=\"\"}\nWe show some _verbatim_ text here.\n:::\n```\n:::\n\n\nLaTeX 출력일 경우에는 다음과 같이 변환하고,\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\begin{verbatim}\nWe show some \\emph{verbatim} text here.\n\\end{verbatim}\n```\n:::\n\n\nHTML 출력일 경우에는 다음과 같이 변환해 줍니다.\n\n\n::: {.cell}\n\n```{.html .cell-code}\n<div class=\"verbatim\">\nWe show some <em>verbatim</em> text here.\n</div>\n```\n:::\n\n\n## 정보 블록\n\n정보 블록\\index{정보 블록}은 멀티 아웃 포맷을 지원하는데, 다음과 같은 네 개의 유형을 지원합니다. 네 개의 유형은 HTML과 LaTeX에서 우주 똑같은 모양은 아니지만, 거의 유사한 모습으로 출력됩니다.\n\n- 정보 \n    - information\n- 주의\n    - caution\n- 경고\n    - warning\n- 팁\n    - tip\n   \n멀티 아웃 포맷을 지원하기 위한 `팬독` 사용자 정의 블록의 구문은 다음과 같습니다. 그리고 정보 블록에 들어갈 내용은 마크다운 문법으로 기술해야 합니다.\n\n\n::: {.cell}\n\n```{.md .cell-code}\n::: {.infobox .<type> data-latex=\"{<type>}{<title>}\"}\ntext of infobox\n:::\n```\n:::\n\n\n\n## 정보 블록\n\n본문에서 서술하는 것보다 **유용한 정보**를 기술하는 데 사용하는 `정보`(`information`) `블록`\\index{정보 블록!정보 블록} 블록은 다음처럼 사용합니다. \n\n블록 청크의 옵션 중에 `data-latex`는 LaTeX에 전달하는 인수입니다. 정보(information)를 의미하는 .information와 {information}가 중복으로 기술된 것은, 멀티 아웃 포맷을 위한 것이므로 반드시 이 형식을 따라야 합니다.\n\n\n::: {.cell}\n\n```{.md .cell-code}\n::: {.infobox .information data-latex=\"{information}{information의 용도}\"}\ninformation은 독자에게 전하고 싶은 정보나 아이디어를 기술하는 데 사용합니다.\n짙은 회색 테두리에 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n환경의 내부에는 **Markdown**으로 문장을 기술합니다.\n:::\n```\n:::\n\n\n::: {.infobox .information data-latex=\"{information}{information의 용도}\"}\ninformation은 독자에게 전하고 싶은 정보나 아이디어를 기술하는 데 사용합니다.\n짙은 회색 테두리에 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n환경의 내부에는 **Markdown**으로 문장을 기술합니다.\n:::\n\n다음은 정보 블록에서 제목을 생략한 예제입니다. \n\n\n::: {.cell}\n\n```{.md .cell-code}\n::: {.infobox .information data-latex=\"{information}{}\"}\ninformation은 독자에게 전하고 싶은 정보나 아이디어를 기술하는 데 사용합니다.\n짙은 회색 테두리에 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n환경의 내부에는 **Markdown**으로 문장을 기술합니다.\n:::\n```\n:::\n\n\n::: {.infobox .information data-latex=\"{information}{}\"}\ninformation은 독자에게 전하고 싶은 정보나 아이디어를 기술하는 데 사용합니다.\n짙은 회색 테두리에 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n환경의 내부에는 **Markdown**으로 문장을 기술합니다..\n:::\n\ninfobox를 팬독 블록으로 정의할 경우 HTML에서는 제목이 출력되지 않는 버그[^bug]가 있습니다. 이 경우에는 다음처럼 기술하면 재목이 출력되는 멀티 아웃 포맷이 가능합니다. 즉, 본문에서 제목을 표현하는 방법입니다.\n\n[^bug]: 원인을 알고 있으나 저자의 웹 프로그래밍 기술적인 한계로 해결하지 못했음\n\n\n::: {.cell}\n\n```{.md .cell-code}\n::: {.infobox .information data-latex=\"{information}{}\"}\n**information의 용도**\n\ninformation은 독자에게 전하고 싶은 정보나 아이디어를 기술하는 데 사용합니다.\n짙은 회색 테두리에 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n환경의 내부에는 **Markdown**으로 문장을 기술합니다.\n:::\n```\n:::\n\n\n::: {.infobox .information data-latex=\"{information}{}\"}\n**information의 용도**\n\ninformation은 독자에게 전하고 싶은 정보나 아이디어를 기술하는 데 사용합니다.\n짙은 회색 테두리에 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n환경의 내부에는 **Markdown**으로 문장을 기술합니다.\n:::\n\n또 하나의 방법은 bitPublish가 제공하는 사용자 정의 R 함수 custom\\_block()를 사용하는 방법이 있습니다.\n\n\n::: {.cell}\n\n```{.md .cell-code}\ncustom_block(msg, type, title)\n```\n:::\n\n\n\n\n이 방법도 멀티 아웃 포맷을 지원합니다. 다음과 같은 `knitr` 청크를 이용합니다.\n\n\n```{{r}}\n#| echo: false\n#| results: asis\ncustom_block(\"\n**information**은 본문에서 서술하는 것보다 **유용한 정보**를 기술하는 데 사용합니다. \n파란색 테두리와 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n블록 내부를 채울 텍스트는 **Markdown 문법**으로 기술합니다.\n\", title = \"information의 용도\", type = \"information\")\n```\n\n사용자 정의 함수인 custom\\_block()를 사용하기 위해서는 사전에 다음처럼 init_environments.R 파일을 로드해야 합니다.\n\n\n```{{r}}\n#| label: init\n#| include: false\nsource(here::here(\"_extensions\", \"bit2r\", \"bitPublish\", \"init_environments.R\"))\n```\n\n\n### 주의 블록\n\n당부하고 싶은 **주의사항**을 기술하는 데 사용하는 `주의`(`caution`) `블록`\\index{정보 블록!주의 블록}은 다음처럼 사용합니다. \n\n\n::: {.cell}\n\n```{.md .cell-code}\n::: {.infobox .caution data-latex=\"{caution}{}\"}\n**caution의 용도**\n\n**caution**은 당부하고 싶은 **주의사항**을 기술하는 데 사용합니다. \n주황색 테두리에 주의를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n블록 내부를 채울 텍스트는 **Markdown 문법**으로 기술합니다.\n:::\n```\n:::\n\n\n::: {.infobox .caution data-latex=\"{caution}{}\"}\n**caution의 용도**\n\n**caution**은 당부하고 싶은 **주의사항**을 기술하는 데 사용합니다. \n주황색 테두리에 주의를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n블록 내부를 채울 텍스트는 **Markdown 문법**으로 기술합니다.\n:::\n\n\n### 경고 블록\n\n주의사항보다 더 치명적인 문제를 야기할 **경고**를 기술하는 데 사용하는 `경고`(`warning`) `블록`\\index{정보 블록!경고 블록}은 다음처럼 사용합니다. \n\n\n::: {.cell}\n\n```{.md .cell-code}\n::: {.infobox .warning data-latex=\"{warning}{}\"}\n**warning의 용도**\n\n**warning**은 주의사항보다 더 치명적인 문제를 야기할 **경고**를 기술하는 데 사용합니다. \n붉은색 테두리에 폭탄을 표현한 아이콘을 배치하여 주위를 환기시킵니다.\n블록 내부를 채울 텍스트는 **Markdown 문법**으로 기술합니다.\n:::\n```\n:::\n\n\n\n::: {.infobox .warning data-latex=\"{warning}{}\"}\n**warning의 용도**\n\n**warning**은 주의사항보다 더 치명적인 문제를 야기할 **경고**를 기술하는 데 사용합니다. \n붉은색 테두리에 폭탄을 표현한 아이콘을 배치하여 주위를 환기시킵니다.\n블록 내부를 채울 텍스트는 **Markdown 문법**으로 기술합니다.\n:::\n\n\n### 팁 블록\n\n유용하게 사용할 수 있는 **아이디어나 비법**을 설명하는 데 사용하는 `팁`(`tip`) `블록`\\index{정보 블록!팁 블록}은 다음처럼 사용합니다. \n\n\n::: {.cell}\n\n```{.md .cell-code}\n::: {.infobox .tip data-latex=\"{tip}{}\"}\n**tip의 용도**\n\n**tip**은 유용하게 사용할 수 있는 **아이디어나 비법**을 기술하는 데 사용합니다. \n초록색 테두리에 아이디어를 나타내는 전구 아이콘을 배치하여 주위를 환기시킵니다.\n블록 내부를 채울 텍스트는 **Markdown 문법**으로 기술합니다.\n:::\n```\n:::\n\n\n::: {.infobox .tip data-latex=\"{tip}{}\"}\n**tip의 용도**\n\n**tip**은 유용하게 사용할 수 있는 **아이디어나 비법**을 기술하는 데 사용합니다. \n초록색 테두리에 아이디어를 나타내는 전구 아이콘을 배치하여 주위를 환기시킵니다.\n블록 내부를 채울 텍스트는 **Markdown 문법**으로 기술합니다.\n:::\n\n\n## 이야기 박스\n\n`shadequote` 환경을 이용합니다. 이야기 박스 구문은 다음과 같습니다.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\begin{shadequote}[<alignment>]{<author>}\n  text of quote\n\\end{shadequote}\n```\n:::\n\n\n다음처럼 괄호를 비우면, 저자의 이야기를 표시합니다. \n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\begin{shadequote}{}\n나는 통계계산이 수리영역인 줄만 알았다. 그런데, 이제는 논리적인 사고도 필요한\n논리영역임을 느낀다. 그래서 논리적 사고로 통계적 데이터 분석을 위한 성능 좋은\n연장이 필요하기 시작했다.\n\\end{shadequote}\n```\n:::\n\n```{=tex}\n\\begin{shadequote}[r]{}\n통상적으로 많은 사람들은 `수준을 등급의 높고 낮음을 의미하는 가치의 척도'로 인식하고 있다. 그러나 통계학계에서는 levels을 수준으로 직역하여 사용해 왔다. 혼동스럽다면, \\textbf{수준을 범주형 데이터의 범주로 이해}하기 바란다.\n\\end{shadequote}\n```\n\n\n명사의 명언을 인용하여 이야기할 경우에는 명사의 이름을 첫째 괄호에 기입합니다. 이 예제는 명사의 이름을 오른쪽 정렬하였습니다.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\begin{shadequote}[r]{스피노자}\n자신은 할 수 없다고 생각하는 동안 사실은 그것을 하기 싫다고 다짐하고 있는 것이다.\n\\end{shadequote}\n```\n:::\n\n```{=tex}\n\\begin{shadequote}[r]{스피노자}\n자신은 할 수 없다고 생각하는 동안 사실은 그것을 하기 싫다고 다짐하고 있는 것이다.\n\\end{shadequote}\n```\n\n\n\n## 타이틀 박스\n\n앞의 예제에서 `학습목표'를 정의한 박스 서식을 타이틀 박스라 부르겠습니다. 여러 용도로 사용될 수 있어 목적으로 이름을 특정할 수 없기 때문입니다. 학습 시나리오, 학습의 목표든 상관없습니다.\n\n다음과 같은 LaTeX `명령`으로 제공합니다.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\snbox{text of title}{title fill color}{box fill color}{text of box} \n```\n:::\n\n\n다음 명령은 `학습 목표`라는 타이틀을 갖는 박스를 생성합니다.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\snbox{학습 목표}{blue!30}{blue!10}{데이터의 분류 체계로서의 척도를 이해하고, \n이를 기반으로 한 R 데이터 객체를 이해한다. CSV 파일을 읽고, 데이터 프레임 \n객체로 CSV 파일을 생성할 수 있다.}\n```\n:::\n\n```{=tex}\n\\snbox{학습 목표}{blue!30}{blue!10}{데이터의 분류 체계로서의 척도를 이해하고, 이를 기반으로 한 R 데이터 객체를 이해한다. CSV 파일을 읽고, 데이터 프레임 객체로 CSV 파일을 생성할 수 있다.}\n```\n\n\n## 예제\n\n`example` 환경을 이용합니다. 인용의 구문은 다음과 같습니다.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\begin{example}{number of example}\n  text of example\n\\end{example}\n```\n:::\n\n\n그러나 예제는 다음처럼 생각보다 복잡합니다.\n\n- 장(chapter)에서 여러 예제가 있어서, 번호를 매겨야 한다.\n    - 번호는 자동으로 채번되어야 추가 및 제거 시 번호의 오류를 줄인다.\n- 예제를 본문이나 다른 예제에서 참조하는 경우가 있다.\n    - `크로스-레퍼런스`\\index{크로스-레퍼런스}(`cross-reference`)\\index{cross-reference}를 지원해야 한다.\n\n예제를 위해서 다음과 같이 장(chapter)의 시작부분에 환경변수를 정의해야 합니다. 장의 라벨과 예제의 순번을 위한 카운더를 설정했습니다.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\label{chap:bitpublish}                    % 장 라벨 정의\n\\newcounter{exam_num_bitpub}               % 새로운 카운터 생성\n\\setcounter{exam_num_bitpub}{0}            % 카운터 값 0으로 초기화\n```\n:::\n\n\n다음은 예제를 위한 환경 설정과 예제를 구현하는 예제입니다. 크로스-레퍼런스를 위해서 예제에 대해서 `ex1`이라는 라벨을 `example` 환경 안에서 정의한 것을 주의깊게 보십시오.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\addtocounter{exam_num_bitpub}{1}          % 예제를 위한 카운터 1 증가\n\\begin{example}{\\ref{chap:bitpublish}.\\arabic{exam_num_bitpub}}\n\\examplelabel{ex1}{\\ref{chap:bitpublish}.\\arabic{exam_num_bitpub}}\nbitPublish의 서식 중에서 예제, 연습문제, 주의, 정보, 인용을 만들어 보아라.\n\\end{example}\n```\n:::\n\n```{=tex}\n\\addtocounter{exam_num_bitpub}{1}         \n\\begin{example}{\\ref{chap:bitpublish}.\\arabic{exam_num_bitpub}}\n\\examplelabel{ex1}{\\ref{chap:bitpublish}.\\arabic{exam_num_bitpub}}\nbitPublish의 서식 중에서 예제, 연습문제, 주의, 정보, 인용을 만들어 보아라.\n\\end{example}\n```\n\n\n`ex1`이라는 라벨을 레퍼런스하는 방법은 다음과 같습니다.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n예제 \\ref{ex1}를 레퍼런스하기 위해서는 레퍼런스 명령 \\ref{}를 사용합니다.\n```\n:::\n\n\n예제 \\ref{ex1}를 레퍼런스하기 위해서는 레퍼런스 명령 \\\\ref{}를 사용합니다.\n\n\n## 연습문제\n\n기술서나 학습서의 경우에는 연습문제를 제공하는 경우가 많습니다. bitPublish에서 연습문제 서식은 `Exercise` 환경을 이용합니다. \n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\begin{Exercise}\n  text of exercise\n\\end{Exercise}\n```\n:::\n\n\n또한 연습문제의 내용을 위해서 `tasks` 환경과 `task`\\index{tasks} 명령을 사용할 수 있습니다.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\begin{tasks}[label](1)\n \\task text of task\n \\task text of task\n\\end{tasks}\n```\n:::\n\n\n다음 명령은 예제 장에서 사용한 연습문제를 기술한 LaTeX 스크립트입니다.\n\n\n::: {.cell}\n\n```{.tex .cell-code}\n\\begin{Exercise}\\label{EX2}\n\\noindent 1. 다음의 데이터를 R의 객체로 만들어 보아라.\n\\begin{tasks}[label=(\\arabic*)](1)\n \\task 합격, 불합격, 불합격, 합격, 불합격\n \\task 1등급, 2등급, 3등급, 2등급, 5등급, 3등급, 4등급, 4등급, 3등급, 3등급\n \\task 12㎝, 23㎝, 32㎝, 22㎝, 19㎝, 21㎝, 20㎝\n\\end{tasks}\n\n\\noindent 2. 다음의 데이터 객체를 외부 파일로 출력해 보아라.\n\\begin{tasks}[label=(\\arabic*)](1)\n \\task R의 datas 패키지에 포함되어 있는 women 데이터 프레임을 women.csv 파일로 출력해 보아라.\n \\task (1)의 파일을 다시 읽어 들여서 women2라는 이름의 데이터 프레임을 만들어라.\n\\end{tasks}\n\\end{Exercise}\n```\n:::\n\n```{=tex}\n\\begin{Exercise}\\label{EX2}\n\\noindent 1. 다음의 데이터를 R의 객체로 만들어 보아라.\n\\begin{tasks}[label=(\\arabic*)](1)\n \\task 합격, 불합격, 불합격, 합격, 불합격\n \\task 1등급, 2등급, 3등급, 2등급, 5등급, 3등급, 4등급, 4등급, 3등급, 3등급\n \\task 12㎝, 23㎝, 32㎝, 22㎝, 19㎝, 21㎝, 20㎝\n\\end{tasks}\n\n\\noindent 2. 다음의 데이터 객체를 외부 파일로 출력해 보아라.\n\\begin{tasks}[label=(\\arabic*)](1)\n \\task R의 datas 패키지에 포함되어 있는 women 데이터 프레임을 women.csv 파일로 출력해 보아라.\n \\task (1)의 파일을 다시 읽어 들여서 women2라는 이름의 데이터 프레임을 만들어라.\n\\end{tasks}\n\\end{Exercise}\n```\n\n\n만약에 연습문제를 별도의 페이지에서 시각하고 싶다면 \\\\clearpage 명령어를 사용하면 됩니다.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}