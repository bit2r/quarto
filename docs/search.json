[
  {
    "objectID": "computation/index.html",
    "href": "computation/index.html",
    "title": "코딩 (계산)",
    "section": "",
    "text": "기존 특정 언어에 긍정적으로 보면 친화적인 부정적으로 보면 종속된 통합개발환경(IDE)를 활용하여 데이터 사이언스 개발작업을 수행했다면 다양한 언어를 활용하여 해당 문제를 해결해야하는 세상으로 급격히 넘어감에 따라 통합개발환경에 대한 이해도 새로 정립해야될 필요성이 부각되고 있다.\n\n\n특정 언어(C/C++, 자바스크립트, 파이썬, R, SQL 등)를 지원하는 통합개발환경이 존재하지만 특정언어에 많은 노력을 투여하는 개발자가 존재하는 반면 여러 언어를 통합개발하는 경우도 있어 각 업무별로 최적화된 통합개발환경 선정도 중요하다. 예를 들어, C/C++ 개발자는 코드블록, 자바스크립트는 웹스톰 혹은 VS 코드, 파이썬 개발자는 파이참, 주피터, R 개발자는 RStudio, SQL 개발자는 DB Visualizer 가 많은 개발자를 확보하고 있다.\n\n\n\n언어에 특화된 전용 통합개발환경\n\n\n\n\n\n특정 언어를 타지 않고 다양한 언어를 두루 지원하는 통합개발환경(RStudio, VS Code, 주피터, Vim/Emacs)을 활용하여 데이터 과학 저작이 가능하다. R/파이썬/SQL/자바스크립트 등 다양한 언어를 통합개발환경에서 유연하게 작업을 도와줄 수 있는 기능을 갖춘 도구가 필요하다."
  },
  {
    "objectID": "computation/matplotlib.html",
    "href": "computation/matplotlib.html",
    "title": "Matplotlib 사례",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\nFigure 1: 극좌표축을 갖는 선 그래프"
  },
  {
    "objectID": "digital-writing-example.html",
    "href": "digital-writing-example.html",
    "title": "디지털 글쓰기",
    "section": "",
    "text": "디지털 글쓰기\n디지털 글쓰기는 최근 들어 무척이나 관심을 가지고 있다.\n\n\n디지털 표 그리기\n디지털 글쓰기의 중요 요소인 표를 삽입해보자.\n\n\n\n구분\n설명\n비고\n\n\n\n\n동물\n개\n동물… 그리고 사람 비교\n\n\n동물\n고양이\n개 vs 고양이\n\n\n사람\n철수\n서울시 거주\n\n\n\n\n\n이미지도 삽입해야 합니다.\n\n\n\n상자이미지"
  },
  {
    "objectID": "hangul_encoding.html",
    "href": "hangul_encoding.html",
    "title": "한글 인코딩",
    "section": "",
    "text": "스마트폰의 대중화에 따라 더이상 윈도우 운영체제에서 사용되는 문자체계가 더이상 표준이 되지 못하고 여러 문제점을 야기함에 따라 유니코드 + UTF-8 체제가 대세로 자리잡고 있는 것이 확연히 나타나고 있다.\n2010년 구글에서 발표한 자료에 의하면 2010년 UTF-8 인코딩이 웹에서 주류로 부상하기 시작한 것이 확인되었다. (Davis, 2010) 웹기반 플롯 디지털 도구를 활용하여 그래프(WebPlotDigitizer)에서 데이터를 추출하여 시각화면 유사한 결과를 시각적으로 표현할 수 있다.\n데이터 출처: Historical yearly trends in the usage statistics of character encodings for websites\n2010년 이후 웹에서 가장 점유율이 높은 인코딩 방식은 UTF-8으로 W3Tech Web Technology Surveys 를 통해 확인을 할 수 있다.\n\n\nCode\nlibrary(tidyverse)\nextrafont::loadfonts()\n\n## 1. 2000년부터 웹 인코딩 추세 ------------------\nascii <- read_csv(\"data/ascii_red.csv\", col_names = FALSE) %>% \n  set_names(c(\"연도\", \"ascii\"))\n\nascii_tbl <- ascii %>% \n  mutate(연도 = floor(연도)) %>% \n  group_by(연도) %>% \n  summarize(ascii = mean(ascii))\n\niso_8859 <- read_csv(\"data/iso_orange.csv\", col_names = FALSE) %>% \n  set_names(c(\"연도\", \"iso_8859\"))\n\niso_8859_tbl <- iso_8859 %>% \n  mutate(연도 = floor(연도)) %>% \n  group_by(연도) %>% \n  summarize(iso_8859 = mean(iso_8859))\n\nutf_8 <- read_csv(\"data/utf-8_blue.csv\", col_names = FALSE) %>% \n  set_names(c(\"연도\", \"utf_8\"))\n\nutf_8_tbl <- utf_8 %>% \n  mutate(연도 = floor(연도)) %>% \n  group_by(연도) %>% \n  summarize(utf_8 = mean(utf_8, na.rm = FALSE)) \n\nencoding_tbl <- left_join(ascii_tbl, iso_8859_tbl) %>% \n  left_join(utf_8_tbl) %>% \n  pivot_longer(cols = -연도) %>% \n  mutate(value = ifelse(is.na(value), 0, value)) %>% \n  filter(연도 <= 2009)\n\nencoding_2010_g <- encoding_tbl %>% \n  mutate(연도 = lubridate::make_date(year = 연도)) %>% \n  ggplot(aes(x = 연도, y = value, color = name)) +\n    geom_line() +\n    geom_point() +\n    theme_bw(base_family = \"MaruBuri\") +\n    labs(x = \"\",\n         y = \"점유율(%)\",\n         title = \"웹에서 UTF-8 성장세\",\n         subtitle = \"2010 ~ 2010년\",\n         color = \"인코딩\") +\n    scale_y_continuous(labels = scales::percent) +\n    scale_color_manual(values = c(\"ascii\" = \"gray50\", \"iso_8859\" = \"red\", \"utf_8\" = \"blue\")) +\n  theme(legend.position = \"top\") +\n  expand_limits(y = c(0, 1))\n\n## 2. 2010년부터 웹 인코딩 추세 ------------------\nlibrary(readxl)\n\nencoding_raw <- read_excel(\"data/web_encoding.xlsx\", \n                           col_types = \"text\")\n\nencoding_web <- encoding_raw %>% \n  janitor::clean_names(ascii = FALSE) %>% \n  pivot_longer(cols = -구분, names_to = \"연도\", values_to = \"점유율\") %>% \n  mutate(연도 = str_extract(연도, \"\\\\d{4}\") %>% as.integer(.)) %>% \n  mutate(점유율 = parse_number(점유율)) %>% \n  group_by(구분, 연도) %>% \n  summarise(점유율 = min(점유율, na.rm = TRUE)) %>% \n  ungroup()\n\nencoding_2022_g <- encoding_web %>% \n  filter(구분 %in% c(\"EUC-KR\", \"GB2312\", \"Shift JIS\", \"UTF-8\", \"ISO-8859-1\")) %>% \n  mutate(연도 = lubridate::make_date(year = 연도)) %>%   \n  ggplot(aes(x = 연도, y = 점유율, color = 구분)) +\n    geom_line() +\n    geom_point() +\n    theme_bw(base_family = \"MaruBuri\") +\n    labs(x = \"\",\n         y = \"점유율(%)\",\n         title = \"웹에서 UTF-8 성장세\",\n         subtitle = \"2011 ~ 2012년 3분기\",\n         color = \"인코딩\") +\n    scale_y_continuous(labels = scales::percent) +\n    scale_color_manual(values = c(\"EUC-KR\" = \"gray50\", \"GB2312\" = \"gray80\", \"Shift JIS\" = \"gray70\", \"ISO-8859-1\" = \"red\", \"UTF-8\" = \"blue\")) +\n  theme(legend.position = \"top\")   +\n  expand_limits(y = c(0, 1))\n\n## 3. 시각화 요약 ------------------\nlibrary(patchwork)\n\nencoding_2010_g + encoding_2022_g"
  },
  {
    "objectID": "hangul_encoding.html#ascii-문자",
    "href": "hangul_encoding.html#ascii-문자",
    "title": "한글 인코딩",
    "section": "4.1 ASCII 문자",
    "text": "4.1 ASCII 문자\nASCII 총 \\(2^7=128\\) 문자 중 제어문자를 제외한 출력가능한 문자를 뽑아보자.\n\n\nCode\ncoderange <- c(33:126)\n\nascii_table <- tibble(\n 십진수   = coderange,\n 십육진수 = as.raw(coderange),\n 문자     = rawToChar(as.raw(coderange), multiple=TRUE),\n 이진수   = pryr::bits(문자, split = TRUE)\n) %>% \n  relocate(문자, .before = 십진수)\n\nascii_table %>% \n  slice_sample(n=30)\n\n\n# A tibble: 30 × 4\n   문자  십진수 십육진수 이진수  \n   <chr>  <int> <raw>    <chr>   \n 1 \"I\"       73 49       01001001\n 2 \"3\"       51 33       00110011\n 3 \"z\"      122 7a       01111010\n 4 \"S\"       83 53       01010011\n 5 \"#\"       35 23       00100011\n 6 \">\"       62 3e       00111110\n 7 \"\\\\\"      92 5c       01011100\n 8 \"b\"       98 62       01100010\n 9 \"w\"      119 77       01110111\n10 \"=\"       61 3d       00111101\n# … with 20 more rows\n\n\n출력가능한 ASCII 문자표를 33번부터 126번까지 문자 십진수 이진수 순으로 출력하면 다음과 같다.\n\n\nCode\nlibrary(mmtable2) # devtools::install_github(\"ianmoran11/mmtable2\")\n\nascii_table %>% \n  mutate(index = row_number()) %>% \n  mutate(x_grp = index %/% 10 ) %>%\n  mutate(y_grp = index %% 10 ) %>% \n  group_by(x_grp, y_grp) %>%\n  summarise(문자 = glue::glue(\"{문자} {십진수} {이진수}\") ) %>%\n  ungroup() %>%\n  mmtable(cells = 문자) +\n  header_left(x_grp) +\n  header_top(y_grp)\n\n\n\n\n\n\n  \n  \n    \n       \n        \n         \n          \n           \n            \n             \n              \n               \n                \n                 \n    \n  \n  \n    \n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n    0\n \n! 33 00100001\n\" 34 00100010\n# 35 00100011\n$ 36 00100100\n% 37 00100101\n& 38 00100110\n' 39 00100111\n( 40 00101000\n) 41 00101001\n    1\n* 42 00101010\n+ 43 00101011\n, 44 00101100\n- 45 00101101\n. 46 00101110\n/ 47 00101111\n0 48 00110000\n1 49 00110001\n2 50 00110010\n3 51 00110011\n    2\n4 52 00110100\n5 53 00110101\n6 54 00110110\n7 55 00110111\n8 56 00111000\n9 57 00111001\n: 58 00111010\n; 59 00111011\n< 60 00111100\n= 61 00111101\n    3\n> 62 00111110\n? 63 00111111\n@ 64 01000000\nA 65 01000001\nB 66 01000010\nC 67 01000011\nD 68 01000100\nE 69 01000101\nF 70 01000110\nG 71 01000111\n    4\nH 72 01001000\nI 73 01001001\nJ 74 01001010\nK 75 01001011\nL 76 01001100\nM 77 01001101\nN 78 01001110\nO 79 01001111\nP 80 01010000\nQ 81 01010001\n    5\nR 82 01010010\nS 83 01010011\nT 84 01010100\nU 85 01010101\nV 86 01010110\nW 87 01010111\nX 88 01011000\nY 89 01011001\nZ 90 01011010\n[ 91 01011011\n    6\n\\ 92 01011100\n] 93 01011101\n^ 94 01011110\n_ 95 01011111\n` 96 01100000\na 97 01100001\nb 98 01100010\nc 99 01100011\nd 100 01100100\ne 101 01100101\n    7\nf 102 01100110\ng 103 01100111\nh 104 01101000\ni 105 01101001\nj 106 01101010\nk 107 01101011\nl 108 01101100\nm 109 01101101\nn 110 01101110\no 111 01101111\n    8\np 112 01110000\nq 113 01110001\nr 114 01110010\ns 115 01110011\nt 116 01110100\nu 117 01110101\nv 118 01110110\nw 119 01110111\nx 120 01111000\ny 121 01111001\n    9\nz 122 01111010\n{ 123 01111011\n| 124 01111100\n} 125 01111101\n~ 126 01111110"
  },
  {
    "objectID": "hangul_encoding.html#확장-ascii-문자",
    "href": "hangul_encoding.html#확장-ascii-문자",
    "title": "한글 인코딩",
    "section": "4.2 확장 ASCII 문자",
    "text": "4.2 확장 ASCII 문자\n확장 ASCII 총 \\(2^8=256\\) 문자 중 앞선 기본 ASCII를 제외한 나머지 확장문자표를 출력해보자.\n\n\nCode\ncoderange <- c(161:255)\n# iconv(extendedascii, from=\"Windows-1252\", to=\"UTF-8\") \n\nextended_ascii_table <- tibble(\n 십진수   = coderange,\n 십육진수 = as.raw(coderange),\n 문자     = rawToChar(as.raw(coderange), multiple=TRUE),\n 이진수   = pryr::bits(문자, split = TRUE)\n) %>% \n  relocate(문자, .before = 십진수) %>% \n  mutate(문자 = str_conv(문자, encoding = \"latin-1\")) \n\nextended_ascii_table  %>% \n  slice_sample(n=30)\n\n\n# A tibble: 30 × 4\n   문자  십진수 십육진수 이진수  \n   <chr>  <int> <raw>    <chr>   \n 1 ¤        164 a4       10100100\n 2 ÷        247 f7       11110111\n 3 æ        230 e6       11100110\n 4 Þ        222 de       11011110\n 5 ®        174 ae       10101110\n 6 Ý        221 dd       11011101\n 7 Ô        212 d4       11010100\n 8 Ä        196 c4       11000100\n 9 ¸        184 b8       10111000\n10 ç        231 e7       11100111\n# … with 20 more rows\n\n\n\n\nCode\nlibrary(mmtable2) # devtools::install_github(\"ianmoran11/mmtable2\")\n\nextended_ascii_table %>% \n  mutate(index = row_number()) %>% \n  mutate(x_grp = index %/% 10 ) %>%\n  mutate(y_grp = index %% 10 ) %>% \n  group_by(x_grp, y_grp) %>%\n  summarise(문자 = glue::glue(\"{문자}\\n{십진수}\\n {이진수}\") ) %>%\n  ungroup() %>%\n  ggplot(aes(x=x_grp, y=y_grp)) +\n    geom_text(aes(label = 문자), size = 3) +\n    theme_void(base_family = \"MaruBuri\")\n\n\n\n\n\n\n\n\n\n[참조: Ascii code table in R], ASCII Table with All 256 Character codes in decimal, hexadecimal, octal and binary"
  },
  {
    "objectID": "hangul_encoding.html#유니코드",
    "href": "hangul_encoding.html#유니코드",
    "title": "한글 인코딩",
    "section": "4.3 유니코드",
    "text": "4.3 유니코드\nUnicode 패키지를 통해서 유니코드에 등록된 문자를 확인할 수 있다.\n\n\nCode\nlibrary(Unicode)\nlibrary(rlang)\n\nall_scripts <- u_scripts()\nnames(all_scripts)\n\n\n  [1] \"Adlam\"                  \"Ahom\"                   \"Anatolian_Hieroglyphs\" \n  [4] \"Arabic\"                 \"Armenian\"               \"Avestan\"               \n  [7] \"Balinese\"               \"Bamum\"                  \"Bassa_Vah\"             \n [10] \"Batak\"                  \"Bengali\"                \"Bhaiksuki\"             \n [13] \"Bopomofo\"               \"Brahmi\"                 \"Braille\"               \n [16] \"Buginese\"               \"Buhid\"                  \"Canadian_Aboriginal\"   \n [19] \"Carian\"                 \"Caucasian_Albanian\"     \"Chakma\"                \n [22] \"Cham\"                   \"Cherokee\"               \"Chorasmian\"            \n [25] \"Common\"                 \"Coptic\"                 \"Cuneiform\"             \n [28] \"Cypriot\"                \"Cypro_Minoan\"           \"Cyrillic\"              \n [31] \"Deseret\"                \"Devanagari\"             \"Dives_Akuru\"           \n [34] \"Dogra\"                  \"Duployan\"               \"Egyptian_Hieroglyphs\"  \n [37] \"Elbasan\"                \"Elymaic\"                \"Ethiopic\"              \n [40] \"Georgian\"               \"Glagolitic\"             \"Gothic\"                \n [43] \"Grantha\"                \"Greek\"                  \"Gujarati\"              \n [46] \"Gunjala_Gondi\"          \"Gurmukhi\"               \"Han\"                   \n [49] \"Hangul\"                 \"Hanifi_Rohingya\"        \"Hanunoo\"               \n [52] \"Hatran\"                 \"Hebrew\"                 \"Hiragana\"              \n [55] \"Imperial_Aramaic\"       \"Inherited\"              \"Inscriptional_Pahlavi\" \n [58] \"Inscriptional_Parthian\" \"Javanese\"               \"Kaithi\"                \n [61] \"Kannada\"                \"Katakana\"               \"Kawi\"                  \n [64] \"Kayah_Li\"               \"Kharoshthi\"             \"Khitan_Small_Script\"   \n [67] \"Khmer\"                  \"Khojki\"                 \"Khudawadi\"             \n [70] \"Lao\"                    \"Latin\"                  \"Lepcha\"                \n [73] \"Limbu\"                  \"Linear_A\"               \"Linear_B\"              \n [76] \"Lisu\"                   \"Lycian\"                 \"Lydian\"                \n [79] \"Mahajani\"               \"Makasar\"                \"Malayalam\"             \n [82] \"Mandaic\"                \"Manichaean\"             \"Marchen\"               \n [85] \"Masaram_Gondi\"          \"Medefaidrin\"            \"Meetei_Mayek\"          \n [88] \"Mende_Kikakui\"          \"Meroitic_Cursive\"       \"Meroitic_Hieroglyphs\"  \n [91] \"Miao\"                   \"Modi\"                   \"Mongolian\"             \n [94] \"Mro\"                    \"Multani\"                \"Myanmar\"               \n [97] \"Nabataean\"              \"Nag_Mundari\"            \"Nandinagari\"           \n[100] \"New_Tai_Lue\"            \"Newa\"                   \"Nko\"                   \n[103] \"Nushu\"                  \"Nyiakeng_Puachue_Hmong\" \"Ogham\"                 \n[106] \"Ol_Chiki\"               \"Old_Hungarian\"          \"Old_Italic\"            \n[109] \"Old_North_Arabian\"      \"Old_Permic\"             \"Old_Persian\"           \n[112] \"Old_Sogdian\"            \"Old_South_Arabian\"      \"Old_Turkic\"            \n[115] \"Old_Uyghur\"             \"Oriya\"                  \"Osage\"                 \n[118] \"Osmanya\"                \"Pahawh_Hmong\"           \"Palmyrene\"             \n[121] \"Pau_Cin_Hau\"            \"Phags_Pa\"               \"Phoenician\"            \n[124] \"Psalter_Pahlavi\"        \"Rejang\"                 \"Runic\"                 \n[127] \"Samaritan\"              \"Saurashtra\"             \"Sharada\"               \n[130] \"Shavian\"                \"Siddham\"                \"SignWriting\"           \n[133] \"Sinhala\"                \"Sogdian\"                \"Sora_Sompeng\"          \n[136] \"Soyombo\"                \"Sundanese\"              \"Syloti_Nagri\"          \n[139] \"Syriac\"                 \"Tagalog\"                \"Tagbanwa\"              \n[142] \"Tai_Le\"                 \"Tai_Tham\"               \"Tai_Viet\"              \n[145] \"Takri\"                  \"Tamil\"                  \"Tangsa\"                \n[148] \"Tangut\"                 \"Telugu\"                 \"Thaana\"                \n[151] \"Thai\"                   \"Tibetan\"                \"Tifinagh\"              \n[154] \"Tirhuta\"                \"Toto\"                   \"Ugaritic\"              \n[157] \"Vai\"                    \"Vithkuqi\"               \"Wancho\"                \n[160] \"Warang_Citi\"            \"Yezidi\"                 \"Yi\"                    \n[163] \"Zanabazar_Square\"      \n\n\n\n4.3.1 영문자\n영문자를 유니코드에서 찾아 살펴보자. 영문자는 라틴 계열이라 라틴계열에 포함된 문자를 뽑아서 유니코드 범위를 정해서 유니코드 범위에 포함된 문자를 사람이 읽을 수 있는 문자로 화면에 일부만 출력한다.\n코드 참조: How to generate all possible unicode characters?\n\n\nCode\nlatin_char <-  u_scripts('Latin')\n\nlatin_char_length <- map(latin_char, n_of_u_chars)\n\nshow_characters <- function(i) {\n  expand_ranges <- as.u_char_seq(latin_char$Latin[i])\n  unicode_chars <- unlist(expand_ranges)\n  intToUtf8(unicode_chars)\n}\n\nmap_chr(1:10, show_characters)\n\n\n [1] \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"                                                                                                                                                                                             \n [2] \"abcdefghijklmnopqrstuvwxyz\"                                                                                                                                                                                             \n [3] \"ª\"                                                                                                                                                                                                                     \n [4] \"º\"                                                                                                                                                                                                                     \n [5] \"ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ\"                                                                                                                                                                                              \n [6] \"ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö\"                                                                                                                                                                                   \n [7] \"øùúûüýþÿĀāĂăĄąĆćĈĉĊċČčĎďĐđĒēĔĕĖėĘęĚěĜĝĞğĠġĢģĤĥĦħĨĩĪīĬĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŁłŃńŅņŇňŉŊŋŌōŎŏŐőŒœŔŕŖŗŘřŚśŜŝŞşŠšŢţŤťŦŧŨũŪūŬŭŮůŰűŲųŴŵŶŷŸŹźŻżŽžſƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏƐƑƒƓƔƕƖƗƘƙƚƛƜƝƞƟƠơƢƣƤƥƦƧƨƩƪƫƬƭƮƯưƱƲƳƴƵƶƷƸƹƺ\"\n [8] \"ƻ\"                                                                                                                                                                                                                      \n [9] \"Ƽƽƾƿ\"                                                                                                                                                                                                                   \n[10] \"ǀǁǂǃ\"                                                                                                                                                                                                                   \n\n\n\n\n4.3.2 한글\n동일하게 유니코드에 등록된 한글도 확인해보자. 한글완성형으로 한글 유니코드 7번째 블록에 11,172 개 글자가 등록되어 있어 이를 제외한 한글을 뽑아보자.\n\n\nCode\nhangul_scripts <- u_scripts('Hangul')\n\nhangul_char_length <- map(hangul_scripts, n_of_u_chars)\n\nmap(hangul_scripts, n_of_u_chars)\n\n\n$Hangul\n [1]   256     2    94    31    31    29 11172    23    49    31     6     6\n[13]     6     3\n\n\nCode\nexpand_ranges <- as.u_char_seq(hangul_scripts$Hangul[7])\n\nshow_hangul <- function(i) {\n  expand_ranges <- as.u_char_seq(hangul_scripts$Hangul[i])\n  unicode_chars <- unlist(expand_ranges)\n  intToUtf8(unicode_chars)\n}\n\nmap_chr(c(1:6,8:14), show_hangul)\n\n\n [1] \"ᄀᄁᄂᄃᄄᄅᄆᄇᄈᄉᄊᄋᄌᄍᄎᄏᄐᄑᄒᄓᄔᄕᄖᄗᄘᄙᄚᄛᄜᄝᄞᄟᄠᄡᄢᄣᄤᄥᄦᄧᄨᄩᄪᄫᄬᄭᄮᄯᄰᄱᄲᄳᄴᄵᄶᄷᄸᄹᄺᄻᄼᄽᄾᄿᅀᅁᅂᅃᅄᅅᅆᅇᅈᅉᅊᅋᅌᅍᅎᅏᅐᅑᅒᅓᅔᅕᅖᅗᅘᅙᅚᅛᅜᅝᅞᅟᅠᅡᅢᅣᅤᅥᅦᅧᅨᅩᅪᅫᅬᅭᅮᅯᅰᅱᅲᅳᅴᅵᅶᅷᅸᅹᅺᅻᅼᅽᅾᅿᆀᆁᆂᆃᆄᆅᆆᆇᆈᆉᆊᆋᆌᆍᆎᆏᆐᆑᆒᆓᆔᆕᆖᆗᆘᆙᆚᆛᆜᆝᆞᆟᆠᆡᆢᆣᆤᆥᆦᆧᆨᆩᆪᆫᆬᆭᆮᆯᆰᆱᆲᆳᆴᆵᆶᆷᆸᆹᆺᆻᆼᆽᆾᆿᇀᇁᇂᇃᇄᇅᇆᇇᇈᇉᇊᇋᇌᇍᇎᇏᇐᇑᇒᇓᇔᇕᇖᇗᇘᇙᇚᇛᇜᇝᇞᇟᇠᇡᇢᇣᇤᇥᇦᇧᇨᇩᇪᇫᇬᇭᇮᇯᇰᇱᇲᇳᇴᇵᇶᇷᇸᇹᇺᇻᇼᇽᇾᇿ\"\n [2] \"〮〯\"                                                                                                                                                                                            \n [3] \"ㄱㄲㄳㄴㄵㄶㄷㄸㄹㄺㄻㄼㄽㄾㄿㅀㅁㅂㅃㅄㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎㅏㅐㅑㅒㅓㅔㅕㅖㅗㅘㅙㅚㅛㅜㅝㅞㅟㅠㅡㅢㅣㅤㅥㅦㅧㅨㅩㅪㅫㅬㅭㅮㅯㅰㅱㅲㅳㅴㅵㅶㅷㅸㅹㅺㅻㅼㅽㅾㅿㆀㆁㆂㆃㆄㆅㆆㆇㆈㆉㆊㆋㆌㆍㆎ\"    \n [4] \"㈀㈁㈂㈃㈄㈅㈆㈇㈈㈉㈊㈋㈌㈍㈎㈏㈐㈑㈒㈓㈔㈕㈖㈗㈘㈙㈚㈛㈜㈝㈞\"                                                                                                                                  \n [5] \"㉠㉡㉢㉣㉤㉥㉦㉧㉨㉩㉪㉫㉬㉭㉮㉯㉰㉱㉲㉳㉴㉵㉶㉷㉸㉹㉺㉻㉼㉽㉾\"                                                                                                                                  \n [6] \"ꥠꥡꥢꥣꥤꥥꥦꥧꥨꥩꥪꥫꥬꥭꥮꥯꥰꥱꥲꥳꥴꥵꥶꥷꥸꥹꥺꥻꥼ\"                                                                                                                                      \n [7] \"ힰힱힲힳힴힵힶힷힸힹힺힻힼힽힾힿퟀퟁퟂퟃퟄퟅퟆ\"                                                                                                                                                                         \n [8] \"ퟋퟌퟍퟎퟏퟐퟑퟒퟓퟔퟕퟖퟗퟘퟙퟚퟛퟜퟝퟞퟟퟠퟡퟢퟣퟤퟥퟦퟧퟨퟩퟪퟫퟬퟭퟮퟯퟰퟱퟲퟳퟴퟵퟶퟷퟸퟹퟺퟻ\"                                                                                                                                               \n [9] \"ﾠﾡﾢﾣﾤﾥﾦﾧﾨﾩﾪﾫﾬﾭﾮﾯﾰﾱﾲﾳﾴﾵﾶﾷﾸﾹﾺﾻﾼﾽﾾ\"                                                                                                                                                                 \n[10] \"ￂￃￄￅￆￇ\"                                                                                                                                                                                          \n[11] \"ￊￋￌￍￎￏ\"                                                                                                                                                                                          \n[12] \"ￒￓￔￕￖￗ\"                                                                                                                                                                                          \n[13] \"ￚￛￜ\"                                                                                                                                                                                             \n\n\n\n\n\n\n\n\nNote\n\n\n\nrlang 패키지 chr_unserialise_unicode() 함수는 유니코드를 문자로 변환하여 확인할 때 유용하다.\n\n\nCode\nlibrary(rlang)\nchr_unserialise_unicode('<U+AC00>')\n\n\n[1] \"가\"\n\n\nCode\nchr_unserialise_unicode('<U+FFDC>')\n\n\n[1] \"ￜ\""
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "데이터 과학 글쓰기",
    "section": "",
    "text": "Original Openscapes artwork by Allison Horst"
  },
  {
    "objectID": "index.html#latex-philosophy",
    "href": "index.html#latex-philosophy",
    "title": "데이터 과학 글쓰기",
    "section": "3.1 \\(\\LaTeX\\) 철학",
    "text": "3.1 \\(\\LaTeX\\) 철학\n\\(\\LaTeX\\)은 한마디로 정의하게 되면 “논리적인 디자인”이라고 볼 수 있다. 저작물이 만들어지는 과정은 저작자가 원고를 손으로 쓰거나 타자기로 쳐서 출판사에 넘겨주면, 출판사의 편집디자이너는 원고를 보고 세부적인 출력형식을 결정하여 인쇄소에 넘긴다. 인쇄소는 이를 토대로 과거 식자공이 식자판을 만들었다면 현재는 컴퓨터가 파일을 만든다. \\(\\LaTeX\\) 과 \\(\\TeX\\) 이 하는 업무가 다소 차이가 난다. 22 김영록 (2017) “교육 현장에서의 텍의 활용”, \\(\\TeX\\) : 조판, 그 이상의 가능성\n\n\\(\\LaTeX\\) 은 편집디자이너에 해당되는 업무를 수행\n\\(\\TeX\\) 은 식자공에 해당되는 업무를 수행\n\n\n컴퓨터를 활용하여 전자조판을 넘긴 이유는 문서를 좀 더 읽기 쉽게 만들어 독자에게 저작자의 생각을 잘 이해시키는 것이다. 이러한 목적을 달성하기 위해서는 문서의 디자인이 그 문서의 논리적 구조를 잘 반영시켜야 하고, 반대로 문서의 논리적 구조를 잘 반영시키기 위해서는 문서 디자이너가 문서의 논리적 구조를 잘 이해해야만 된다. \\(\\LaTeX\\)의 명령어는 기본적으로 문서의 논리적 구조를 기술하는 것이다. 이렇게 기술된 명령어를 \\(\\TeX\\)으로 전달하여 조판하게 되어 원하는 최종 결과물을 얻게 된다.\n\\(\\LaTeX\\)에서 채택하는 논리적 디자인의 가장 큰 장점은 글을 더 잘 쓰게 된다는 점에 있다. \\(\\LaTeX\\) 으로 글을 작성하게 되면 점점 \\(\\LaTeX\\)이 채택하고 있는 논리적 디자인에 맞추게 되고 이를 통해서 글쓰기 실력이 향상된다.\n아마도 \\(\\LaTeX\\)의 가장 큰 장점은 자동화에 있다. 시각적 디자인(Wysiwig)을 채택하여 작성한 문서를 다른 형식으로 변환하거나 문서의 수식의 일련번호를 로마자에서 아라비아 숫자로 모두 변경시키거나 표나 그래프 번호를 일괄번경하는 등 이러한 사례는 자주 발견된다. 특히, 국내외 저널에 제출할 논문을 \\(\\LaTeX\\) 으로 작성한 경우 템플릿만 바꾸면 쉽게 고품질 논문을 만들 수 있는데 워드를 이용하여 작성할 경우 수작업을 하게 되어 비생산적인 시간낭비도 크고 미려한 문서를 얻을 수도 없다.\n따라서, \\(\\LaTeX\\) 으로 글을 쓰게 되면 글쓰기 본질에 집중할 수 있어 저작자의 생각과 의견을 좀더 진솔하게 가감없이 독자에게 전달시킬 수 있게 된다."
  },
  {
    "objectID": "index.html#wysiwyg",
    "href": "index.html#wysiwyg",
    "title": "데이터 과학 글쓰기",
    "section": "3.2 시각적 디자인",
    "text": "3.2 시각적 디자인\n문서를 논리적으로 디자인하는 반대 개념으로 있는 것이 위즈윅(WSYIWIG, What You See Is What You Get) 으로 대표적인 것이 아래한글, MS 워드와 같은 워드 프로세서다. 시각적 디자인을 하게 되면 논리적이지 못한 애매한 조판을 하기 쉽다. 또한, PDF 파일로도 출력을 할 때 미세하나마 출력물에 일관성이 실종되기도 한다."
  },
  {
    "objectID": "index.html#latex-engine",
    "href": "index.html#latex-engine",
    "title": "데이터 과학 글쓰기",
    "section": "3.3 \\(\\LaTeX\\) 엔진",
    "text": "3.3 \\(\\LaTeX\\) 엔진\n\\(\\LaTeX\\) 을 실제 문서작성에 사용하기 위해서는 텍 배포판을 선택해야 하는데 KTUG 한국 \\(\\TeX\\) 사용자 그룹에서 \\(ko.TeX\\) Live를 추천하고 있다. 이유는 다음과 같다. 33 이호재 (2017), “레이텍을 빨리 쓸 수 있는 방법”, \\(\\TeX\\) : 조판, 그 이상의 가능성\n\npdfLaTeX, XeLaTeX, LuaLaTeX 3종 \\(\\LaTeX\\) 엔진이 있는데 XeLaTeX 이 유니코드 텍 엔진이라 CJK 동아시아권 언어를 잘 지원하고 트루타입 및 오픈타입 폰트도 자유롭게 선택할 수 있기 때문에 인기가 많다.\n운영체제에 따라 차이가 나지만 안정적으로 \\(\\LaTeX\\) 을 설치하여 실제 문서작업에 이용하기에는 \\(\\TeX\\) Live 가 MikTeX 보다 안정성이나 여러가지 사용자 지원 측면에서 낫다.\n\\(\\TeX\\) 소스파일에서 PDF 파일로 탐색을 하던가 반대로 PDF 파일에서 \\(\\TeX\\) 소스파일로 탐색을 하게 되는 기능을 TexStudio IDE를 활용하여 바로 가능하게 됨\n\n과거 latex+divps+pspdf 를 활용한 가장 전통적인 작업흐름을 가졌다. 즉, pstricks를 활용하여 PDF 파일을 제작하는 방식으로 시간이 오래 걸리고 이미지로 eps 파일만 사용한다는 한계가 있다. 또 다른 latex+dvipdfmx 작업흐름은 중간에 .dvi 파일을 생성하고 dvipdfmx를 사용하여 PDF 파일을 제작하는 방식이다. 마지막으로 pdfLaTeX, XeLaTeX, LuaLaTeX 을 활용한 작업흐름이 있는데 .tex 소스파일에서 .pdf 파일을 즉시 생성한다는 점에서 인기가 있다.\n이외에도 논문 제작이 아닌 문서를 제작하는 경우 한단계 더 들어가 memoir 혹은 oblivoir 클래스를 이용하는 것이 이미 검증된 문서 템플릿을 바탕으로 PDF 문서를 뽑아내는 신속한 방법이다."
  },
  {
    "objectID": "posts/20220815_quarto_blog/index.html",
    "href": "posts/20220815_quarto_blog/index.html",
    "title": "Quarto 블로그",
    "section": "",
    "text": "블로그를 작성하고 운영하는 이유를 다음과 같이 들 수 있다.\n\n학습: 강의를 듣거나 무언가 읽어 독서를 통해 학습되는 지식보다 글쓰기를 통해 축적되는 지식이 어떻게 보면 학습 효과가 더 크다. 특히, 학습한 내용을 코드로 작성하여 돌려볼 경우 학습효과를 배가시킨다.\n지식나눔: 구글 검색엔진을 통해 검색된 블로그 게시글을 통해 짧은 시간 학습에 도움을 받지만, 마찬가지로 본인이 작성한 블로그 게시글이 다른 사람에게 도움을 주는 것도 사실이다. 한가지 명심할 사항은 본인 실력보다 한두단계 앞선 사람으로 배우는 것이 실질적으로 큰 도움이 된다. 그래서 눈높이 교육이라는 얘기도 있지 않나 싶다.\n구인구직, 포트폴리오: 차곡차곡 누적된 블로그 게시물은 그 자체로 포트폴리오가 되고 헤드헌터를 통해 채용 인터뷰 요청을 받게 된다."
  },
  {
    "objectID": "posts/20220815_quarto_blog/index.html#quarto_blog.qmd",
    "href": "posts/20220815_quarto_blog/index.html#quarto_blog.qmd",
    "title": "Quarto 블로그",
    "section": "4.1 quarto_blog.qmd",
    "text": "4.1 quarto_blog.qmd\n_quarto.yml 파일에 지정된 웹사이트에서 블로그로 들어가는 메뉴에 들어간 파일명이 quarto_blog.qmd 이라 해당 파일에 블로그 설정을 담아낸다.\n---\ntitle: \"Quarto 데이터 과학\"\nlisting:\n  contents: posts\n  sort: \"date desc\"\n  type: default\n  categories: true\n  sort-ui: false\n  filter-ui: false\npage-layout: full\ntitle-block-banner: false\n---"
  },
  {
    "objectID": "posts/20220816_quarto_rr/index.html",
    "href": "posts/20220816_quarto_rr/index.html",
    "title": "재현가능 글쓰기",
    "section": "",
    "text": "Warning\n\n\n\n이광춘 (2019-12-28), “Computational Documents - 개요서(Compendium) 시작하며” 내용을 토대로 작성된 것임을 밝혀둡니다."
  },
  {
    "objectID": "posts/20220816_quarto_rr/index.html#start-small",
    "href": "posts/20220816_quarto_rr/index.html#start-small",
    "title": "재현가능 글쓰기",
    "section": "3.1 시작이 반이다",
    "text": "3.1 시작이 반이다\n\n시작이 반이다 - start small\n\n\n\nCode\nproject\n|- DESCRIPTION\n|- README.md  \n|- Metadata.txt\n|\n|- data/                \n|   +- 2014ParasiteSurveyJustBrood.csv\n|   +- CedarBPLifeTable2014.csv\n|   +- NorthBPLifeTable2013.txt\n|   +- NorthBPLifeTable2014.csv|\n|- analysis/\n|   +- CodeforBPpaper.R"
  },
  {
    "objectID": "posts/20220816_quarto_rr/index.html#pkg-development",
    "href": "posts/20220816_quarto_rr/index.html#pkg-development",
    "title": "재현가능 글쓰기",
    "section": "3.2 팩키지 개발",
    "text": "3.2 팩키지 개발\n\n팩키지 개발\n\n\n\nCode\nproject\n|- DESCRIPTION\n|- NAMESPACE\n|- README.md\n|- LakeTrophicModelling.Rproj\n|\n|- R/\n|   +- LakeTrophicModelling-package.r\n|   +- class_prob_rf.R\n|   +- condAccuracy.R\n|   +- crossval_rf.R\n|   +- density_plot.R\n|   +- ecdf_ks_ci.R\n|   +- ecor_map.R\n|   +- getCyanoAbund.R\n|   +- getLakeIDs.R\n|   +- importancePlot.R\n|\n|- man/\n|   +- class_prob_rf.Rd\n|   +- condAccuracy.Rd\n|   +- crossval_rf.Rd\n|   +- density_plot.Rd\n|   +- ecdf_ks_ci.Rd\n|   +- ecor_map.Rd\n|   +- getCyanoAbund.Rd\n|   +- getLakeIDs.Rd\n|   +- importancePlot.Rd\n|\n|- data/                \n|   +- LakeTrophicModelling.rda\n|\n|- vignettes/\n|\n|- inst/\n|   +- doc/\n|      +- manuscript.pdf\n|   +- extdata/\n|      +- ltmData.csv\n|      +- data_def.csv"
  },
  {
    "objectID": "posts/20220816_quarto_rr/index.html#cicd-docker",
    "href": "posts/20220816_quarto_rr/index.html#cicd-docker",
    "title": "재현가능 글쓰기",
    "section": "3.3 CI/CD와 도커",
    "text": "3.3 CI/CD와 도커\nDockerfile 파일을 추가하여 환경도 재현가능하게 만들 수 있고, .travis.yml을 추가하여 CI/CD 환경도 구축할 수 있다. tests/를 추가하여 테스트 주도 개발(test-driven development, TDD)를 시도할 수 있고, 이를 통해 수작업 검증을 자동화하여 생산성과 품질을 대폭 향상시킬 수도 있다.\n\n\nCode\nproject\n|- DESCRIPTION          # project metadata and dependencies \n|- README.md            # top-level description of content and guide to users\n|- NAMESPACE            # exports R functions in the package for repeated use\n|- LICENSE              # specify the conditions of use and reuse of the code, data & text\n|- .travis.yml          # continuous integration service hook for auto-testing at each commit\n|- Dockerfile           # makes a custom isolated computational environment for the project\n|\n|- data/                # raw data, not changed once created\n|  +- my_data.csv       # data files in open formats such as TXT, CSV, TSV, etc.\n|\n|- analysis/            # any programmatic code\n|  +- my_report.Rmd     # R markdown file with narrative text interwoven with code chunks \n|  +- makefile          # builds a PDF/HTML/DOCX file from the Rmd, code, and data files\n|  +- scripts/          # code files (R, shell, etc.) used for data cleaning, analysis and visualisation \n|\n|- R/                     \n|  +- my_functions.R    # custom R functions that are used more than once throughout the project\n|\n|- man/\n|  +- my_functions.Rd   # documentation for the R functions (auto-generated when using devtools)\n|\n|- tests/\n|  +- testthat.R        # unit tests of R functions to ensure they perform as expected"
  },
  {
    "objectID": "posts/20220831_low_code_shiny/index.html",
    "href": "posts/20220831_low_code_shiny/index.html",
    "title": "로우코드 Shiny 앱 개발",
    "section": "",
    "text": "출처: https://itwiki.kr/w/로우_코드\n로우코드는 필요한 부품을 간단한 명령으로 조합하여 시스템을 만드는 개발 방법으로, 복잡한 코딩 과정을 단순화해서 소프트웨어를 빠르게 개발 및 배포하도록 만든 일종의 개발 환경으로 소개되고 있다.\nShiny 앱은 2012년 처음 소개된 이후 약 10년의 세월이 흐르며 다양한 프레임워크가 등장하여 서로 경쟁하고 있다. 이 분야를 개척한 것은 Shiny가 처음이지만 R을 기본언어로 하다보니 파이썬이나 자바스크립트와 같은 다른 언어을 많이 사용하고 있는 다른 반응형 대쉬보드 프레임워크가 등장하다 보니 GitHub 별점수에서 상대적으로 밀리고 있는 것으로 보인다. React 기반한 파이썬 프레임워크 Plotly Dash, 파이썬 Streamlit이 사용자면에서 최근들어 급증하고 있는데 최근 추세를 반영하고 있다고 볼 수 있다.\n출처: Streamlit vs. Dash vs. Shiny vs. Voila vs. Flask vs. Jupyter - Comparing data dashboarding tools and frameworks\n\n\n\n\n\n\n장점단점\n\n\n\n프로그램 개발 시간 단축\n\n\n모든 소스 코드를 작성하지 않고, 앱을 조합하여 시스템을 구축 하여 개발 기간을 단축\n\n\n개발비 절감\n\n\n개발 기간을 줄이는 효과로 프로그래머의 인력이 감소 개발에 들어 가는 인건비를 절감 하는 효과\n전문 개발자의 경우 필요에 따라 자동화와 불필요한 요소 생략 등을 통해 작업 효율성을 대폭 향상할 수 있다. 이런 효율성 향상은 결국 비용감소\n\n\n오류가 줄어든다\n\n\n프로그램밍을 직접 수행하는 부분이 적어지는 만큼 실수가 줄어 든다.\n사람이 작성하는 코드의 양이 적어지면서 오류 확률이 줄어 든다.\n그 결과 버그 수정 등에 걸리는 시간 단축과 비용 경감에 효과가 있다.\n\n\n인력 확보가 비교적 쉽다.\n\n\n엔지니어가 전문적인 실력을 갖추지 않았더라고 개발 작업이 가능.\n숙련된 엔지니어에 대한 의존성이 줄어 든다.\n\n\n\n\n자유도가 낮다\n\n\n대규모 개발에 사용의 어려움으로 인해 단순 구조 및 단일 비즈니스 프로세스에 적합하다.\n개발 툴에 따라서 가능 한 기능이 다르기 때문에 각 툴에만 의존 하게 되는 단점\n\n\n프로그램의 창의성 악화\n\n\n로우코드에 의존하게 되면 시스템을 새로 구축 하는 프로그래머가 점점 줄어 들어 창의성을 발휘하여 개발하는 경우가 적어 질 것이다.\n\n\n보안의 취약\n\n\n간단한 기능을 만들때는 기본적인 보안 관리에 소홀 할 수 있다.\n빠른 속도와 낮은 비용에만 너무 초점을 맞추면 관리 부족과 보안 취약점이 들어 날 수 있다.\n\n\n\n\n시장에서 다음 시스템이 인기를 끌고 있다.\n\nOutSystems\nmendix\nServiceNow\nKintone\nKISSFLOW\nAppian\nBoomi Flow"
  },
  {
    "objectID": "posts/20220831_low_code_shiny/index.html#shinyuieditor",
    "href": "posts/20220831_low_code_shiny/index.html#shinyuieditor",
    "title": "로우코드 Shiny 앱 개발",
    "section": "2.1 shinyuieditor",
    "text": "2.1 shinyuieditor\nshinyuieditor는 2022-08-31 현재 알파버젼이지만 기존 Shiny UI 개발에 많은 노력이 든 것에 비하면 빠르고 쉽게 ui.R UI 부분을 제작할 수 있다.\n예를 들어 Drag and Drop 으로 UI 구성요소를 추가하는 것도 가능하다.\n\n\nVideo\n\n\n그외에도 Shiny 앱 개발에 필요한 다양한 다음 작업을 수행할 수 있다.\n\nUI 구성요소 이동\nUI 구성요소 선택\nUI 구성요소 삭제\nUI 구성요소 설정사항 변경\n행/열 폭 확인\n행/열을 레이아웃 격자에 추가/삭제\n행/열 폭 길이조정\n변경사항 Undo/Redo 기능\n\n동영상 사용방법은 shinyuieditor How to 참고\nshinyuieditor 패키지 명령어는 몇개 없는데 Shiny 앱 UI 제작을 위해 launch_editor() 함수를 사용해서 제작한다. 첫 선택사항에 따라 “shiny앱명칭” 디렉토리 아래 app.R 혹은 ui.R, server.R 이 생성된 것을 확인할 수 있다.\n\nshinyuieditor::launch_editor(app_loc = \"shiny앱명칭\")\n\nUI 제작이 마무리되면 bslib 패키지로 외양을 가꾸고 server.R 서버 코드를 작성하면 간단히 Shiny 앱 개발이 마무리된다."
  },
  {
    "objectID": "posts/20220831_low_code_shiny/index.html#dashboard-builder",
    "href": "posts/20220831_low_code_shiny/index.html#dashboard-builder",
    "title": "로우코드 Shiny 앱 개발",
    "section": "2.2 Dashboard-Builder",
    "text": "2.2 Dashboard-Builder\nPeter Gandenberger, “Dashboard-Builder: Building Shiny Apps without writing any code”, rstudio::conf(2022), 바로가기\nPeter Gandenberger가 최근에 개발한 Dashboard Builder는 대쉬보드를 키보드 입력없이 마우스만 사용해서 간단히 개발할 수 있다. Dashboard Builder 는 gridstackeR 패키지 기반하고 있다.\n로우코드 대쉬보드 개발 작업흐름은 다음과 같다.\n\n데이터 불러오기\n대쉬보드 구성요소 생성\n대쉬보드 내보내기\n후속작업을 통해 기능추가 및 개선 작업 수행\n\n2분 22초면 대쉬보드를 뚝딱 제작할 수 있는 사례를 다음 동영상을 통해 확인할 수 있다. DASHBOARD-BUILDER: create R-Shiny Dashboards in 2 Minutes and 22 Seconds"
  },
  {
    "objectID": "posts/20220831_low_code_shiny/index.html#bslib-외양",
    "href": "posts/20220831_low_code_shiny/index.html#bslib-외양",
    "title": "로우코드 Shiny 앱 개발",
    "section": "2.3 bslib 외양",
    "text": "2.3 bslib 외양\nShiny 앱의 외양 Look-and-Feel 을 수월히 제작할 수 있게 해주는 패키지가 bslib로 이를 통해서 Shiny 앱 개발 생산성을 크게 높일 수 있다.\n\n\n\n\n\nbslib 패키지 bs_theme_preview() 함수를 통해 Shiny 외양을 원하는 대로 제작할 수 있다. 다양한 외양 관련 사항을 지정하면 관련 사항이 코드로 떨어지게 되어 이를 복사하여 Shiny 앱에 CSS 나 코드에 직접 넣어 사용할 수 있다.\n\nbs_theme_preview()\n\n# Warning: package ‘bslib’ was built under R version 4.2.1\n# \n# Attaching package: ‘bslib’\n# \n# The following object is masked from ‘package:utils’:\n# \n#     page\n# \n# Warning: package ‘rlang’ was built under R version 4.2.1\n# Using libcurl 7.64.1 with Schannel\n# This Font Awesome icon ('exclamation-triangle') does not exist:\n# * if providing a custom `html_dependency` these `name` checks can \n#   be deactivated with `verify_fa = FALSE`\n# \n# Listening on http://127.0.0.1:4337\n# \n# ####  Update your bs_theme() R code with:  #####\n# bs_theme_update(theme, primary = \"#6C8FC4\", base_font = font_collection(\"system-ui\", \n#     \"-apple-system\", \"Segoe UI\", font_google(\"Roboto\"), \"Helvetica Neue\", \n#     \"Arial\", font_google(\"Noto Sans\"), \"Liberation Sans\", \"sans-serif\", \n#     \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \n#     \"Noto Color Emoji\"))"
  },
  {
    "objectID": "posts/20220831_low_code_shiny/index.html#데이터-패키지",
    "href": "posts/20220831_low_code_shiny/index.html#데이터-패키지",
    "title": "로우코드 Shiny 앱 개발",
    "section": "2.4 데이터 패키지",
    "text": "2.4 데이터 패키지\n데이터를 별도 패키지로 묶어 관리하게 되면 Shiny 앱을 개발할 때 별도 데이터 패키지로 묶어 필요한 경우 Shiny 앱에서 불러 사용하게 되면 관리도 그렇고 개발시간도 단축시킬 수 있다.\n\n통계청 통계교육원 실용통계 교과서에 실린 데이터를 묶어낸 R 데이터 패키지: hsData"
  },
  {
    "objectID": "posts/20220831_low_code_shiny/index.html#ui-화면-설계",
    "href": "posts/20220831_low_code_shiny/index.html#ui-화면-설계",
    "title": "로우코드 Shiny 앱 개발",
    "section": "3.1 UI 화면 설계",
    "text": "3.1 UI 화면 설계\n파워포인트, figma 등 화면설계 도구를 사용해서 Shiny UI를 작성한다."
  },
  {
    "objectID": "posts/20220831_low_code_shiny/index.html#shinyuieditor-1",
    "href": "posts/20220831_low_code_shiny/index.html#shinyuieditor-1",
    "title": "로우코드 Shiny 앱 개발",
    "section": "3.2 shinyuieditor",
    "text": "3.2 shinyuieditor\nshinyuieditor 패키지를 사용해서 Shiny 앱 UI 부분을 제작한다."
  },
  {
    "objectID": "posts/20220831_low_code_shiny/index.html#서버-구현",
    "href": "posts/20220831_low_code_shiny/index.html#서버-구현",
    "title": "로우코드 Shiny 앱 개발",
    "section": "3.3 서버 구현",
    "text": "3.3 서버 구현\n마지막으로 server.R 코드를 작성하여 hsData 데이터 패키지에 포함된 데이터셋을 선택할 경우 해당 통계 분석결과를 자동으로 실행되도록 구현한다."
  },
  {
    "objectID": "posts/20220831_low_code_shiny/index.html#배포",
    "href": "posts/20220831_low_code_shiny/index.html#배포",
    "title": "로우코드 Shiny 앱 개발",
    "section": "3.4 배포",
    "text": "3.4 배포\nshinyapps.io에 RStudio 에서 버튼을 몇번 눌러 배포한다.\n\nhttps://r2bit.shinyapps.io/bitStat-HS/"
  },
  {
    "objectID": "posts/20220831_low_code_shiny/index.html#실행화면",
    "href": "posts/20220831_low_code_shiny/index.html#실행화면",
    "title": "로우코드 Shiny 앱 개발",
    "section": "3.5 실행화면",
    "text": "3.5 실행화면"
  },
  {
    "objectID": "posts/20221110_bookdown/index.html",
    "href": "posts/20221110_bookdown/index.html",
    "title": "기존 Bookdown 책을 Quarto Book 변환",
    "section": "",
    "text": "Yihui Xie가 시작한 bookdown 패키지는 다양한 데이터 과학 책을 제작하는데 꼭 필요한 텍스트와 프로그래밍 코드(R)를 재현가능하게 묶어 책을 다양한 형태로 출간하는데 큰 도움을 주었다. 하지만 R 언어 기반으로 시작한 다양한 문서생성 생태계는 각 문서를 제작하는데 서로 다른 패키지를 사용한다는 점에서 초창기에는 찬사를 받았지만, 지금은 너무 다양한 문서를 제작하는데 서로 다른 패키지와 조금 다른 구문을 적용한다는 점에서 어려움도 가중된 것도 사실이다. 예를 들어,\n\n블로그 제작: blogdown\n패키지 웹사이트 제작: pkgdown\n책 제작: bookdown\n과학기술 논문 제작: distill\nCV 이력서 제작: vitae\n통계 포스터 등: pagedown\n…\n\nR과 마크다운(Markdown)을 결합한 Literate Programming 을 웹출판에 적용하면서 매해 새로운 패키지가 제공되면서 2015년 이후 Yihui Xie를 비롯한 동료 개발자들이 어떤 문서를 제작할지 흥미로운 시절을 보낸 것도 사실이다. 하지만 앞서 언급한 다양한 문서를 서로 다른 방식으로 제작한다는 피로감으로 Quarto가 등장하면서 이런 문제는 모두 사라질 것으로 보인다.\n이제 남은 문제는 기존에 bookdown으로 제작한 책을 어떻게 quarto book으로 변환하냐는 문제다. 그래서 직접 해봤습니다.\n\n\n\n\n\n\n정말 간단합니다.\n\n\n\n7분 투자하여 Nicholas Tierney (2022-04-11), “Notes on Changing from Rmarkdown/Bookdown to Quarto”, Credibly Curious - Nick Tierney’s (mostly) rstats blog 블로그 읽고 기존 bookdown 저작파일을 Quarto Book으로 변환한 후 quarto render 끝."
  },
  {
    "objectID": "posts/20221110_bookdown/index.html#파일-확장자-변환",
    "href": "posts/20221110_bookdown/index.html#파일-확장자-변환",
    "title": "기존 Bookdown 책을 Quarto Book 변환",
    "section": "3.1 파일 확장자 변환",
    "text": "3.1 파일 확장자 변환\n기존 bookdown 전자책은 .Rmd 파일로 되어 있어 .qmd 파일로 확장자를 변경시켜야된다. 책 자체가 대체로 많은 파일로 구성되어 있기 때문에 일괄 처리하는 것이 정확성을 높이고 속도도 빠르다.\n\n# 1. change filenames: filename.Rmd —> filename.qmd -----\nlibrary(fs)\nlibrary(stringr)\nrmd_names <- dir_ls(path = \".\", glob = \"*.Rmd\")\nqmd_names <- str_replace(string = rmd_names,\n                         pattern = \"Rmd\",\n                         replacement = \"qmd\")\nfile_move(path = rmd_names,\n          new_path = qmd_names)\n\nfile_move(path = \"_bookdown.yml\",\n          new_path = \"_quarto.yml\")"
  },
  {
    "objectID": "posts/20221110_bookdown/index.html#quarto.yml-파일",
    "href": "posts/20221110_bookdown/index.html#quarto.yml-파일",
    "title": "기존 Bookdown 책을 Quarto Book 변환",
    "section": "3.2 _quarto.yml 파일",
    "text": "3.2 _quarto.yml 파일\nbookdown은 _bookdown.yml, _output.yml을 포함한 각 역할을 담당하는 .yml 파일로 나눠져있지만 Quarto 는 이런 것을 단 하나의 _quarto.yml 파일로 제작해 놨습니다. 따라서 중요한 _bookdown.yml 파일의 .Rmd 파일을 앞서 변환시킨 .qmd 파일로 변화시켜 quarto.yml 파일을 준비한다.\n\n# 2. Change _bookdown.yml to _quarto.yml and remove _output.yml ----\n\nlibrary(readr)\nlibrary(stringr)\nquarto_yaml_rmd <- read_lines(\"_quarto.yml\")\n\nquarto_yaml_qmd <- str_replace_all(string = quarto_yaml_rmd,\n                                   pattern = \"Rmd\",\n                                   replacement = \"qmd\")\n\nwrite_lines(\n  x = quarto_yaml_qmd,\n  file = \"_quarto.yml\"\n)"
  },
  {
    "objectID": "posts/20221110_bookdown/index.html#quarto-book-컴파일",
    "href": "posts/20221110_bookdown/index.html#quarto-book-컴파일",
    "title": "기존 Bookdown 책을 Quarto Book 변환",
    "section": "3.3 Quarto Book 컴파일",
    "text": "3.3 Quarto Book 컴파일\n_quarto.yml 파일을 열어 Quarto Book 문법에 맞춰 편집한 후 quarto preview, quarto render 명령어로 작업을 전자책을 제작한 후 GitHub Pages 나 Quarto Pub에 배포한다."
  },
  {
    "objectID": "posts/20221124_ftc/index.html#대기업-집단-순위",
    "href": "posts/20221124_ftc/index.html#대기업-집단-순위",
    "title": "대기업 본사 지도",
    "section": "1.1 대기업 집단 순위",
    "text": "1.1 대기업 집단 순위\n공정위 2022년 기준 공시대상 대기업집단 지정결과를 확인할 수 있다.\n\nlibrary(tidyverse)\nlibrary(readxl)\n\nrank_raw <- read_excel(glue::glue(\"{here::here()}/data/220428(조간) 2022년도 대기업집단 지정결과_별첨1.xlsx\"), sheet = \"22년\", skip = 4)\n\nrank_tbl <- rank_raw %>% \n  set_names(c(\"순위_22\", \"순위_21\", \"변동\", \"기업명\", \"동일인\", \"계열사_22\", \"계열사_21\", \"자산_22\", \"자산_21\")) %>% \n  filter(변동 !=\"제외\") %>% \n  select(기업명, 동일인, 계열사수=계열사_22, 자산총액 = 자산_22) %>% \n  mutate(계열사수 = parse_number(계열사수),\n         자산총액 = parse_number(자산총액)/1000) %>% \n  filter(!is.na(기업명))\n\nrank_tbl\n\n# A tibble: 76 × 4\n   기업명     동일인             계열사수 자산총액\n   <chr>      <chr>                 <dbl>    <dbl>\n 1 삼성       이재용                   60    484. \n 2 에스케이   최태원                  186    292. \n 3 현대자동차 정의선                   57    258. \n 4 엘지       구광모                   73    168. \n 5 롯데       신동빈                   85    122. \n 6 포스코     포스코홀딩스(주)         38     96.3\n 7 한화       김승연                   91     80.4\n 8 지에스     허창수                   93     76.8\n 9 현대중공업 정몽준                   36     75.3\n10 농협       농업협동조합중앙회       53     67.0\n# … with 66 more rows"
  },
  {
    "objectID": "posts/20221124_ftc/index.html#본사-주소",
    "href": "posts/20221124_ftc/index.html#본사-주소",
    "title": "대기업 본사 지도",
    "section": "1.2 본사 주소",
    "text": "1.2 본사 주소\nfnguide 에서 기업주소록에서 엑셀파일로 가-하, A-Z, 0-9 기업본사주소가 담긴 정보를 다운로드 받아 후처리한다.\n\n.xls 파일을 .xlsx 파일 변환\n자세한 사항 How To Convert Multiple Xls Files To Xlsx Files In Excel? 참조하여 VBA 스크립트로 처리한다.\n\n\ncompany_list <- fs::dir_ls(glue::glue(\"{here::here()}/data/company_xlsx\"))\n\ncompany_raw <- map_df(company_list, read_excel)\n\ncompany_raw\n\n# A tibble: 2,553 × 6\n   종목명           시장   홈페이지                   본사주소    대표…¹  IR담당\n   <chr>            <chr>  <chr>                      <chr>       <chr>   <chr> \n 1 가비아           코스닥 ir.gabia.com               경기도 성…  1544-4… 02-82…\n 2 가온미디어       코스닥 www.kaonmedia.co.kr        경기도 성…  031-72… 031-7…\n 3 가온전선         코스피 www.gaoncable.com          경기도 군…  031-80… 031-8…\n 4 가온칩스         코스닥 www.gaonchips.com          경기도 성…  031-69… <NA>  \n 5 감성코퍼레이션   코스닥 www.virtualtek.co.kr       서울특별시… 02-314… 070-4…\n 6 강남제비스코     코스피 www.jevisco.com            부산광역시… 051-89… 051-8…\n 7 강스템바이오텍   코스닥 www.kangstem.com           서울시 강…  02-888… 02-20…\n 8 강원랜드         코스피 kangwonland.high1.com      강원도 정…  033-59… 033-5…\n 9 강원에너지       코스닥 www.kwb21.com              전라북도 …  031-35… 02-66…\n10 갤럭시아머니트리 코스닥 www.galaxiamoneytree.co.kr 서울시 강…  1566-0… 070-4…\n# … with 2,543 more rows, and abbreviated variable name ¹​대표전화"
  },
  {
    "objectID": "posts/20221124_ftc/index.html#데이터-결합",
    "href": "posts/20221124_ftc/index.html#데이터-결합",
    "title": "대기업 본사 지도",
    "section": "1.3 데이터 결합",
    "text": "1.3 데이터 결합\n\nrank_tbl %>% \n  left_join(company_raw, by = c(\"기업명\" = \"종목명\")) %>% \n  filter(!is.na(본사주소))\n\n# A tibble: 23 × 9\n   기업명     동일인 계열사수 자산총액 시장   홈페이지    본사…¹  대표…²  IR담당\n   <chr>      <chr>     <dbl>    <dbl> <chr>  <chr>       <chr>   <chr>   <chr> \n 1 한화       김승연       91     80.4 코스피 www.hanwha… 서울시… 02-729… 02-72…\n 2 현대중공업 정몽준       36     75.3 코스피 www.hhi.co… 울산광… 052-20… 052-2…\n 3 신세계     이명희       53     61.1 코스피 www.shinse… 서울시… 02-727… 02-72…\n 4 한진       조원태       33     35.2 코스피 www.hanjin… 서울시… 02-728… 02-72…\n 5 카카오     김범수      136     32.2 코스피 www.kakaoc… 제주도… 1577-3… 1577-…\n 6 두산       박정원       21     26.3 코스피 www.doosan… 서울시… 02-339… 02-33…\n 7 DL         이준용       42     24.8 코스피 www.dlhold… 서울특… 02-201… 02-20…\n 8 현대백화점 정지선       23     18.2 코스피 www.ehyund… 서울특… 02-549… 02-54…\n 9 하림       김홍국       55     15.4 코스닥 www.harim.… 전북 …  063-86… 063-8…\n10 효성       조현준       53     14.8 코스피 www.hyosun… 서울시… 02-707… 02-70…\n# … with 13 more rows, and abbreviated variable names ¹​본사주소, ²​대표전화"
  },
  {
    "objectID": "posts/20221124_ftc/index.html#지오코딩",
    "href": "posts/20221124_ftc/index.html#지오코딩",
    "title": "대기업 본사 지도",
    "section": "2.1 지오코딩",
    "text": "2.1 지오코딩\n현재까지 준비한 데이터는 텍스트 주소정보로 이를 지도위에 뿌리기 위해서는 지오코딩을 통해 위경도를 계산해야만 한다.\n\n2.1.1 지오코딩 함수\n카카오 지도 API를 사용해서 주소 텍스트를 넣게 되면 위경도를 반환하는 함수를 제작한다.\n\nlibrary(httr)\nlibrary(jsonlite)\n\n# usethis::edit_r_environ()\n\nget_geocodes <- function(address) {\n  # HTTP 요청을 실행합니다. \n  address_res <- GET(url = 'https://dapi.kakao.com/v2/local/search/address.json',\n             query = list(query = address),\n             add_headers(Authorization = paste0(\"KakaoAK \", Sys.getenv(\"KAKAO_MAP_API_KEY\"))))\n  \n  # KPMG 지리정보 데이터프레임\n  address_list <- address_res %>% \n    content(as = 'text') %>% \n    fromJSON()\n  \n  ## 도로명주소\n  long_lat <- address_list$documents$road_address %>% \n    dplyr::select(x, y) %>% \n    mutate(across(.cols = c(x, y), as.numeric))\n  \n  return(long_lat)\n}\n# 주소를 지정합니다. \nkpmg_addr <- '서울특별시 강남구 역삼동 737' \nget_geocodes(kpmg_addr)\n\n         x        y\n1 127.0365 37.50002\n\n# get_geocodes('서울 종로구 서린동 99')\n\n\n\n2.1.2 지오코딩 실행\n기업수가 제법 되기 때문에 데이터프레임으로 주소를 앞서 개발한 사용자정의함수 get_geocodes()에 보내 위경도 정보를 받아 후속 분석 업무에 효율적으로 사용할 수 있도록 준비한다. 네이버 주소에 우편번호가 포함되어 있어 이를 위경도 좌표로 변환하는 과정에 오류가 있어 이를 발견하고 확인한 후 모든 종목에 대한 데이터를 깔끔하게 정리해둔다.\n\nmarcap_geocode <- marcap_address %>% \n  mutate(geocode_data = map(본사주소, safely(get_geocodes, otherwise = NA_real_)))\n\nmarcap_geocode_tbl <- marcap_geocode %>% \n  # select(종목명, geocode_data) %>% \n  mutate(result = map(geocode_data, \"result\")) %>% \n  # mutate(check = map_lgl(result, is.data.frame)) %>% \n  # filter(check) %>% \n  select(종목명, 홈페이지, 시가총액, 본사주소, result) %>% \n  unnest(result) \n  \nmarcap_geocode_tbl %>% \n  write_rds(glue::glue(\"{here::here()}/data/marcap_geocode.rds\"))"
  },
  {
    "objectID": "posts/20221124_ftc/index.html#지도",
    "href": "posts/20221124_ftc/index.html#지도",
    "title": "대기업 본사 지도",
    "section": "3.1 지도",
    "text": "3.1 지도\n시가총액 상위 기업 본사 위치를 지도에 올리기 위해서 지도가 필요하다. 이를 위해서 leaflet 패키지가 필요하고 전체 지도를 표시하는 것은 의미가 없기 때문에 해당 본사가 위치한 특히 본사가 몰려있는 수도권에 한정하여 지도를 가져온다.\n\nlibrary(leaflet)\nlibrary(fontawesome)\n\nmarcap_geocode <- \n  read_rds(glue::glue(\"{here::here()}/data/marcap_geocode.rds\")) \n  \n\n## 서울경기도 중심\nlat_lng_tbl <- marcap_geocode %>% \n  filter(str_detect(본사주소, \"서울|경기\")) %>% \n  summarise(lat_mean = mean(y),\n            lng_mean = mean(x))\n\nleaflet(marcap_geocode) %>%\n  setView(lat = lat_lng_tbl$lat_mean, \n          lng = lat_lng_tbl$lng_mean, zoom=11) %>%\n  addTiles()"
  },
  {
    "objectID": "posts/20221124_ftc/index.html#본사위치",
    "href": "posts/20221124_ftc/index.html#본사위치",
    "title": "대기업 본사 지도",
    "section": "3.2 본사위치",
    "text": "3.2 본사위치\n본사위치를 다른 곳과 달리하여 시각화를 한다.\n\n# 시각화 아이콘\nlandmark_icons <- awesomeIconList(\n  \"학교\" = makeAwesomeIcon(\n    icon = \"school\",\n    markerColor = \"blue\",\n    library = \"fa\",\n    text = fa(\"school\")\n  ),\n  \"기업\" = makeAwesomeIcon(\n    icon = \"walking\",\n    markerColor = \"green\",\n    library = \"fa\",\n    text = fa(\"walking\")\n  )\n)\n\nmarcap_geocode %>% \n  add_row(종목명 = \"한양대\", 홈페이지=\"https://www.hanyang.ac.kr/\", 시가총액 = 0,\n          본사주소 = \"서울 성동구 왕십리로 222\", \n          x = 127.0454092, y = 37.5571759) %>% \n  mutate(구분 = ifelse(종목명 == \"한양대\", \"학교\", \"기업\")) %>% \n  leaflet() %>%\n    setView(lat = lat_lng_tbl$lat_mean, \n            lng = lat_lng_tbl$lng_mean, zoom=11) %>%\n    addProviderTiles('CartoDB.Positron') %>%\n    addAwesomeMarkers(lat =~y, lng = ~x,\n                      clusterOptions = markerClusterOptions(),\n                      icon = ~ landmark_icons[구분],\n                      popup = ~ as.character(paste0(\"<strong>\", paste0(\"회사:\",`종목명`),\n                                                   \"</strong><br>\",\n                                                   \"-------------------------------------<br>\",\n                                                   \"&middot; 시총: \", round(`시가총액`,1), \"조<br>\",\n                                                   \"&middot; 주소: \", `본사주소`, \"<br>\",\n                                                   \"&middot; 홈페이지: \", `홈페이지`, \"<br>\"\n                     )))"
  },
  {
    "objectID": "quarto_about.html#블로그-저작-소프트웨어",
    "href": "quarto_about.html#블로그-저작-소프트웨어",
    "title": "Quarto",
    "section": "5.1 블로그 저작 소프트웨어",
    "text": "5.1 블로그 저작 소프트웨어\n개인용 컴퓨터가 보급되면서 아래한글과 같은 워드 프로세서를 사용해서 저작을 하는 것이 일반화되었지만 곧이어 인터넷이 보급되면서 웹에 문서를 저작하는 것이 이제는 더욱 중요하게 되었다. 전문 개발자가 아닌 일반인이 HTML, CSS, JavaScript를 학습하여 웹에 문서를 제작하고 출판하는 것은 난이도가 있다보니 워드프레스와 티스토리 같은 위지위그 패러다임을 채택한 저작도구가 사용되고 있으나 상대적으로 HTML, CSS, JavaScript을 조합한 방식과 비교하여 고급스러운 면과 함께 정교함에 있어 아쉬움이 있는 것도 사실이다.\n\n워드프레스와 티스토리HTML + CSS + 자바스크립트"
  },
  {
    "objectID": "quarto_about.html#quarto",
    "href": "quarto_about.html#quarto",
    "title": "Quarto",
    "section": "5.2 Quarto",
    "text": "5.2 Quarto\nQuarto 는 10년전부터 시작된 knitr 경험을 많이 녹여냈고 위지윔 패러다임에 기초를 하고 있다고 볼 수 있다. RStudio를 IDE로 Quarto CLI와 함께 출판물을 저작한다면 편집기에 있는 Visual 모드가 있어 위지윅 패러다임도 문서저작에 사용이 가능하다. 특히, R, 파이썬, SQL, 자바스크립트 등 컴퓨팅 엔진을 달리하여 문서에 그래프, 표, 인터랙티브 결과물도 함께 담을 수 있는 것은 커다란 장점이다."
  },
  {
    "objectID": "quarto_about.html#yaml",
    "href": "quarto_about.html#yaml",
    "title": "Quarto",
    "section": "6.1 YAML",
    "text": "6.1 YAML\n메타데이터는 YAML인데 GNU처럼 “Yet Another Markup Language” 혹은 “YAML Ain’t Markup Language”을 줄인단어다.\n\n키값출력옵션상세 출력옵션\n\n\n---\nkey: value\n---\n\n\n---\nformat: something\n---\n. . .\n---\nformat: pdf\n---\n---\nformat: pdf\n---\n---\nformat: revealjs\n---\n\n\n---\nformat: \n  html:\n    toc: true\n    code-fold: true\n---\n\n\n\n왜 YAML이 필요하게 된 것인가? YAML은 단순히 KEY: Value 에 불과한데 CLI를 이해하게 되면 왜 YAML을 사용하는 것이 유용한지 이해할 수 있다. 먼저 간단한 CLI 명령어를 YAML로 변환해보자.\n\n\n\n\nterminal\n\nquarto render document.qmd --to html\n\n\n\n\n---\nformat: pdf\n---\n\n\n한단계 더 들어가서 좀더 많은 선택옵션을 넣어 고급 기능을 넣는 사례를 살펴본다.\n\n\n\n\nterminal\n\nquarto render document.qmd --to html -M code fold:true\n\n\n\n\n---\nformat: \n  html:\n    toc: true\n    code-fold: true\n---"
  },
  {
    "objectID": "quarto_about.html#마크다운",
    "href": "quarto_about.html#마크다운",
    "title": "Quarto",
    "section": "6.2 마크다운",
    "text": "6.2 마크다운\n데이터 과학 문서 웹사이트에 “마크다운 기초”, “고급 마크다운”, “R 마크다운 실무” 를 참조한다."
  },
  {
    "objectID": "quarto_about.html#코드",
    "href": "quarto_about.html#코드",
    "title": "Quarto",
    "section": "6.3 코드",
    "text": "6.3 코드\nR, 파이썬, SQL, 자바스크립트 등 버그 없이 정상 동작하는 프로그램을 작성하여 포함시킨다."
  },
  {
    "objectID": "quarto_about.html#yaml-코드편집",
    "href": "quarto_about.html#yaml-코드편집",
    "title": "Quarto",
    "section": "6.4 YAML 코드편집",
    "text": "6.4 YAML 코드편집\nRStudio, VSCode IDE는 탭-자동완성(tab-completion)을 제공한다. 즉, 첫단어를 타이핑하고 탭을 연결하여 키보드를 치게되면 연관 명령어가 나와 선택하면 된다. 혹은 Ctrl + space 단축키를 치게되면 전체 명령어가 나온다."
  },
  {
    "objectID": "quarto_blog.html",
    "href": "quarto_blog.html",
    "title": "Quarto 데이터 과학",
    "section": "",
    "text": "대기업 본사 지도\n\n\n\n\n\n\n\n지도\n\n\n대기업\n\n\n공정거래위원회\n\n\n로고\n\n\n\n\n공정거래위원회에서 지정한 상위 대기업 본사 주소를 기준으로 서울시 지도에 로고를 입혀 시각화 합니다.\n\n\n\n\n\n\nNov 24, 2022\n\n\n이광춘\n\n\n\n\n\n\n  \n\n\n\n\n기존 Bookdown 책을 Quarto Book 변환\n\n\n\n\n\n\n\nQuarto Book\n\n\nBookdown\n\n\n전자책\n\n\n리보그\n\n\nReeborg\n\n\n\n\n기존 Bookdown으로 제작된 리보그(Reeborg) 코딩 전자책을 Quato Book으로 변환한 경험을 공유합니다.\n\n\n\n\n\n\nNov 10, 2022\n\n\n이광춘\n\n\n\n\n\n\n  \n\n\n\n\n로우코드 Shiny 앱 개발\n\n\n\n\n\n\n\nQuarto\n\n\nLow code\n\n\nshiny\n\n\n앱개발\n\n\nshinyuieditor\n\n\n데이터 패키지\n\n\nbslib\n\n\n구글 폰트\n\n\ndashboard-builder\n\n\n\n\nShiny 앱개발에 Shiny 생태계를 구성하는 로우코드(Low Code)를 적극 도입하여 개발시간을 단축하고 생산성을 높이는 방법을 소개한다.\n\n\n\n\n\n\nAug 31, 2022\n\n\n이광춘\n\n\n\n\n\n\n  \n\n\n\n\n재현가능 글쓰기\n\n\n\n\n\n\n\nQuarto\n\n\n재현가능 글쓰기\n\n\nCompendium\n\n\n\n\n과학기술에서 중요성을 더해가고 있는 재현성 위기에 대해 재현가능한 글쓰기에 대한 이론적인 토대와 관련 기술 사항을 살펴본다.\n\n\n\n\n\n\nAug 16, 2022\n\n\n이광춘\n\n\n\n\n\n\n  \n\n\n\n\nQuarto 블로그\n\n\n\n\n\n\n\nQuarto\n\n\n블로그\n\n\n\n\nQuarto 블로그 제작방법\n\n\n\n\n\n\nAug 15, 2022\n\n\n이광춘\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "quarto_fonts.html",
    "href": "quarto_fonts.html",
    "title": "Quarto 글꼴",
    "section": "",
    "text": "R 마크다운 문서 작성에 필요한 글꼴 관련 정보\n\n\n\n\n글꼴(font)\n구글 노토 글꼴(Noto Fonts)\nR 마크다운 폰트"
  },
  {
    "objectID": "quarto_fonts.html#typeface-vs-font",
    "href": "quarto_fonts.html#typeface-vs-font",
    "title": "Quarto 글꼴",
    "section": "1.1 typeface vs font",
    "text": "1.1 typeface vs font\ntypeface는 서체로 번역되고 font는 글꼴로 번역된다. 하나의 typeface에 다수 font가 포함될 수 있다. 팬그램(Pangram)은 ’모든 글자’라는 뜻으로 주어진 모든 문자를 적어도 한 번 이상 사용하여 만든 문장을 뜻한다. 팬그램은 로렘 입숨처럼 글꼴 샘플을 보여주거나 장비를 테스트하는 데 사용된다. 영어 팬그램으로 가장 유명한 ‘The quick brown fox jumps over the lazy dog’는 19세기부터 사용되어 왔다. 유사하게 한글에서는 “다람쥐 헌 쳇바퀴에 타고파”가 사용되고 있다."
  },
  {
    "objectID": "quarto_fonts.html#파일폰트와-웹폰트",
    "href": "quarto_fonts.html#파일폰트와-웹폰트",
    "title": "Quarto 글꼴",
    "section": "1.2 파일폰트와 웹폰트",
    "text": "1.2 파일폰트와 웹폰트\n데이터 사이언스 출판을 위해 필요한 글꼴을 반영하는 방식은 크게 두가지로 나뉜다. 하나는 전통적인 방식으로 운영체제에 내장된 글꼴을 문서제작에 글꼴을 반영하는 방식이고, 다른 하나는 웹폰트를 사용하는 방식이다. 웹폰트를 사용하게 될 경우 장점은 출판문서가 동작되는 컴퓨터에 해당 글꼴이 없어도 인터넷을 통해 다운로드하여 글꼴이 반영되기 때문에 글꼴이 없어 생기는 다양한 문제를 해결하는 장점이 있다. 웹폰트로 구글폰트와 눈누가 유명하다. 저작권을 살펴보고 문서제작에 필요한 글꼴을 사용하면 된다.\n\n눈누\n구글 폰트"
  },
  {
    "objectID": "quarto_install.html",
    "href": "quarto_install.html",
    "title": "Quarto 설치/출판",
    "section": "",
    "text": "Quarto를 운영체제에 맞춰 설치한다. Quarto 는 기본적으로 CLI 라서 설치 후 제대로 설정이 되었는지는 환경설정에 경로를 등록해줘야 한다.\n\nQuarto 다운로드Quarto 설치Quarto CLI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n윈도우 시스템의 경우 quarto.exe가 아니고 quarto.cmd 라 이에 유의한다. 즉, 제어판 → 환경 변수 설정 … 에서 \"C:\\Users\\사용자명\\AppData\\Local\\Programs\\Quarto\\bin 디렉토리를 등록한 후 quarto.cmd 을 사용해서 출판한다.\n\n\nCode\nSys.which(\"quarto\")\n                                                                  quarto \n\"C:\\\\Users\\\\STATKC~1\\\\AppData\\\\Local\\\\Programs\\\\Quarto\\\\bin\\\\quarto.cmd\" \n\n\n\n\n\n\nquarto 웹사이트에서 Quarto CLI 엔진을 설치한다. 통합개발도구(IDE)를 설치한다. Quarto CLI를 지원하는 IDE는 VS Code, RStudio, Jupyter, VIM/Emacs 와 같은 텍스트 편집기가 포함된다. IDE까지 설치를 했다면 literate programming 방식으로 마크다운과 프로그래밍 언어를 결합하여 출판을 위한 전문 문서 저작을 시작한다."
  },
  {
    "objectID": "quarto_latex.html",
    "href": "quarto_latex.html",
    "title": "한글 LaTeX",
    "section": "",
    "text": "Danger\n\n\n\n\n\n이광춘, “글을 쓰는 것은 소프트웨어 개발이다!”, 강서양천신문 특집기고(’15년 9월) 와 LaTeX, PDF, 문서, 그리고 사고에서 관련 내용을 발췌한 것임을 밝혀둡니다. 그리고, Quarto PDF 문서를 많이 참고 했습니다."
  },
  {
    "objectID": "quarto_latex.html#latex-엔진",
    "href": "quarto_latex.html#latex-엔진",
    "title": "한글 LaTeX",
    "section": "3.1 \\(\\LaTeX\\) 엔진",
    "text": "3.1 \\(\\LaTeX\\) 엔진\n보통 TexLive에 기반을 둔 tinytex 를 사용하는데 한글을 사용하는 입장에서는 kotex를 설치하는 방법도 모색이 필요하다. 유니코드 문자를 처리하기 위해서 xelatex이 Quarto \\(\\LaTeX\\) 기본엔진이다. 달리 특정하지 않게 되면 xelatex을 통해 CJK 문자가 포함된 PDF 파일 제작이 가능하다.\nquarto install tool tinytex\nkotex 이 갖는 장점은 한글관련 이슈가 될만한 거의 모든 \\(\\LaTeX\\) 패키지와 기본 한글글꼴도 내장하고 있다는 점이다. 하지만, tidytex를 기본 \\(\\LaTeX\\) 엔진으로 사용하는 경우 빠진 패키지로 인해 후속 작업이 어려운 경우 tinytex::parse_install() 함수를 사용하게 되면 다음과 같이 오류난 텍스트를 붙여넣게 되면 자동으로 설치해준다.\n\n\nCode\ntinytex::parse_install(\n  text = \"! LaTeX Error: File `titlepic.sty' not found.\"\n)"
  },
  {
    "objectID": "quarto_latex.html#yaml-파일",
    "href": "quarto_latex.html#yaml-파일",
    "title": "한글 LaTeX",
    "section": "3.2 YAML 파일",
    "text": "3.2 YAML 파일\n문서를 구성하는 기본사항을 적어둔다. PDF 문서를 저작하는 것이라 \\(\\LaTeX\\) 에 대한 기본 지식은 Quarto PDF 문서를 생성하는데 많은 도움이 된다. 글꼴 지정관련하여 로컬 컴퓨터에 폰트 디렉토리에 관련 글꼴 정보가 운영체제와 연결되어 있어야 한다.\nPandoc 문서에 메타데이터 variables for LaTeX을 참조하여 필요한 상세설정작업을 수행한다.\n---\ntitle: \"한글 PDF\"\nformat: \n  pdf:\n    documentclass: report\n    papersize: a4\n    toc: true\n    toc-depth: 2\n    number-sections: true\n    colorlinks: true\n    include-in-header: \n      text: |\n        \\usepackage{pdfpages} \nbibliography: bibliography.bib\nlink-citations: yes\ncsl: apa-single-spaced.csl\nmainfont: \"NanumMyeongjo\"\nsansfont: \"NanumGothic\"\nmonofont: \"D2Coding\"\n---\nQuarto 가 문서 변환 핵심 엔진으로 사용하고 있는 Pandoc 은 \\(\\LaTeX\\) 외에도 ConTeXt, roff ms, HTML (via wkhtmltopdf) 을 사용해서 PDF 파일을 제작할 수 있다. 기존 Pandoc을 이런 방식으로 PDF 를 제작하신 분은 다음 내용을 건너뛰는 것도 좋을 듯 싶다."
  },
  {
    "objectID": "quarto_latex.html#저작",
    "href": "quarto_latex.html#저작",
    "title": "한글 LaTeX",
    "section": "3.3 저작",
    "text": "3.3 저작\n마크다운으로 이미지, 표, 텍스트, 서식, 수식 등 다양한 저작사항을 .qmd 파일에 담아내면 \\(\\LaTeX\\) 엔진이 PDF로 변환작업을 수행해준다.\n\n3.3.1 이미지\n\\(\\LaTeX\\)에 이미지도 삽입가능하다.\n\n\n\n\n\n\nFigure 1: Allison Horst 박사가 그린 펭귄 3종 도식화\n\n\n\n\n\n\n\nFigure 2: 펭귄 부리(bill) 변수 설명\n\n\n\n\n\n\n\n3.3.2 R 코드\n\\(\\LaTeX\\)에 R 파이썬 코드를 통해 계산된 결과를 그래프, 표, 요약통계량 등으로 뽑아내 삽입가능하다.\n\n\nCode\nmass_flipper <- ggplot(data = penguins,\n                       aes(x = flipper_length_mm,\n                           y = body_mass_g)) +\n  geom_point(size = 3,\n             alpha = 0.8) +\n  theme_minimal() +\n  labs(title = \"팔머 관측소 LTER 서식 펭귄 크기\",\n       subtitle = \"Adelie, Chinstrap, Gentoo 펭귄에 대한 물갈퀴 길이와 체질량\",\n       x = \"물갈퀴 길이(Flipper length) (mm)\",\n       y = \"체질량(Body mass) (g)\") +\n  theme_minimal()\n\nmass_flipper\n\n\n\n\n3.3.3 표\n\\(\\LaTeX\\)에 \\(\\LaTeX\\) 표를 넣을 수도 있고 R 혹은 파이썬에서 나온 표를 PDF 파일에 넣을 수도 있다.\n\n3.3.3.1 LaTeX 표\n\n\n\n3.3.3.2 gt 표\n\n\nCode\nknitr::kable(\n  mtcars[1:6, 1:10]\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n17.02\n0\n0\n3\n\n\nValiant\n18.1\n6\n225\n105\n2.76\n3.460\n20.22\n1\n0\n3\n\n\n\n\n\n\n\n\n3.3.4 데이터\n\n\n\n\n\n\n데이터 수집에 대해 궁금하신 분은 클릭하여 추가 학습하세요\n\n\n\n\n\n팔머펭귄 데이터는 Kristen Gorman 박사와 남국 팔머 관측소(Palmer Station, Antarctica LTER)에서 수집되어 공공에 이용가능하게 공개되었습니다.\n\n\n\n{palmerpenguins} 패키지 (Horst et al., 2020)를 통해 R에서 손쉽게 이용가능하게 되었고 원데이터는 Gorman et al. (2014) 에서 최초 공개되었다.\n\n\n3.3.5 PDF 겉면\nfitpaper \\(\\LaTeX\\) 패키지를 사용해서 책 첫장(\\frontmatter)과 마지막장(\\backmatter) 겉면을 장식할 수 있다."
  },
  {
    "objectID": "quarto_layout.html",
    "href": "quarto_layout.html",
    "title": "Quarto 레이아웃",
    "section": "",
    "text": "기사(Article) 작성에 Quarto 는 다음 레이아웃을 지원한다.\n\n기본 콘텐츠 영역 채우기\n콘텐츠 영역 넘겨 채우기\n전체 페이지 채우기\n문서 여백(margin) 채우기"
  },
  {
    "objectID": "quarto_layout.html#기본",
    "href": "quarto_layout.html#기본",
    "title": "Quarto 레이아웃",
    "section": "2.1 기본",
    "text": "2.1 기본\n.column-body 을 기본을 사용하게 된다."
  },
  {
    "objectID": "quarto_layout.html#body-칼럼",
    "href": "quarto_layout.html#body-칼럼",
    "title": "Quarto 레이아웃",
    "section": "2.2 Body 칼럼",
    "text": "2.2 Body 칼럼\n기본 콘텐츠 영역을 살짝 넘겨 콘텐츠를 담을 영역을 넓히고자 할 때는 .column-body-outset을 사용한다.\n:::{.column-body-outset}\n![](fig/horst-eco-r4ds.png)\n:::"
  },
  {
    "objectID": "quarto_layout.html#전체-페이지",
    "href": "quarto_layout.html#전체-페이지",
    "title": "Quarto 레이아웃",
    "section": "2.3 전체 페이지",
    "text": "2.3 전체 페이지\n.column-page를 사용하게 되면 전체 페이지 칼럼을 사용하여 콘텐츠를 담는 공간을 넓힐 수 있다.\n:::{.column-page}\n![](fig/horst-eco-r4ds.png)\n:::"
  },
  {
    "objectID": "quarto_layout.html#표-사례",
    "href": "quarto_layout.html#표-사례",
    "title": "Quarto 레이아웃",
    "section": "2.4 표 사례",
    "text": "2.4 표 사례\n이미지 뿐만 아니라 R 혹은 파이썬 실행결과 산출되는 그래프와 표도 레이아웃을 확장하여 구현할 수 있다.\n::: {.cell .column-page}\n\n```{.r .cell-code}\nknitr::kable(\n  mtcars[1:6, 1:10]\n)\n```\n\n::: {.cell-output-display}\n|                  |  mpg| cyl| disp|  hp| drat|    wt|  qsec| vs| am| gear|\n|:-----------------|----:|---:|----:|---:|----:|-----:|-----:|--:|--:|----:|\n|Mazda RX4         | 21.0|   6|  160| 110| 3.90| 2.620| 16.46|  0|  1|    4|\n|Mazda RX4 Wag     | 21.0|   6|  160| 110| 3.90| 2.875| 17.02|  0|  1|    4|\n|Datsun 710        | 22.8|   4|  108|  93| 3.85| 2.320| 18.61|  1|  1|    4|\n|Hornet 4 Drive    | 21.4|   6|  258| 110| 3.08| 3.215| 19.44|  1|  0|    3|\n|Hornet Sportabout | 18.7|   8|  360| 175| 3.15| 3.440| 17.02|  0|  0|    3|\n|Valiant           | 18.1|   6|  225| 105| 2.76| 3.460| 20.22|  1|  0|    3|\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n17.02\n0\n0\n3\n\n\nValiant\n18.1\n6\n225\n105\n2.76\n3.460\n20.22\n1\n0\n3"
  },
  {
    "objectID": "quarto_layout.html#화면-칼럼",
    "href": "quarto_layout.html#화면-칼럼",
    "title": "Quarto 레이아웃",
    "section": "2.5 화면 칼럼",
    "text": "2.5 화면 칼럼\n.column-screen 을 사용하게 되면 모니터 화면을 가득 채울 수 있다.\n::: {.column-screen}\n![](fig/horst-eco-r4ds.png)\n:::\n\n\n\n마찬가지로 R 혹은 파이썬 코드에 대해서 동일한 결과를 얻을 수 있다.\n::: {.cell .column-screen}\n\n```{.r .cell-code}\nlibrary(leaflet)\nleaflet() %>%\n  addTiles() %>%  # Add default OpenStreetMap map tiles\n  addMarkers(lng=174.768, lat=-36.852, popup=\"The birthplace of R\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-675d70f9f92b69d0db21\" style=\"width:100%;height:464px;\" class=\"leaflet html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-675d70f9f92b69d0db21\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org\\\">OpenStreetMap<\\/a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA<\\/a>\"}]},{\"method\":\"addMarkers\",\"args\":[-36.852,174.768,null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},\"The birthplace of R\",null,null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[-36.852,-36.852],\"lng\":[174.768,174.768]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nCode\nlibrary(leaflet)\nleaflet() %>%\n  addTiles() %>%  # Add default OpenStreetMap map tiles\n  addMarkers(lng=174.768, lat=-36.852, popup=\"R 출생지\")"
  },
  {
    "objectID": "quarto_layout.html#화면-인셋",
    "href": "quarto_layout.html#화면-인셋",
    "title": "Quarto 레이아웃",
    "section": "2.6 화면 인셋",
    "text": "2.6 화면 인셋\n화면 인세(inset)을 사용하여 전체 모니터 화면 전체로 그래프 3개를 넣을 수 있다.\n::: {.cell .column-screen-inset-shaded layout-nrow=\"1\"}\n\n```{.r .cell-code}\nplot(cars)\n```\n\n::: {.cell-output-display}\n![](quarto_layout_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(iris)\n```\n\n::: {.cell-output-display}\n![](quarto_layout_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(pressure)\n```\n\n::: {.cell-output-display}\n![](quarto_layout_files/figure-html/unnamed-chunk-10-3.png){width=672}\n:::\n:::\n\n\nCode\nplot(cars)\nplot(iris)\nplot(pressure)"
  },
  {
    "objectID": "quarto_layout.html#여백-이미지",
    "href": "quarto_layout.html#여백-이미지",
    "title": "Quarto 레이아웃",
    "section": "3.1 여백 이미지",
    "text": "3.1 여백 이미지\n출판에서 유용한 기능 중 하나가 여백에 중요 정보를 기술하는 것이다. .column-margin 클래스를 사용하여 해당 기능을 구현한다.\n::: {.column-margin}\n![](fig/horst-eco-r4ds.png)\n:::"
  },
  {
    "objectID": "quarto_layout.html#여백-그래프",
    "href": "quarto_layout.html#여백-그래프",
    "title": "Quarto 레이아웃",
    "section": "3.2 여백 그래프",
    "text": "3.2 여백 그래프\n여백에 ggplot 그래프 객체를 위치시킬 수도 있다.\n::: {.cell .column-margin}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nmtcars2 <- mtcars\nmtcars2$am <- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() +  geom_smooth(formula = y ~ x, method = \"loess\") +\n  theme(legend.position = 'bottom')\n```\n\n::: {.cell-output-display}\n![MPG vs horsepower, colored by transmission.](quarto_layout_files/figure-html/fig-mtcars-margin-1.png){#fig-mtcars-margin width=672}\n:::\n:::\n\n\nCode\nlibrary(ggplot2)\nmtcars2 <- mtcars\nmtcars2$am <- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() +  geom_smooth(formula = y ~ x, method = \"loess\") +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\nFigure 1: MPG vs horsepower, colored by transmission."
  },
  {
    "objectID": "quarto_layout.html#여백-표",
    "href": "quarto_layout.html#여백-표",
    "title": "Quarto 레이아웃",
    "section": "3.3 여백 표",
    "text": "3.3 여백 표\n마찬가지로 여백에 표를 위치시킬 수도 있다.\n::: {.cell .column-margin}\n\n```{.r .cell-code}\nknitr::kable(\n  mtcars[1:6, 1:3]\n)\n```\n\n::: {.cell-output-display}\n|                  |  mpg| cyl| disp|\n|:-----------------|----:|---:|----:|\n|Mazda RX4         | 21.0|   6|  160|\n|Mazda RX4 Wag     | 21.0|   6|  160|\n|Datsun 710        | 22.8|   4|  108|\n|Hornet 4 Drive    | 21.4|   6|  258|\n|Hornet Sportabout | 18.7|   8|  360|\n|Valiant           | 18.1|   6|  225|\n:::\n:::\n\n\nCode\nknitr::kable(\n  mtcars[1:6, 1:3]\n)\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\n\n\n\n\nMazda RX4\n21.0\n6\n160\n\n\nMazda RX4 Wag\n21.0\n6\n160\n\n\nDatsun 710\n22.8\n4\n108\n\n\nHornet 4 Drive\n21.4\n6\n258\n\n\nHornet Sportabout\n18.7\n8\n360\n\n\nValiant\n18.1\n6\n225"
  },
  {
    "objectID": "quarto_layout.html#수식-등",
    "href": "quarto_layout.html#수식-등",
    "title": "Quarto 레이아웃",
    "section": "3.4 수식 등",
    "text": "3.4 수식 등\n.column-margin 클래스에 수식을 비롯한 기타 콘텐츠도 반영시킬 수 있다.\n\n::: {.column-margin}\n $[a, b]$ 구간 $x$에 대한 **미적분학의 첫 번째 기본 정리(first fundamental theorem of calculus)** 는 다음과 같다.\n\n\n$$\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).$$\n\n\n:::\n\n\n\n\\([a, b]\\) 구간 \\(x\\)에 대한 미적분학의 첫 번째 기본 정리(first fundamental theorem of calculus) 는 다음과 같다.\n\\[\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).\\]"
  },
  {
    "objectID": "quarto_penguin.html",
    "href": "quarto_penguin.html",
    "title": "Quarto 기본사용법",
    "section": "",
    "text": "Warning\n\n\n\n2022년 6월 3일 Julia Müller가 R-Ladies Freiburg 에서 발표한 “Getting to know Quarto” 발표자료 기초하여 작성된 문서입니다. 자세한 사항은 발표영상과 발표코드를 참조 바랍니다."
  },
  {
    "objectID": "quarto_penguin.html#데이터-선택",
    "href": "quarto_penguin.html#데이터-선택",
    "title": "Quarto 기본사용법",
    "section": "1.1 데이터 선택",
    "text": "1.1 데이터 선택\n항상 모든 사람이들이 말하는데….\n\n펭귄은 귀요미!\n\n… 이제부터 펭귄 데이터로 즐거운 데이터 사이언스를 시작해봅시다.\n\n\n\n\n\n\nNote\n\n\n\n팔머펭귄(palmerpenguins) 데이터셋은 기계학습과 데이터 사이언스에 흔히 사용되는 붓꽃(iris) 데이터를 대체하기 위해 제작된 것입니다.\n\n\n팔머펭귄 데이터셋에 대한 자세한 사항은 Allison Horst’s Github page. 웹사이트를 참조합니다.\n\n\n\n\n\n\n데이터 수집에 대해 궁금하신 분은 클릭하여 추가 학습하세요\n\n\n\n\n\n팔머펭귄 데이터는 Kristen Gorman 박사와 남국 팔머 관측소(Palmer Station, Antarctica LTER)에서 수집되어 공공에 이용가능하게 공개되었습니다.\n\n\n\n{palmerpenguins} 패키지 (Horst et al., 2020)를 통해 R에서 손쉽게 이용가능하게 되었고 원데이터는 Gorman et al. (2014) 에서 최초 공개되었다."
  },
  {
    "objectID": "quarto_penguin.html#데이터와-패키지-불러오기",
    "href": "quarto_penguin.html#데이터와-패키지-불러오기",
    "title": "Quarto 기본사용법",
    "section": "1.2 데이터와 패키지 불러오기",
    "text": "1.2 데이터와 패키지 불러오기\n먼저, 다음 작업을 순차적으로 수행한다:\n\n패키지 적재하기(loading)\n데이터 불러오기\n데이터가 올바른 형식인지 확인한다.\n\n“올바른 형식”이란, 데이터가 정돈되어(tidy) 요약통계량, 시각화, 모형개발에 올바른 형태로 준비되어 있음을 의미함.\n\n\n\n\n\n\n다운로드하지 않고 데이터 사용하는 방법\n\n\n\npalmerpenguins 데이터 패키지에 동일한 데이터를 바로 이용할 수 있음.\n\n\n\n\nCode\nlibrary(tidyverse)\npenguins <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-28/penguins.csv') %>% \n  drop_na()\nhead(penguins)\n\n\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_l…¹ body_…² sex    year\n  <chr>   <chr>              <dbl>         <dbl>       <dbl>   <dbl> <chr> <dbl>\n1 Adelie  Torgersen           39.1          18.7         181    3750 male   2007\n2 Adelie  Torgersen           39.5          17.4         186    3800 fema…  2007\n3 Adelie  Torgersen           40.3          18           195    3250 fema…  2007\n4 Adelie  Torgersen           36.7          19.3         193    3450 fema…  2007\n5 Adelie  Torgersen           39.3          20.6         190    3650 male   2007\n6 Adelie  Torgersen           38.9          17.8         181    3625 fema…  2007\n# … with abbreviated variable names ¹​flipper_length_mm, ²​body_mass_g\n\n\n결측값이 있어 제거함. 따라서 데이터는 관측점으로 총 333 행수를 갖게 됨 1."
  },
  {
    "objectID": "quarto_penguin.html#요약-통계량",
    "href": "quarto_penguin.html#요약-통계량",
    "title": "Quarto 기본사용법",
    "section": "1.3 요약 통계량",
    "text": "1.3 요약 통계량\n\n\n\n\n\n\nFigure 1: Allison Horst 박사가 그린 펭귄 3종 도식화\n\n\n\n\n\n\n\nFigure 2: 펭귄 부리(bill) 변수 설명\n\n\n\n\n\n\n\n평균 부리 길이는 43.9927928 mm, 평균 부리 깊이는 17.1648649 mm.\n\n테이터 수집 시기는 2007 년과 2009 년도 사이.\n\n\n\n1.3.1 Base R과 Tidyverse 구문 비교\n데이터프레임 특정 칼럼을 보는 코드를 Base R과 Tidyverse 구문으로 작성하면 차이를 확인할 수 있다.\n\nBase RTidyverse\n\n\npenguins$bill_length_mm\n\n\npenguins %>% select(bill_length_mm)"
  },
  {
    "objectID": "quarto_penguin.html#펭귄-체중과-물갈퀴-길이",
    "href": "quarto_penguin.html#펭귄-체중과-물갈퀴-길이",
    "title": "Quarto 기본사용법",
    "section": "2.1 펭귄 체중과 물갈퀴 길이",
    "text": "2.1 펭귄 체중과 물갈퀴 길이\n다음 그래프는 {palmerpenguins} 패키지 소품문에 제시된 것은 간략하게 작성한 것임.\n\n2.1.1 전체 데이터\n\n\nCode\nmass_flipper <- ggplot(data = penguins,\n                       aes(x = flipper_length_mm,\n                           y = body_mass_g)) +\n  geom_point(size = 3,\n             alpha = 0.8) +\n  theme_minimal() +\n  labs(title = \"팔머 관측소 LTER 서식 펭귄 크기\",\n       subtitle = \"Adelie, Chinstrap, Gentoo 펭귄에 대한 물갈퀴 길이와 체질량\",\n       x = \"물갈퀴 길이(Flipper length) (mm)\",\n       y = \"체질량(Body mass) (g)\") +\n  theme_minimal()\n\nmass_flipper\n\n\n\n\n\nFigure 3: Penguin flipper length and body mass\n\n\n\n\n측정에 대한 설명은 Figure 2 을 참조한다.\n\n\n2.1.2 펭귄 종별로 나눠서 시각화\n\n\nCode\nmass_flipper_species <- ggplot(data = penguins,\n                       aes(x = flipper_length_mm,\n                           y = body_mass_g)) +\n  geom_point(aes(color = species,\n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  theme_minimal() +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(title = \"팔머 관측소 LTER 서식 펭귄 크기\",\n       subtitle = \"Adelie, Chinstrap, Gentoo 펭귄에 대한 물갈퀴 길이와 체질량\",\n       x = \"물갈퀴 길이(Flipper length) (mm)\",\n       y = \"체질량(Body mass) (g)\",\n       color = \"펭귄 종\",\n       shape = \"펭귄 종\") +\n  theme_minimal()\n\nmass_flipper_species\n\n\n\n\n\nFigure 4: Penguin flipper length and body mass, separately by species\n\n\n\n\nFigure 3 그래프는 펭귄 종을 나누지 않았지만, Figure 4 그래프는 펭귄 종별로 나눠 시각화.\n\n\n2.1.3 펭귄 종과 성별을 구분하여 시각화\n\n\nCode\nmass_flipper_species +\n  facet_wrap(~sex)\n\n\n\n\n\nFigure 5: 펭귄 종과 성별로 나눠 펭귄 물갈퀴 길이와 체질량 시각화x"
  },
  {
    "objectID": "quarto_sass.html",
    "href": "quarto_sass.html",
    "title": "Quarto 외양",
    "section": "",
    "text": "1 SASS 파일 위치 1\n기존 외양 정보를 담은 .css 파일을 확장하여 .scss 파일에 담아둔다. 웹사이트 구조를 담고 있는 _quarto.yaml 파일에 외양 정보를 담고 있는 .scss 파일을 지정해둔다. 예를 들어 외양 정보가 담긴 quarto.scss 파일이 css/ 디렉토리 아래 존재한다면 다음과 같이 _quarto.yaml 파일에 반영한다.\n...\n\nformat:\n  html:\n    theme: \n      - litera\n      - css/quarto.scss\n    toc: true\n...\n\n\n2 SASS 파일\nquarto.scss 파일에 글꼴과 색상 등 외양관련 정보를 담아 기록한다. 부츠트랩을 외양을 다루는데 많이 사용하기 때문에\nbootstrap/scss/_variables.scss을 참조하여 해당 영역 색상과 글꼴을 자유로이 변경시킨다.\n/*-- scss:defaults --*/\n\n// Color system\n\n// scss-docs-start gray-color-variables\n$white:    #fff !default;\n$gray-100: #f8f9fa !default;\n$gray-200: #e9ecef !default;\n$gray-300: #dee2e6 !default;\n$gray-400: #ced4da !default;\n$gray-500: #adb5bd !default;\n$gray-600: #6c757d !default;\n$gray-700: #495057 !default;\n$gray-800: #343a40 !default;\n$gray-900: #212529 !default;\n$black:    #000 !default;\n\n\n// 글꼴 \n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR');\n@import url('https://fonts.googleapis.com/css2?family=Noto+Serif+KR');\n@import url('https://fonts.googleapis.com/css2?family=Nanum+Myeongjo&display=swap');\n\n@font-face {\n    font-family: 'MaruBuri-Regular';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-10-21@1.0/MaruBuri-Regular.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'D2Coding';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_three@1.0/D2Coding.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n}\n\n\n// Typography\n//\n// Font, line-height, and color for body text, headings, and more.\n\n// scss-docs-start font-variables\n// stylelint-disable value-keyword-case\n$font-family-sans-serif: \"Noto Sans KR\", 'Nanum Myeongjo',  !default;\n// $font-family-serif: 'MaruBuri-Regular', \"Noto Serif KR\", !default;\n$font-family-monospace:  'D2Coding', \"Courier New\", monospace !default;\n\n// scss-docs-start headings-variables\n$headings-font-family:  $font-family-sans-serif !default;\n\n\n/*-- scss:rules --*/\n\n.navbar-dark {\n    background-color:$gray-600;\n    color: #000000;\n    font-family: 'MaruBuri-Regular';\n}\n\n.sidebar-item {\n    margin-bottom: 0.2em;\n    font-family: 'Noto Serif KR';\n}\n\nh1, .h1, h2, .h2 {\n    margin-top: 2rem;\n    margin-bottom: 1rem;\n    font-family: 'Noto Sans KR';\n}\n\np {\n    font-family: 'MaruBuri-Regular', serif;\n}\n\n\n3 작업방법\n개발하는 것이 웹사이트라서 quarto.cmd preview를 실행하여 로컬 컴퓨터에서 웹서버를 띄워 웹사이트를 보면서 작업하는 방식을 취힌다.\n\n\n\n미리보기 모드 동작\n$ quarto.cmd preview\nTerminating existing preview server....DONE\n\nPreparing to preview\n\nWatching files for changes\nBrowse at http://localhost:7171/\n\n\n\n미리보기 결과\n\n\n\n\n\n\n\n\n\nFootnotes\n\n\nRappA (2022. 7. 1.), “How to style your Quarto blog without knowing a lot of HTML/CSS”↩︎"
  },
  {
    "objectID": "quarto_slideshow.html#hello-there",
    "href": "quarto_slideshow.html#hello-there",
    "title": "Quarto Presentations",
    "section": "Hello, There",
    "text": "Hello, There\nThis presentation will show you examples of what you can do with Quarto and Reveal.js, including:\n\nPresenting code and LaTeX equations\nIncluding computations in slide output\nImage, video, and iframe backgrounds\nFancy transitions and animations\nPrinting to PDF\n\n…and much more"
  },
  {
    "objectID": "quarto_slideshow.html#pretty-code",
    "href": "quarto_slideshow.html#pretty-code",
    "title": "Quarto Presentations",
    "section": "Pretty Code",
    "text": "Pretty Code\n\nOver 20 syntax highlighting themes available\nDefault theme optimized for accessibility\n\n# Define a server for the Shiny app\nfunction(input, output) {\n  \n  # Fill in the spot we created for a plot\n  output$phonePlot <- renderPlot({\n    # Render a barplot\n  })\n}\n\nLearn more: Syntax Highlighting"
  },
  {
    "objectID": "quarto_slideshow.html#code-animations",
    "href": "quarto_slideshow.html#code-animations",
    "title": "Quarto Presentations",
    "section": "Code Animations",
    "text": "Code Animations\n\nOver 20 syntax highlighting themes available\nDefault theme optimized for accessibility\n\n# Define a server for the Shiny app\nfunction(input, output) {\n  \n  # Fill in the spot we created for a plot\n  output$phonePlot <- renderPlot({\n    # Render a barplot\n    barplot(WorldPhones[,input$region]*1000, \n            main=input$region,\n            ylab=\"Number of Telephones\",\n            xlab=\"Year\")\n  })\n}\n\nLearn more: Code Animations"
  },
  {
    "objectID": "quarto_slideshow.html#line-highlighting",
    "href": "quarto_slideshow.html#line-highlighting",
    "title": "Quarto Presentations",
    "section": "Line Highlighting",
    "text": "Line Highlighting\n\nHighlight specific lines for emphasis\nIncrementally highlight additional lines\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\nLearn more: Line Highlighting"
  },
  {
    "objectID": "quarto_slideshow.html#executable-code",
    "href": "quarto_slideshow.html#executable-code",
    "title": "Quarto Presentations",
    "section": "Executable Code",
    "text": "Executable Code\n\nlibrary(ggplot2)\nggplot(mtcars, aes(hp, mpg, color = am)) +\n  geom_point() +  geom_smooth(formula = y ~ x, method = \"loess\")\n\n\n\n\n\nLearn more: Executable Code"
  },
  {
    "objectID": "quarto_slideshow.html#latex-equations",
    "href": "quarto_slideshow.html#latex-equations",
    "title": "Quarto Presentations",
    "section": "LaTeX Equations",
    "text": "LaTeX Equations\nMathJax rendering of equations to HTML\n\n\n\\begin{gather*}\na_1=b_1+c_1\\\\\na_2=b_2+c_2-d_2+e_2\n\\end{gather*}\n\n\\begin{align}\na_{11}& =b_{11}&\n  a_{12}& =b_{12}\\\\\na_{21}& =b_{21}&\n  a_{22}& =b_{22}+c_{22}\n\\end{align}\n\n\\[\\begin{gather*}\na_1=b_1+c_1\\\\\na_2=b_2+c_2-d_2+e_2\n\\end{gather*}\\]\n\\[\\begin{align}\na_{11}& =b_{11}&\n  a_{12}& =b_{12}\\\\\na_{21}& =b_{21}&\n  a_{22}& =b_{22}+c_{22}\n\\end{align}\\]\n\n\n\nLearn more: LaTeX Equations"
  },
  {
    "objectID": "quarto_slideshow.html#column-layout",
    "href": "quarto_slideshow.html#column-layout",
    "title": "Quarto Presentations",
    "section": "Column Layout",
    "text": "Column Layout\nArrange content into columns of varying widths:\n\n\n\nMotor Trend Car Road Tests\nThe data was extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles.\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\nwt\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n2.620\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n2.875\n\n\nDatsun 710\n22.8\n4\n108\n93\n2.320\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.215\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.440\n\n\nValiant\n18.1\n6\n225\n105\n3.460\n\n\n\n\n\n\n\n\nLearn more: Multiple Columns"
  },
  {
    "objectID": "quarto_slideshow.html#incremental-lists",
    "href": "quarto_slideshow.html#incremental-lists",
    "title": "Quarto Presentations",
    "section": "Incremental Lists",
    "text": "Incremental Lists\nLists can optionally be displayed incrementally:\n\n\nFirst item\nSecond item\nThird item\n\n\n\n Insert pauses to make other types of content display incrementally.\n\nLearn more: Incremental Lists"
  },
  {
    "objectID": "quarto_slideshow.html#fragments",
    "href": "quarto_slideshow.html#fragments",
    "title": "Quarto Presentations",
    "section": "Fragments",
    "text": "Fragments\nIncremental text display and animation with fragments:\n\n\nFade in\n\n\nSlide up while fading in\n\n\nSlide left while fading in\n\n\nFade in then semi out\n\n\n\nStrike\n\n\nHighlight red\n\n\nLearn more: Fragments"
  },
  {
    "objectID": "quarto_slideshow.html#slide-backgrounds",
    "href": "quarto_slideshow.html#slide-backgrounds",
    "title": "Quarto Presentations",
    "section": "Slide Backgrounds",
    "text": "Slide Backgrounds\nSet the background attribute on a slide to change the background color (all CSS color formats are supported).\nDifferent background transitions are available via the background-transition option.\n\nLearn more: Slide Backgrounds"
  },
  {
    "objectID": "quarto_slideshow.html#media-backgrounds",
    "href": "quarto_slideshow.html#media-backgrounds",
    "title": "Quarto Presentations",
    "section": "Media Backgrounds",
    "text": "Media Backgrounds\nYou can also use the following as a slide background:\n\nAn image: background-image\nA video: background-video\nAn iframe: background-iframe\n\n\nLearn more: Media Backgrounds"
  },
  {
    "objectID": "quarto_slideshow.html#absolute-position",
    "href": "quarto_slideshow.html#absolute-position",
    "title": "Quarto Presentations",
    "section": "Absolute Position",
    "text": "Absolute Position\nPosition images or other elements at precise locations\n\n\n\n\nLearn more: Absolute Position"
  },
  {
    "objectID": "quarto_slideshow.html#auto-animate",
    "href": "quarto_slideshow.html#auto-animate",
    "title": "Quarto Presentations",
    "section": "Auto-Animate",
    "text": "Auto-Animate\nAutomatically animate matching elements across slides with Auto-Animate.\n\n\n\n\n\n\n\n\n\n\n\n\nLearn more: Auto-Animate"
  },
  {
    "objectID": "quarto_slideshow.html#auto-animate-1",
    "href": "quarto_slideshow.html#auto-animate-1",
    "title": "Quarto Presentations",
    "section": "Auto-Animate",
    "text": "Auto-Animate\nAutomatically animate matching elements across slides with Auto-Animate.\n\n\n\n\n\n\n\n\n\n\n\n\nLearn more: Auto-Animate"
  },
  {
    "objectID": "quarto_slideshow.html#slide-transitions",
    "href": "quarto_slideshow.html#slide-transitions",
    "title": "Quarto Presentations",
    "section": "Slide Transitions",
    "text": "Slide Transitions\nThe next few slides will transition using the slide transition\n\n\n\n\n\n\n\nTransition\nDescription\n\n\n\n\nnone\nNo transition (default, switch instantly)\n\n\nfade\nCross fade\n\n\nslide\nSlide horizontally\n\n\nconvex\nSlide at a convex angle\n\n\nconcave\nSlide at a concave angle\n\n\nzoom\nScale the incoming slide so it grows in from the center of the screen.\n\n\n\n\nLearn more: Slide Transitions"
  },
  {
    "objectID": "quarto_slideshow.html#tabsets",
    "href": "quarto_slideshow.html#tabsets",
    "title": "Quarto Presentations",
    "section": "Tabsets",
    "text": "Tabsets\n\nPlotData\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\n\n\n\n\n\n\n\nLearn more: Tabsets"
  },
  {
    "objectID": "quarto_slideshow.html#interactive-slides",
    "href": "quarto_slideshow.html#interactive-slides",
    "title": "Quarto Presentations",
    "section": "Interactive Slides",
    "text": "Interactive Slides\nInclude Jupyter widgets and htmlwidgets in your presentations\n\n\n\n\n\n\n\nLearn more: Jupyter widgets, htmlwidgets"
  },
  {
    "objectID": "quarto_slideshow.html#interactive-slides-1",
    "href": "quarto_slideshow.html#interactive-slides-1",
    "title": "Quarto Presentations",
    "section": "Interactive Slides",
    "text": "Interactive Slides\nTurn presentations into applications with Observable and Shiny. Use component layout to position inputs and outputs.\n\n\n\n\n\nviewof talentWeight = Inputs.range([-2, 2], { value: 0.7, step: 0.01, label: \"talent weight\" })\nviewof looksWeight = Inputs.range([-2, 2], { value: 0.7, step: 0.01, label: \"looks weight\" })\nviewof minimum = Inputs.range([-2, 2], { value: 1, step: 0.01, label: \"min fame\" })\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { plotActors } from './actors.js';\nplotActors(actors, talentWeight, looksWeight, minimum)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLearn more: Observable, Shiny, Component Layout"
  },
  {
    "objectID": "quarto_slideshow.html#preview-links",
    "href": "quarto_slideshow.html#preview-links",
    "title": "Quarto Presentations",
    "section": "Preview Links",
    "text": "Preview Links\nNavigate to hyperlinks without disrupting the flow of your presentation.\nUse the preview-links option to open links in an iframe on top of your slides. Try clicking the link below for a demonstration:\n\nMatplotlib: Visualization with Python\n\n\nLearn more: Preview Links"
  },
  {
    "objectID": "quarto_slideshow.html#themes",
    "href": "quarto_slideshow.html#themes",
    "title": "Quarto Presentations",
    "section": "Themes",
    "text": "Themes\n10 Built-in Themes (or create your own)\n\n\n\n\n\n\n\n\n\n\n\nLearn more: Themes"
  },
  {
    "objectID": "quarto_slideshow.html#easy-navigation",
    "href": "quarto_slideshow.html#easy-navigation",
    "title": "Quarto Presentations",
    "section": "Easy Navigation",
    "text": "Easy Navigation\n\nQuickly jump to other parts of your presentation\n\n\n\n\n\n\n\nToggle the slide menu with the menu button (bottom left of slide) to go to other slides and access presentation tools.\n\n\n\nYou can also press m to toggle the menu open and closed.\n\nLearn more: Navigation"
  },
  {
    "objectID": "quarto_slideshow.html#chalkboard",
    "href": "quarto_slideshow.html#chalkboard",
    "title": "Quarto Presentations",
    "section": "Chalkboard",
    "text": "Chalkboard\n\nFree form drawing and slide annotations\n\n\n\n\n\n\n\nUse the chalkboard button at the bottom left of the slide to toggle the chalkboard.\n\n\n\n\n\n\n\n\n\nUse the notes canvas button at the bottom left of the slide to toggle drawing on top of the current slide.\n\n\n\nYou can also press b to toggle the chalkboard or c to toggle the notes canvas.\n\nLearn more: Chalkboard"
  },
  {
    "objectID": "quarto_slideshow.html#point-of-view",
    "href": "quarto_slideshow.html#point-of-view",
    "title": "Quarto Presentations",
    "section": "Point of View",
    "text": "Point of View\nPress o to toggle overview mode:\n\nHold down the Alt key (or Ctrl in Linux) and click on any element to zoom towards it—try it now on this slide.\n\nLearn more: Overview Mode, Slide Zoom"
  },
  {
    "objectID": "quarto_slideshow.html#speaker-view",
    "href": "quarto_slideshow.html#speaker-view",
    "title": "Quarto Presentations",
    "section": "Speaker View",
    "text": "Speaker View\nPress s (or use the presentation menu) to open speaker view\n\n\n\n\n\n\nLearn more: Speaker View"
  },
  {
    "objectID": "quarto_slideshow.html#authoring-tools",
    "href": "quarto_slideshow.html#authoring-tools",
    "title": "Quarto Presentations",
    "section": "Authoring Tools",
    "text": "Authoring Tools\nLive side-by-side preview for any notebook or text editor including Jupyter and VS Code\n\n\n\n\n\n\n\n\nLearn more: Jupyter, VS Code, Text Editors"
  },
  {
    "objectID": "quarto_slideshow.html#authoring-tools-1",
    "href": "quarto_slideshow.html#authoring-tools-1",
    "title": "Quarto Presentations",
    "section": "Authoring Tools",
    "text": "Authoring Tools\nRStudio includes an integrated presentation preview pane\n\n\nLearn more: RStudio"
  },
  {
    "objectID": "quarto_slideshow.html#and-more",
    "href": "quarto_slideshow.html#and-more",
    "title": "Quarto Presentations",
    "section": "And More…",
    "text": "And More…\n\nTouch optimized (presentations look great on mobile, swipe to navigate slides)\nFooter & Logo (optionally specify custom footer per-slide)\nAuto-Slide (step through slides automatically, without any user input)\nMultiplex (allows your audience to follow the slides of the presentation you are controlling on their own phone, tablet or laptop).\n\n\nLearn more: Quarto Presentations"
  },
  {
    "objectID": "slideshow/data-science.html",
    "href": "slideshow/data-science.html",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 사이언스"
  },
  {
    "objectID": "slideshow/data-science.html#section-1",
    "href": "slideshow/data-science.html#section-1",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 사이언스"
  },
  {
    "objectID": "slideshow/data-science.html#데이터-사이언스",
    "href": "slideshow/data-science.html#데이터-사이언스",
    "title": "Quarto 데이터 사이언스",
    "section": "데이터 사이언스",
    "text": "데이터 사이언스"
  },
  {
    "objectID": "slideshow/data-science.html#데이터-과학-욕구단계설",
    "href": "slideshow/data-science.html#데이터-과학-욕구단계설",
    "title": "Quarto 데이터 사이언스",
    "section": "데이터 과학 욕구단계설",
    "text": "데이터 과학 욕구단계설\n\n매슬로 욕구단계설가치 피라미드"
  },
  {
    "objectID": "slideshow/index.html#section",
    "href": "slideshow/index.html#section",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 사이언스"
  },
  {
    "objectID": "slideshow/index.html#section-1",
    "href": "slideshow/index.html#section-1",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 사이언스"
  },
  {
    "objectID": "slideshow/index.html#데이터-사이언스",
    "href": "slideshow/index.html#데이터-사이언스",
    "title": "Quarto 데이터 사이언스",
    "section": "데이터 사이언스",
    "text": "데이터 사이언스"
  },
  {
    "objectID": "slideshow/index.html#데이터-과학-욕구단계설",
    "href": "slideshow/index.html#데이터-과학-욕구단계설",
    "title": "Quarto 데이터 사이언스",
    "section": "데이터 과학 욕구단계설",
    "text": "데이터 과학 욕구단계설\n\n매슬로 욕구단계설가치 피라미드"
  },
  {
    "objectID": "slideshow/index.html#section-2",
    "href": "slideshow/index.html#section-2",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 과학 문제"
  },
  {
    "objectID": "slideshow/index.html#section-3",
    "href": "slideshow/index.html#section-3",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 과학 문제"
  },
  {
    "objectID": "slideshow/index.html#데이터-사이언스---출판",
    "href": "slideshow/index.html#데이터-사이언스---출판",
    "title": "Quarto 데이터 사이언스",
    "section": "데이터 사이언스 - 출판",
    "text": "데이터 사이언스 - 출판\n\n문제점개념Single Sourcing Multi-Use\n\n\n\n\n\nFigure 1: 문제점\n\n\n\n\n\n\n\nFigure 2: Single Sourcing 개념\n\n\n\n\n\n\n\nFigure 3: Single Sourcing Multi-Use"
  },
  {
    "objectID": "slideshow/index.html#복잡성",
    "href": "slideshow/index.html#복잡성",
    "title": "Quarto 데이터 사이언스",
    "section": "복잡성",
    "text": "복잡성\n\n엑셀 1아래한글 2"
  },
  {
    "objectID": "slideshow/index.html#시각화---그래프-문법",
    "href": "slideshow/index.html#시각화---그래프-문법",
    "title": "Quarto 데이터 사이언스",
    "section": "시각화 - 그래프 문법 3",
    "text": "시각화 - 그래프 문법 3\n\n\n\n\n\nR 코드\n\nlibrary(tidyverse)\nbill_df <- data.frame(\n  sex = factor(c(\"여성\",\"여성\",\"남성\",\"남성\")),\n  time = factor(c(\"점심\",\"저녁\",\"점심\",\"저녁\"), levels=c(\"점심\",\"저녁\")),\n  total_bill = c(13.53, 16.81, 16.24, 17.42)\n)\n\n\n\n\n실행결과\n\nbill_df\n\n   sex time total_bill\n1 여성 점심      13.53\n2 여성 저녁      16.81\n3 남성 점심      16.24\n4 남성 저녁      17.42\n\n\n\n\n\n\n\n\n\nR 코드\n\nbill_df %>% \n  ggplot(aes(x=time, y=total_bill, group=sex, shape=sex, colour=sex)) +\n    geom_line(aes(linetype=sex), size=1) +    \n    geom_point(size=3, fill=\"white\") +        \n    expand_limits(y=0) +                      \n    scale_colour_hue(name=\"결재자 성별\", l=30) +\n    scale_shape_manual(name=\"결재자 성별\", values=c(22,21)) +\n    scale_linetype_discrete(name=\"결재자 성별\") +\n    xlab(\"점심, 석식\") + ylab(\"팁(Tip)\") +\n    ggtitle(\"식사 결재 평균 팁\") +    \n    theme_bw() +\n    theme(legend.position=c(.7, .4))\n\n\n\n\n실행결과\n\n\n\n\n\n\n\n\n\n\n\n\nR 코드\n\nbill_mat <- matrix( bill_df$total_bill,\n                   nrow = 2,\n                   byrow=TRUE,\n                   dimnames = list(c(\"여성\", \"남성\"), c(\"점심\", \"저녁\"))\n                   )\n\nmf_col <- c(\"#3CC3BD\", \"#FD8210\")\nbarplot(bill_mat, beside = TRUE, border=NA, col=mf_col)\nlegend(\"topleft\", row.names(bill_mat), pch=15, col=mf_col)\n\n\npar(cex=1.2, cex.axis=1.1)\nmatplot(bill_mat, type=\"b\", lty=1, pch=19, col=mf_col,\n    cex=1.5, lwd=3, las=1, bty=\"n\", xaxt=\"n\",\n    xlim=c(0.7, 2.2), ylim=c(12,18), ylab=\"\",\n    main=\"식사 결재 평균 팁\", yaxt=\"n\")\naxis(2, at=axTicks(2), labels=sprintf(\"$%s\", axTicks(2)),\n    las=1, cex.axis=0.8, col=NA, line = -0.5)\ngrid(NA, NULL, lty=3, lwd=1, col=\"#000000\")\nabline(v=c(1,2), lty=3, lwd=1, col=\"#000000\")\nmtext(\"점심\", side=1, at=1)\nmtext(\"저녁\", side=1, at=2)\ntext(1.5, 17.3, \"남성\", srt=8, font=3)\ntext(1.5, 15.1, \"여성\", srt=33, font=3)\n\n\n\n\n실행결과"
  },
  {
    "objectID": "slideshow/index.html#디자인---코드",
    "href": "slideshow/index.html#디자인---코드",
    "title": "Quarto 데이터 사이언스",
    "section": "디자인 - 코드",
    "text": "디자인 - 코드\n\n데이터 가공dplyr RBase RSQL파이썬\n\n\n\n날짜와 시간별로 총 빈도수와 출발연착 평균 시간을 구한다. 단, 총빈도수가 10 회 미만인 것은 제외하고 출발연착 시간의 결측값을 제거하고 계산한다.\n\n\nflights 데이터프레임에서\n출발 연착시간(dep_delay) 칼럼에서 결측값이 없는 (!is.na()) 행을 필터링 하고\n날짜별(date), 시간별(hour) 그룹을 묶어\n평균 출발 연착시간을 계산하고 총빈도수 총계를 내고\n총빈도수가 10회 이상인 날짜와 시간을 찾아내시오\n\n\n\n\nhourly_delay <- flights %>%  \n  filter(!is.na(dep_delay)) %>% \n  group_by(date, hour) %>% \n  summarise(delay = mean(dep_delay), n = n()) %>%  \n  filter(n > 10) \n\n\n\n\nhourly_delay <- filter(   \n    summarise(   \n        group_by(   \n             filter(   \n                 flights,    \n                 !is.na(dep_delay)   \n             ),    \n             date, hour   \n        ),    \n    delay = mean(dep_delay),    \n         n = n()   \n    ),    \n    n > 10   \n)\n\n\n\n\nSELECT \"date\", \"hour\", \"delay\", \"n\"\nFROM (\n    SELECT \"date\", \"hour\",\n        AVG(\"dep_delay\") AS \"delay\",\n        COUNT() AS \"n\"\n    FROM \"flights\"\n    WHERE NOT(\"dep_delay\" IS NULL)\n    GROUP BY \"date\", \"hour\"\n) AS \"_W1\"\nWHERE \"n\" > 10.0\n\n\n\n\nflights[['date','hour','dep_delay']]\n..."
  },
  {
    "objectID": "slideshow/index.html#디자인---데이터",
    "href": "slideshow/index.html#디자인---데이터",
    "title": "Quarto 데이터 사이언스",
    "section": "디자인 - 데이터",
    "text": "디자인 - 데이터\n\n정돈된 데이터사례 - 결핵 데이터사례 - Messy 데이터사례 - 코드사례 - Tidy 데이터\n\n\n\n\n\n\n\n\nWHO 결핵 원데이터\nWHO 에서 년도별, 국가별, 연령별, 성별, 진단방법별 결핵 발병사례 조사 통계 데이터\n진단방법\n\nrel stands for cases of relapse\nep stands for cases of extrapulmonary TB\nsn stands for cases of pulmonary TB that could not be diagnosed by a pulmonary smear (smear negative)\nsp stands for cases of pulmonary TB that could be diagnosed by a pulmonary smear (smear positive)\n\n연령\n\n014 = 0 – 14 years old\n1524 = 15 – 24 years old\n2534 = 25 – 34 years old\n3544 = 35 – 44 years old\n4554 = 45 – 54 years old\n5564 = 55 – 64 years old\n65 = 65 or older\n\n성별\n\nmales (m)\nfemales (f)\n\n\n\n\n\nlibrary(tidyverse)\ntidyr::who \n\n# A tibble: 7,240 × 60\n   country     iso2  iso3   year new_s…¹ new_s…² new_s…³ new_s…⁴ new_s…⁵ new_s…⁶\n   <chr>       <chr> <chr> <int>   <int>   <int>   <int>   <int>   <int>   <int>\n 1 Afghanistan AF    AFG    1980      NA      NA      NA      NA      NA      NA\n 2 Afghanistan AF    AFG    1981      NA      NA      NA      NA      NA      NA\n 3 Afghanistan AF    AFG    1982      NA      NA      NA      NA      NA      NA\n 4 Afghanistan AF    AFG    1983      NA      NA      NA      NA      NA      NA\n 5 Afghanistan AF    AFG    1984      NA      NA      NA      NA      NA      NA\n 6 Afghanistan AF    AFG    1985      NA      NA      NA      NA      NA      NA\n 7 Afghanistan AF    AFG    1986      NA      NA      NA      NA      NA      NA\n 8 Afghanistan AF    AFG    1987      NA      NA      NA      NA      NA      NA\n 9 Afghanistan AF    AFG    1988      NA      NA      NA      NA      NA      NA\n10 Afghanistan AF    AFG    1989      NA      NA      NA      NA      NA      NA\n# … with 7,230 more rows, 50 more variables: new_sp_m65 <int>,\n#   new_sp_f014 <int>, new_sp_f1524 <int>, new_sp_f2534 <int>,\n#   new_sp_f3544 <int>, new_sp_f4554 <int>, new_sp_f5564 <int>,\n#   new_sp_f65 <int>, new_sn_m014 <int>, new_sn_m1524 <int>,\n#   new_sn_m2534 <int>, new_sn_m3544 <int>, new_sn_m4554 <int>,\n#   new_sn_m5564 <int>, new_sn_m65 <int>, new_sn_f014 <int>,\n#   new_sn_f1524 <int>, new_sn_f2534 <int>, new_sn_f3544 <int>, …\n\n\n\n\n\nwho %>%\n  pivot_longer(\n    cols = new_sp_m014:newrel_f65, \n    names_to = \"key\", \n    values_to = \"cases\", \n    values_drop_na = TRUE\n  ) %>% \n  mutate(\n    key = stringr::str_replace(key, \"newrel\", \"new_rel\")\n  ) %>%\n  separate(key, c(\"new\", \"var\", \"sexage\")) %>% \n  select(-new, -iso2, -iso3) %>% \n  separate(sexage, c(\"sex\", \"age\"), sep = 1)\n\n\n\n\n\n# A tibble: 76,046 × 6\n   country      year var   sex   age   cases\n   <chr>       <int> <chr> <chr> <chr> <int>\n 1 Afghanistan  1997 sp    m     014       0\n 2 Afghanistan  1997 sp    m     1524     10\n 3 Afghanistan  1997 sp    m     2534      6\n 4 Afghanistan  1997 sp    m     3544      3\n 5 Afghanistan  1997 sp    m     4554      5\n 6 Afghanistan  1997 sp    m     5564      2\n 7 Afghanistan  1997 sp    m     65        0\n 8 Afghanistan  1997 sp    f     014       5\n 9 Afghanistan  1997 sp    f     1524     38\n10 Afghanistan  1997 sp    f     2534     36\n# … with 76,036 more rows"
  },
  {
    "objectID": "slideshow/index.html#디자인---사람-대-기계",
    "href": "slideshow/index.html#디자인---사람-대-기계",
    "title": "Quarto 데이터 사이언스",
    "section": "디자인 - 사람 대 기계",
    "text": "디자인 - 사람 대 기계\n\n전체 개발 시간사람 < 기계사람 > 기계"
  },
  {
    "objectID": "slideshow/index.html#section-4",
    "href": "slideshow/index.html#section-4",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 과학 노력들"
  },
  {
    "objectID": "slideshow/index.html#section-5",
    "href": "slideshow/index.html#section-5",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 과학 노력들"
  },
  {
    "objectID": "slideshow/index.html#quarto",
    "href": "slideshow/index.html#quarto",
    "title": "Quarto 데이터 사이언스",
    "section": "Quarto",
    "text": "Quarto\n\nR파이썬Quarto: RQuarto: 파이썬"
  },
  {
    "objectID": "slideshow/index.html#section-6",
    "href": "slideshow/index.html#section-6",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "한국 R 사용자회"
  },
  {
    "objectID": "slideshow/problem.html",
    "href": "slideshow/problem.html",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 과학 문제"
  },
  {
    "objectID": "slideshow/problem.html#section-1",
    "href": "slideshow/problem.html#section-1",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 과학 문제"
  },
  {
    "objectID": "slideshow/problem.html#데이터-사이언스---출판",
    "href": "slideshow/problem.html#데이터-사이언스---출판",
    "title": "Quarto 데이터 사이언스",
    "section": "데이터 사이언스 - 출판",
    "text": "데이터 사이언스 - 출판\n\n문제점개념Single Sourcing Multi-Use\n\n\n\n\n\nFigure 1: 문제점\n\n\n\n\n\n\n\nFigure 2: Single Sourcing 개념\n\n\n\n\n\n\n\nFigure 3: Single Sourcing Multi-Use"
  },
  {
    "objectID": "slideshow/problem.html#복잡성",
    "href": "slideshow/problem.html#복잡성",
    "title": "Quarto 데이터 사이언스",
    "section": "복잡성",
    "text": "복잡성\n\n엑셀 1아래한글 2"
  },
  {
    "objectID": "slideshow/problem.html#시각화---그래프-문법",
    "href": "slideshow/problem.html#시각화---그래프-문법",
    "title": "Quarto 데이터 사이언스",
    "section": "시각화 - 그래프 문법 3",
    "text": "시각화 - 그래프 문법 3\n\n\n\n\n\nR 코드\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.3.5     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.1     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nbill_df <- data.frame(\n  sex = factor(c(\"여성\",\"여성\",\"남성\",\"남성\")),\n  time = factor(c(\"점심\",\"저녁\",\"점심\",\"저녁\"), levels=c(\"점심\",\"저녁\")),\n  total_bill = c(13.53, 16.81, 16.24, 17.42)\n)\n\n\n\n\n실행결과\n\nbill_df\n\n   sex time total_bill\n1 여성 점심      13.53\n2 여성 저녁      16.81\n3 남성 점심      16.24\n4 남성 저녁      17.42\n\n\n\n\n\n\n\n\n\nR 코드\n\nbill_df %>% \n  ggplot(aes(x=time, y=total_bill, group=sex, shape=sex, colour=sex)) +\n    geom_line(aes(linetype=sex), size=1) +    \n    geom_point(size=3, fill=\"white\") +        \n    expand_limits(y=0) +                      \n    scale_colour_hue(name=\"결재자 성별\", l=30) +\n    scale_shape_manual(name=\"결재자 성별\", values=c(22,21)) +\n    scale_linetype_discrete(name=\"결재자 성별\") +\n    xlab(\"점심, 석식\") + ylab(\"팁(Tip)\") +\n    ggtitle(\"식사 결재 평균 팁\") +    \n    theme_bw() +\n    theme(legend.position=c(.7, .4))\n\n\n\n\n실행결과\n\n\n\n\n\n\n\n\n\n\n\n\nR 코드\n\nbill_mat <- matrix( bill_df$total_bill,\n                   nrow = 2,\n                   byrow=TRUE,\n                   dimnames = list(c(\"여성\", \"남성\"), c(\"점심\", \"저녁\"))\n                   )\n\nmf_col <- c(\"#3CC3BD\", \"#FD8210\")\nbarplot(bill_mat, beside = TRUE, border=NA, col=mf_col)\nlegend(\"topleft\", row.names(bill_mat), pch=15, col=mf_col)\n\n\npar(cex=1.2, cex.axis=1.1)\nmatplot(bill_mat, type=\"b\", lty=1, pch=19, col=mf_col,\n    cex=1.5, lwd=3, las=1, bty=\"n\", xaxt=\"n\",\n    xlim=c(0.7, 2.2), ylim=c(12,18), ylab=\"\",\n    main=\"식사 결재 평균 팁\", yaxt=\"n\")\naxis(2, at=axTicks(2), labels=sprintf(\"$%s\", axTicks(2)),\n    las=1, cex.axis=0.8, col=NA, line = -0.5)\ngrid(NA, NULL, lty=3, lwd=1, col=\"#000000\")\nabline(v=c(1,2), lty=3, lwd=1, col=\"#000000\")\nmtext(\"점심\", side=1, at=1)\nmtext(\"저녁\", side=1, at=2)\ntext(1.5, 17.3, \"남성\", srt=8, font=3)\ntext(1.5, 15.1, \"여성\", srt=33, font=3)\n\n\n\n\n실행결과"
  },
  {
    "objectID": "slideshow/problem.html#디자인---코드",
    "href": "slideshow/problem.html#디자인---코드",
    "title": "Quarto 데이터 사이언스",
    "section": "디자인 - 코드",
    "text": "디자인 - 코드\n\n데이터 가공dplyr RBase RSQL파이썬\n\n\n\n날짜와 시간별로 총 빈도수와 출발연착 평균 시간을 구한다. 단, 총빈도수가 10 회 미만인 것은 제외하고 출발연착 시간의 결측값을 제거하고 계산한다.\n\n\nflights 데이터프레임에서\n출발 연착시간(dep_delay) 칼럼에서 결측값이 없는 (!is.na()) 행을 필터링 하고\n날짜별(date), 시간별(hour) 그룹을 묶어\n평균 출발 연착시간을 계산하고 총빈도수 총계를 내고\n총빈도수가 10회 이상인 날짜와 시간을 찾아내시오\n\n\n\n\nhourly_delay <- flights %>%  \n  filter(!is.na(dep_delay)) %>% \n  group_by(date, hour) %>% \n  summarise(delay = mean(dep_delay), n = n()) %>%  \n  filter(n > 10) \n\n\n\n\nhourly_delay <- filter(   \n    summarise(   \n        group_by(   \n             filter(   \n                 flights,    \n                 !is.na(dep_delay)   \n             ),    \n             date, hour   \n        ),    \n    delay = mean(dep_delay),    \n         n = n()   \n    ),    \n    n > 10   \n)\n\n\n\n\nSELECT \"date\", \"hour\", \"delay\", \"n\"\nFROM (\n    SELECT \"date\", \"hour\",\n        AVG(\"dep_delay\") AS \"delay\",\n        COUNT() AS \"n\"\n    FROM \"flights\"\n    WHERE NOT(\"dep_delay\" IS NULL)\n    GROUP BY \"date\", \"hour\"\n) AS \"_W1\"\nWHERE \"n\" > 10.0\n\n\n\n\nflights[['date','hour','dep_delay']]\n..."
  },
  {
    "objectID": "slideshow/problem.html#디자인---데이터",
    "href": "slideshow/problem.html#디자인---데이터",
    "title": "Quarto 데이터 사이언스",
    "section": "디자인 - 데이터",
    "text": "디자인 - 데이터\n\n정돈된 데이터사례 - 결핵 데이터사례 - Messy 데이터사례 - 코드사례 - Tidy 데이터\n\n\n\n\n\n\n\n\nWHO 결핵 원데이터\nWHO 에서 년도별, 국가별, 연령별, 성별, 진단방법별 결핵 발병사례 조사 통계 데이터\n진단방법\n\nrel stands for cases of relapse\nep stands for cases of extrapulmonary TB\nsn stands for cases of pulmonary TB that could not be diagnosed by a pulmonary smear (smear negative)\nsp stands for cases of pulmonary TB that could be diagnosed by a pulmonary smear (smear positive)\n\n연령\n\n014 = 0 – 14 years old\n1524 = 15 – 24 years old\n2534 = 25 – 34 years old\n3544 = 35 – 44 years old\n4554 = 45 – 54 years old\n5564 = 55 – 64 years old\n65 = 65 or older\n\n성별\n\nmales (m)\nfemales (f)\n\n\n\n\n\nlibrary(tidyverse)\ntidyr::who \n\n# A tibble: 7,240 × 60\n   country     iso2  iso3   year new_s…¹ new_s…² new_s…³ new_s…⁴ new_s…⁵ new_s…⁶\n   <chr>       <chr> <chr> <int>   <int>   <int>   <int>   <int>   <int>   <int>\n 1 Afghanistan AF    AFG    1980      NA      NA      NA      NA      NA      NA\n 2 Afghanistan AF    AFG    1981      NA      NA      NA      NA      NA      NA\n 3 Afghanistan AF    AFG    1982      NA      NA      NA      NA      NA      NA\n 4 Afghanistan AF    AFG    1983      NA      NA      NA      NA      NA      NA\n 5 Afghanistan AF    AFG    1984      NA      NA      NA      NA      NA      NA\n 6 Afghanistan AF    AFG    1985      NA      NA      NA      NA      NA      NA\n 7 Afghanistan AF    AFG    1986      NA      NA      NA      NA      NA      NA\n 8 Afghanistan AF    AFG    1987      NA      NA      NA      NA      NA      NA\n 9 Afghanistan AF    AFG    1988      NA      NA      NA      NA      NA      NA\n10 Afghanistan AF    AFG    1989      NA      NA      NA      NA      NA      NA\n# … with 7,230 more rows, 50 more variables: new_sp_m65 <int>,\n#   new_sp_f014 <int>, new_sp_f1524 <int>, new_sp_f2534 <int>,\n#   new_sp_f3544 <int>, new_sp_f4554 <int>, new_sp_f5564 <int>,\n#   new_sp_f65 <int>, new_sn_m014 <int>, new_sn_m1524 <int>,\n#   new_sn_m2534 <int>, new_sn_m3544 <int>, new_sn_m4554 <int>,\n#   new_sn_m5564 <int>, new_sn_m65 <int>, new_sn_f014 <int>,\n#   new_sn_f1524 <int>, new_sn_f2534 <int>, new_sn_f3544 <int>, …\n\n\n\n\n\nwho %>%\n  pivot_longer(\n    cols = new_sp_m014:newrel_f65, \n    names_to = \"key\", \n    values_to = \"cases\", \n    values_drop_na = TRUE\n  ) %>% \n  mutate(\n    key = stringr::str_replace(key, \"newrel\", \"new_rel\")\n  ) %>%\n  separate(key, c(\"new\", \"var\", \"sexage\")) %>% \n  select(-new, -iso2, -iso3) %>% \n  separate(sexage, c(\"sex\", \"age\"), sep = 1)\n\n\n\n\n\n# A tibble: 76,046 × 6\n   country      year var   sex   age   cases\n   <chr>       <int> <chr> <chr> <chr> <int>\n 1 Afghanistan  1997 sp    m     014       0\n 2 Afghanistan  1997 sp    m     1524     10\n 3 Afghanistan  1997 sp    m     2534      6\n 4 Afghanistan  1997 sp    m     3544      3\n 5 Afghanistan  1997 sp    m     4554      5\n 6 Afghanistan  1997 sp    m     5564      2\n 7 Afghanistan  1997 sp    m     65        0\n 8 Afghanistan  1997 sp    f     014       5\n 9 Afghanistan  1997 sp    f     1524     38\n10 Afghanistan  1997 sp    f     2534     36\n# … with 76,036 more rows"
  },
  {
    "objectID": "slideshow/problem.html#디자인---사람-대-기계",
    "href": "slideshow/problem.html#디자인---사람-대-기계",
    "title": "Quarto 데이터 사이언스",
    "section": "디자인 - 사람 대 기계",
    "text": "디자인 - 사람 대 기계\n\n전체 개발 시간사람 < 기계사람 > 기계"
  },
  {
    "objectID": "slideshow/solution.html",
    "href": "slideshow/solution.html",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 과학 노력들"
  },
  {
    "objectID": "slideshow/solution.html#section-1",
    "href": "slideshow/solution.html#section-1",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 과학 노력들"
  },
  {
    "objectID": "slideshow/solution.html#quarto",
    "href": "slideshow/solution.html#quarto",
    "title": "Quarto 데이터 사이언스",
    "section": "Quarto",
    "text": "Quarto\n\nR파이썬Quarto: RQuarto: 파이썬"
  },
  {
    "objectID": "slideshow/title-slide.html",
    "href": "slideshow/title-slide.html",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 사이언스와 디자인\n\n\n디자인과 아키텍쳐의 중요성\n\n\n\n이광춘, 한국 R 사용자회\n\n\n2022-10-11\n\n\n\n   github.com/bit2r/quarto"
  },
  {
    "objectID": "writing/index.html",
    "href": "writing/index.html",
    "title": "디지털 글쓰기",
    "section": "",
    "text": "1 디지털 문서 제작 패러다임\n신속하고 빠르게 누구나 짧은 학습을 통해서 문서를 저작하고 출판할 수 있는 방식으로 인기를 얻은 아래한글 혹은 MS워드 워드프로세서를 사용하는데 이는 위지위그(WYSIWYG: What You See Is What You Get, “보는 대로 얻는다”)에 기초한 것으로 문서 편집 과정에서 화면에 포맷된 낱말, 문장이 출력물과 동일하게 나오는 방식이다. 이전 타자기 대비 경쟁력이 있었고 이를 바탕으로 문서편집기 소프트웨어가 대세로 떠올랐다.\n위지윅의 대척점에 있는 것이 위지윔(WYSIWYM, What You See Is What You Mean)으로 대표적인 것인 \\(\\LaTeX\\) 으로 구조화된 방식으로 문서를 작성하면 컴파일을 통해서 최종 문서가 미려한 출판가능한 PDF, PS, DVI 등 확장자를 갖는 출판결과물을 얻을 수 있다.\n\\(\\LaTeX\\)이 갖는 장점은 이제 프로그래밍 코드(R/파이썬/SQL/쉘스크립트/자바스크립트 등)을 문서저작에 포함되며 literate programming 패러다임이 대세로 떠올랐고 현존하는 다양한 문서저작 문제에 대한 응답으로 자리를 매김하고 있다.\n이미지 출처: http://www.cbinews.co.kr/news/articleView.html?idxno=36859\n\n\n\n2 문서로 보는 민주주의\n대한민국은 권력을 입법권, 행정권, 사법권으로 나눠 권력을 나누었다. 세부적으보 보면 다소 차이는 있겠지만 법을 만드는 것은 결국 문서를 저작하는 것이고 대한민국 정부는 법에 담긴 문서를 실행하는 기관이고 사법부는 법 문서를 해석하는 기관으로 볼 수 있다. 결국 민주주의는 문서를 기반으로 존립하는 사회체계라고 볼 수 있다. 최근 들어 인공지능이 부상하면서 문서저작을 보조하던 수단에서 이제는 사람보다 더 나은 통찰력을 보이는 분야도 속속 등장하고 있다. 이런 측면에서 인공지능 기계를 현 민주주의 체계 내에 어떻게 녹여낼 것인지 관심이 높아지고 있다.\n\n\n\n3 디지털 문서 저작\n과거 둘로 쪼개져서 과학기술 문서저작 즉 논문 등은 \\(\\LaTeX\\) 기반 위지윔(WYSIWYM) 패러다임이 확고한 자리를 잡았지만 위지위그(WYSIWYG) 패러다임 기반 아래한글 워드와 같은 문서저작편집기 성능이 높아지면서 사실상 둘 사이 경계도 허물어졌다.\n하지만, 과학기술 논문 저작에 진실성, 재현성 등이 강조되고 빅데이터 기반 과학연구가 큰 성과를 보이고 프로그래밍이 과학기술 논문 저작에 주요한 역할을 하면서 이런 추세를 반영한 과학기술 저작 패러다임이 떠오르고 있다.\n이러한 추세를 반영한 도구의 발전도 함께 이뤄지면서 과학기술 저작은 물론 거의 모든 문서 저작분야에 큰 변화가 일어나고 있다.\n\n\n\n4 과학문서 저작\n\n심각한 현재상황\n마크다운 기초\n고급 마크다운\n문서저작 실무\n수학 수식\n\n\n\n5 사례: 한국 R 컨퍼런스(2021)\n\n컨퍼런스 웹사이트\n컨퍼런스 전 기획\n\n컨퍼런스 포스터\n컨퍼런스 후원\n\n컨퍼런스 본 행사\n\n발표 슬라이드\n발표 템플릿\n\n컨퍼런스 후 설문\n\n설문조사 보고서\n\n기타\n\n탄소중립 신재생 에너지 캠프"
  },
  {
    "objectID": "writing_history.html",
    "href": "writing_history.html",
    "title": "문자와 종이 역사",
    "section": "",
    "text": "전세계인구는 77.5억(2020년 기준)명이며 언어는 대략 7,100개 언어가 존재하고 있는 것으로 파악되고 있으며 영어, 중국어, 힌디어, 스페인어, 프랑스어, 아랍어, 벵골어, 러시아어, 포르투갈어, 인도네시아어 순으로 많은 언어인구를 갖고 있다.\n한국어 언어는 한글을 문자로 갖고 있지만 모든 언어가 문자(Writing System)를 갖는 것은 아니다. 다르게 보면 동일한 뿌리를 갖는 문자를 공유하는 언어도 많다. 예를 들어,\n\n알파벳: 라틴어(영어, 불어, 독어, 이태리어 등), 셀틱, 발틱, 슬로박, 등\n한자: 중국어, 대만어\n아랍문자: 아랍, 인도-이란 어족(페르시아, 펀잡 등)\n가나: 일본\n…\n\n문자가 존재하기 위한 전제조건이 있는데 크게 다음 세가지를 들고 있다.\n\n언어 : 한국어, 영어, 중국어, …\n아이디어: 생각, 콘텐츠,…\n기호: 숫자, 문자, 그림, …\n\n언어\n숫자와 수식\n교통표지 등 표식\n\n매체: 종이, 파피루스, 디스플레이"
  },
  {
    "objectID": "writing_history.html#알파벳",
    "href": "writing_history.html#알파벳",
    "title": "문자와 종이 역사",
    "section": "3.1 알파벳",
    "text": "3.1 알파벳\nEvolution of the Alphabet | Earliest Forms to Modern Latin Script 유튜브\n알파벳(Alphabet) 문자는 이집트 상형문자에서 시작되었다고 알려져 있다. 이후 상형문자는 페니키아 상인이 소리를 기반으로 의미를 전달하는 방식으로 진화되었고 그리스를 거쳐 알파벳 뒤쪽 문자가 추가되고 로마시대에 오늘날 알려진 영어 대문자가 완성되고 이후 소문자가 손으로 필사되면서 발명되고 다양한 글꼴이 생겨나게 되었다. 구텐베르그가 활자인쇄술을 발명되면서 현재와 같은 알파벳 문자가 완성되었다.\n\n\n\n알파벳 진화 역사"
  },
  {
    "objectID": "writing_history.html#문자-시스템",
    "href": "writing_history.html#문자-시스템",
    "title": "문자와 종이 역사",
    "section": "3.2 문자 시스템",
    "text": "3.2 문자 시스템\n앞서 문자를 크게 표음문자와 표의문자로 구분하였다. 이를 좀더 상세히 세분화하면 전세계 문자는 크게 다음과 같이 4개로 구분된다. (Ghosh et al., 2010) 표어문자의 대표적인 문자가 중국의 한자, 음절문자의 대표적 문자가 일본어, 자질문자의 대표 문자가 한글이다. 그외 음소문자는 로마자로 대표되는 영문자가 있다.\n\n표어문자(logographic)\n음절문자(syllabic)\n음소문자(alphabetic)\n자질문자(featural)\n\n\n\n\n\n\n\n\n\n종류\n기호 표현\n예\n\n\n\n\n표어 문자\n형태소\n중국의 한자\n\n\n음절 문자\n음절 또는 모라\n일본의 가나 (문자)\n\n\n음소 문자\n낱소리 (자음 또는 모음)\n로마자, 키릴문자, 그리스 문자\n\n\n아부기다\n낱소리 (자음+모음)\n데바나가리 문자, 그으즈 문자\n\n\n아브자드\n낱소리 (자음)\n아랍 문자, 히브리 문자\n\n\n자질 문자\n음성 자질\n한국의 한글"
  },
  {
    "objectID": "writing_history.html#글쓰기-방향",
    "href": "writing_history.html#글쓰기-방향",
    "title": "문자와 종이 역사",
    "section": "3.3 글쓰기 방향",
    "text": "3.3 글쓰기 방향\n대부분의 문자를 왼쪽에서 오른쪽, 위에서 아래 방향으로 작성하는 방식을 취하고 있으나 이슬람권에서는 오른쪽에서 왼쪽으로 작성을 하고 있고 몽골은 위에서 아래로 작성하고 있다."
  },
  {
    "objectID": "writing_history.html#표의-문자",
    "href": "writing_history.html#표의-문자",
    "title": "문자와 종이 역사",
    "section": "3.4 표의 문자",
    "text": "3.4 표의 문자\n한자와 같은 표의 문자가 여러가지 단점이 있는 것처럼 보이기도 하지만 표의문자가 갖는 장점으로 인해 그 중요성이 더욱 부각되고 있다. 표의문자가 갖는 장점은 문자 자체 의미가 부여되기 때문에 전세계 누구도 문자만 보면 그 뜻을 유추할 수 있다는 점이다.\n\n그림문자(Pictographic): 🌜, 😀, 🍰, …\n표의문자(Ideogrpahic): 🚫 금지와 같은 의미를 갖는 문자로 ⛔ 🚸 교통 표지판, ▶️ 전자제품 사용\n추상 어표(Abstract Logograpahic): 한자 사람 인(人), %, &, …\n\n그림문자와 표의문자를 결합하게 되면 다음과 같이 흡연을 금지하는 의미를 명확히 전달할 수 있다.\n\n\n\n흡연과 금지가 결합된 표의문자"
  },
  {
    "objectID": "youtube.html",
    "href": "youtube.html",
    "title": "동영상 글쓰기",
    "section": "",
    "text": "용호수님의 파이널 컷 한시간에 끝내기에 언급된 사항을 중심으로 요약"
  },
  {
    "objectID": "youtube.html#파이널-컷의-개괄적-이해",
    "href": "youtube.html#파이널-컷의-개괄적-이해",
    "title": "동영상 글쓰기",
    "section": "0.1 파이널 컷의 개괄적 이해",
    "text": "0.1 파이널 컷의 개괄적 이해\n파이널 컷의 Library(라이브러리)는 Finder(윈도의 탐색기)의 Bundle(번들) fcpbundle의 확장자가 동영상 글쓰기의 모든 것을 담아낸다. 즉, 파이널 컷은 기본적으로 fcpbundle 확장자를 갖는 파일에 동영상 제작에 필요한 모든 자원(소리, 동영상, 이미지, 텍스트 등)을 한 곳에 저장한다."
  },
  {
    "objectID": "youtube.html#importing-organizing",
    "href": "youtube.html#importing-organizing",
    "title": "동영상 글쓰기",
    "section": "0.2 Importing & Organizing",
    "text": "0.2 Importing & Organizing\n\n0.2.1 작업대 정리\n아무것도 없는 상황에서 시작작업을 설정한다. 이를 위해서 기존 fcpbundle 확장자를 갖는 라이브러리가 열려있는 경우 “Close Library”를 마우스 우클릭으로 실행한다. 그렇게 되면 깔끔한 작업공간이 생성된다.\n\n\n0.2.2 신규 라이브러리\n“Open Library” 를 클릭한 후 기존 작업된 라이브러리를 가져오거나 New…를 클릭하여 새로운 작업공간을 Finder에서 지정한다. 이를 통해서 Finder와 Final Cut 두 작업공간이 동기화 되었다.\n\n\n\n0.2.3 자원 가져오기\n아래 화살표 버튼을 클릭하면 동영상 편집에 사용되는 다양한 외부 자원(동영상, 소리, 이미지, 텍스트, 애니메이션 등)을 가져와서 작업대에서 다양한 요리를 통해 멋진 동영상을 제작할 수 있다.\n\n\n\n0.2.4 내장음원\nSound Effects가 내장되어 있어 필요한 음원을 검색하여 동영상에 녹여낸다."
  },
  {
    "objectID": "youtube.html#sequencing-시퀀싱하기",
    "href": "youtube.html#sequencing-시퀀싱하기",
    "title": "동영상 글쓰기",
    "section": "0.3 Sequencing (시퀀싱하기)",
    "text": "0.3 Sequencing (시퀀싱하기)\n결국 동영상 글쓰기는 프로젝트를 통해 다양한 자원을 시퀀싱하는 것으로 이해할 수 있다. 이를 위해 프로젝트를 생성하여 시퀀싱 작업을 수행한다.\n\n\n0.3.1 동영상 잘라내기\n요리재료 동영상을 자를 경우 시작점과 끝점을 지정하여 해당 동영상만 잘라내어 편집에 사용한다.\n\n동영상 잘라내기 위치 지정\n\nI, in-point 설정\nO, out-point 설정\n\n동영상 삽입위치 지정\n\nE, Main Storyline 맨뒤에 붙이기\nQ, Main Storyline에 연결하여 삽입\nW, Time Indicator 기준으로 중간에 삽입\n\n\n\n\n0.3.2 소리 편집\n소리를 편집해야 하는 경우 우측 하단에 있는 기능을 활용한다. 우선 동영상과 소리를 분리하고 소리를 편집하는 Blade를 사용하여 편집할 위치를 지정하고 ⌥ (Option, Alt) + ] 혹은 ⌥ (Option, Alt) + [ 을 사용한다. 혹은 단축키로 ⌘ + B… ⌘ + B를 눌러 날려버릴 영역의 지점을 표시하고 A키를 눌러 영역을 선정한 후 ⌫ 삭제키를 눌러 삭제한다. 즉,\n\n⌘ + B: 클립 자르기\n⌥ + [ 혹은 ] 앞뒤 잘라내기\n\n\n\n\n0.3.3 미세조정\n\n,: 좌측으로 1 프레임 잘라내기 (Trimming)\n\n쉬프트 ⇧ + ,: 좌측으로 10 프레임 잘라내기 (Trimming)\n\n.: 우측으로 1 프레임 잘라내기 (Trimming)\n\n쉬프트 ⇧ + .: 우측으로 10 프레임 잘라내기 (Trimming)\n\n쉬프트 ⇧ + /: 다듬어진 트림 결과 확인\n\n\n\n0.3.4 오디오 삭제\n동영상에 오디오가 딸려오는데 경우에 따라서 오디오를 날려버리고 영상만 필요한 경우가 있다. 이럴때 해당 클립을 선택하여 우클릭을 한다. 그리고 난 후 Expand Audio Components를 클릭하여 동영상에서 영상과 오디오를 분리하고 오디오를 삭제한다. 단축키는 ⌃ + ⌥ + S로 오디오를 분리한 후 삭제한다.\n\n\n\n0.3.5 볼륨조정\n오디오 클립을 선택한 후에 단축키를 사용해서 음량을 조절할 수 있다.\n\n⌃ + : 1 데시벨 음량 증가\n⌃ - : 1 데시벨 음량 감소\n\n양쪽 점을 클릭하여 음량에 대한 Fade 효과도 넣을 수 있다.\n\n\n\n0.3.6 텍스트 넣기\n⌃ + t 단축키를 사용하여 텍스트를 동영상에 올릴 수 있다.\n\n\n0.3.7 이미지 넣기\n다운로드 받은 이미지를 드래그하여 편집중인 작업대에 넣으면 자동으로 자원으로 삽입되고 이를 시퀀싱에 가져와서 적당한 곳에 넣으면 이미지를 동영상에 넣을 수 있다.\n\n\n0.3.8 이미지 이동 변형\n이미지를 영상 하단에 버튼을 클릭하여 자유롭게 영상을 이동시키고 크기를 확대축소한다.\n\n\n\n0.3.9 애니메이션\nCrop + Transform 기능을 사용하여 해당 영상에 애니메이션 기능 좌우 이동 혹은 확대축소를 할 수 있다.\n\n\n0.3.10 배경음 넣기\n음원을 선택하고** R (Range Selection)**을 눌러 배경음을 선택하고 소리를 배경음으로 넣어 줄인다.\n\n\n\n0.3.11 소리Limiter\n\n\n0.3.12 Transition\nCross Dissolve가 기본설정입니다.\n\n\n0.3.13 색보정\n구매하여 사용한다.\n\n\n0.3.14 더빙\n⌥ + ⌘ + 8 단축키를 통해 동영상에 목소리를 더빙하여 입힐 수 있다."
  },
  {
    "objectID": "youtube.html#export내보내기",
    "href": "youtube.html#export내보내기",
    "title": "동영상 글쓰기",
    "section": "0.4 Export(내보내기)",
    "text": "0.4 Export(내보내기)\n\n0.4.1 썸네일 만들기\nSave Current Frame...을 클릭하여 썸네일을 제작한다.\n\n\n\n0.4.2 저장하기\nFile → Delete Generated Library Files... 선택하여 불필요한 파일들을 정리하여 삭제한다.\n\nFile → Consolidate Library Media... 선택하여 관련 파일들을 하나로 합치시킨다."
  },
  {
    "objectID": "youtube.html#작업대-정리",
    "href": "youtube.html#작업대-정리",
    "title": "동영상 글쓰기",
    "section": "2.1 작업대 정리",
    "text": "2.1 작업대 정리\n아무것도 없는 상황에서 시작작업을 설정한다. 이를 위해서 기존 fcpbundle 확장자를 갖는 라이브러리가 열려있는 경우 “Close Library”를 마우스 우클릭으로 실행한다. 그렇게 되면 깔끔한 작업공간이 생성된다."
  },
  {
    "objectID": "youtube.html#신규-라이브러리",
    "href": "youtube.html#신규-라이브러리",
    "title": "동영상 글쓰기",
    "section": "2.2 신규 라이브러리",
    "text": "2.2 신규 라이브러리\n“Open Library” 를 클릭한 후 기존 작업된 라이브러리를 가져오거나 New…를 클릭하여 새로운 작업공간을 Finder에서 지정한다. 이를 통해서 Finder와 Final Cut 두 작업공간이 동기화 되었다."
  },
  {
    "objectID": "youtube.html#자원-가져오기",
    "href": "youtube.html#자원-가져오기",
    "title": "동영상 글쓰기",
    "section": "2.3 자원 가져오기",
    "text": "2.3 자원 가져오기\n아래 화살표 버튼을 클릭하면 동영상 편집에 사용되는 다양한 외부 자원(동영상, 소리, 이미지, 텍스트, 애니메이션 등)을 가져와서 작업대에서 다양한 요리를 통해 멋진 동영상을 제작할 수 있다."
  },
  {
    "objectID": "youtube.html#내장음원",
    "href": "youtube.html#내장음원",
    "title": "동영상 글쓰기",
    "section": "2.4 내장음원",
    "text": "2.4 내장음원\nSound Effects가 내장되어 있어 필요한 음원을 검색하여 동영상에 녹여낸다."
  },
  {
    "objectID": "youtube.html#동영상-잘라내기",
    "href": "youtube.html#동영상-잘라내기",
    "title": "동영상 글쓰기",
    "section": "3.1 동영상 잘라내기",
    "text": "3.1 동영상 잘라내기\n요리재료 동영상을 자를 경우 시작점과 끝점을 지정하여 해당 동영상만 잘라내어 편집에 사용한다.\n\n동영상 잘라내기 위치 지정\n\nI, in-point 설정\nO, out-point 설정\n\n동영상 삽입위치 지정\n\nE, Main Storyline 맨뒤에 붙이기\nQ, Main Storyline에 연결하여 삽입\nW, Time Indicator 기준으로 중간에 삽입"
  },
  {
    "objectID": "youtube.html#소리-편집",
    "href": "youtube.html#소리-편집",
    "title": "동영상 글쓰기",
    "section": "3.2 소리 편집",
    "text": "3.2 소리 편집\n소리를 편집해야 하는 경우 우측 하단에 있는 기능을 활용한다. 우선 동영상과 소리를 분리하고 소리를 편집하는 Blade를 사용하여 편집할 위치를 지정하고 ⌥ (Option, Alt) + ] 혹은 ⌥ (Option, Alt) + [ 을 사용한다. 혹은 단축키로 ⌘ + B… ⌘ + B를 눌러 날려버릴 영역의 지점을 표시하고 A키를 눌러 영역을 선정한 후 ⌫ 삭제키를 눌러 삭제한다. 즉,\n\n⌘ + B: 클립 자르기\n⌥ + [ 혹은 ] 앞뒤 잘라내기"
  },
  {
    "objectID": "youtube.html#미세조정",
    "href": "youtube.html#미세조정",
    "title": "동영상 글쓰기",
    "section": "3.3 미세조정",
    "text": "3.3 미세조정\n\n,: 좌측으로 1 프레임 잘라내기 (Trimming)\n\n쉬프트 ⇧ + ,: 좌측으로 10 프레임 잘라내기 (Trimming)\n\n.: 우측으로 1 프레임 잘라내기 (Trimming)\n\n쉬프트 ⇧ + .: 우측으로 10 프레임 잘라내기 (Trimming)\n\n쉬프트 ⇧ + /: 다듬어진 트림 결과 확인"
  },
  {
    "objectID": "youtube.html#오디오-삭제",
    "href": "youtube.html#오디오-삭제",
    "title": "동영상 글쓰기",
    "section": "3.4 오디오 삭제",
    "text": "3.4 오디오 삭제\n동영상에 오디오가 딸려오는데 경우에 따라서 오디오를 날려버리고 영상만 필요한 경우가 있다. 이럴때 해당 클립을 선택하여 우클릭을 한다. 그리고 난 후 Expand Audio Components를 클릭하여 동영상에서 영상과 오디오를 분리하고 오디오를 삭제한다. 단축키는 ⌃ + ⌥ + S로 오디오를 분리한 후 삭제한다."
  },
  {
    "objectID": "youtube.html#볼륨조정",
    "href": "youtube.html#볼륨조정",
    "title": "동영상 글쓰기",
    "section": "3.5 볼륨조정",
    "text": "3.5 볼륨조정\n오디오 클립을 선택한 후에 단축키를 사용해서 음량을 조절할 수 있다.\n\n⌃ + : 1 데시벨 음량 증가\n⌃ - : 1 데시벨 음량 감소\n\n양쪽 점을 클릭하여 음량에 대한 Fade 효과도 넣을 수 있다."
  },
  {
    "objectID": "youtube.html#텍스트-넣기",
    "href": "youtube.html#텍스트-넣기",
    "title": "동영상 글쓰기",
    "section": "3.6 텍스트 넣기",
    "text": "3.6 텍스트 넣기\n⌃ + t 단축키를 사용하여 텍스트를 동영상에 올릴 수 있다."
  },
  {
    "objectID": "youtube.html#이미지-넣기",
    "href": "youtube.html#이미지-넣기",
    "title": "동영상 글쓰기",
    "section": "3.7 이미지 넣기",
    "text": "3.7 이미지 넣기\n다운로드 받은 이미지를 드래그하여 편집중인 작업대에 넣으면 자동으로 자원으로 삽입되고 이를 시퀀싱에 가져와서 적당한 곳에 넣으면 이미지를 동영상에 넣을 수 있다."
  },
  {
    "objectID": "youtube.html#이미지-이동-변형",
    "href": "youtube.html#이미지-이동-변형",
    "title": "동영상 글쓰기",
    "section": "3.8 이미지 이동 변형",
    "text": "3.8 이미지 이동 변형\n이미지를 영상 하단에 버튼을 클릭하여 자유롭게 영상을 이동시키고 크기를 확대축소한다."
  },
  {
    "objectID": "youtube.html#애니메이션",
    "href": "youtube.html#애니메이션",
    "title": "동영상 글쓰기",
    "section": "3.9 애니메이션",
    "text": "3.9 애니메이션\nCrop + Transform 기능을 사용하여 해당 영상에 애니메이션 기능 좌우 이동 혹은 확대축소를 할 수 있다."
  },
  {
    "objectID": "youtube.html#배경음-넣기",
    "href": "youtube.html#배경음-넣기",
    "title": "동영상 글쓰기",
    "section": "3.10 배경음 넣기",
    "text": "3.10 배경음 넣기\n음원을 선택하고** R (Range Selection)**을 눌러 배경음을 선택하고 소리를 배경음으로 넣어 줄인다."
  },
  {
    "objectID": "youtube.html#소리limiter",
    "href": "youtube.html#소리limiter",
    "title": "동영상 글쓰기",
    "section": "3.11 소리Limiter",
    "text": "3.11 소리Limiter"
  },
  {
    "objectID": "youtube.html#transition",
    "href": "youtube.html#transition",
    "title": "동영상 글쓰기",
    "section": "3.12 Transition",
    "text": "3.12 Transition\nCross Dissolve가 기본설정입니다."
  },
  {
    "objectID": "youtube.html#색보정",
    "href": "youtube.html#색보정",
    "title": "동영상 글쓰기",
    "section": "3.13 색보정",
    "text": "3.13 색보정\n구매하여 사용한다."
  },
  {
    "objectID": "youtube.html#더빙",
    "href": "youtube.html#더빙",
    "title": "동영상 글쓰기",
    "section": "3.14 더빙",
    "text": "3.14 더빙\n⌥ + ⌘ + 8 단축키를 통해 동영상에 목소리를 더빙하여 입힐 수 있다."
  },
  {
    "objectID": "youtube.html#썸네일-만들기",
    "href": "youtube.html#썸네일-만들기",
    "title": "동영상 글쓰기",
    "section": "4.1 썸네일 만들기",
    "text": "4.1 썸네일 만들기\nSave Current Frame...을 클릭하여 썸네일을 제작한다."
  },
  {
    "objectID": "youtube.html#저장하기",
    "href": "youtube.html#저장하기",
    "title": "동영상 글쓰기",
    "section": "4.2 저장하기",
    "text": "4.2 저장하기\nFile → Delete Generated Library Files... 선택하여 불필요한 파일들을 정리하여 삭제한다.\n\nFile → Consolidate Library Media... 선택하여 관련 파일들을 하나로 합치시킨다."
  },
  {
    "objectID": "youtube.html#gif-이미지",
    "href": "youtube.html#gif-이미지",
    "title": "동영상 글쓰기",
    "section": "5.1 GIF 이미지",
    "text": "5.1 GIF 이미지\n\n\n\n\n\n\n\n\n\n\n\n현재상황\n쿼토 도구"
  },
  {
    "objectID": "youtube.html#디지털-글쓰기",
    "href": "youtube.html#디지털-글쓰기",
    "title": "동영상 글쓰기",
    "section": "5.2 디지털 글쓰기",
    "text": "5.2 디지털 글쓰기"
  },
  {
    "objectID": "ide_vscode.html",
    "href": "ide_vscode.html",
    "title": "Visual Studio Code",
    "section": "",
    "text": "R을 설치한다.\nlanguageserver 패키지를 설치한다.\n\n\ninstall.packages(\"languageserver\")\n\n\nVisual Studio Code 에서 R extension을 설치한다.\n.R 파일에 개발을 시작한다.\n\n\n\nR extension을 설치하게 되면 VS Code에서 R 코드 개발을 원활히 할 수 있도록 지원한다.\n\n\n\nVS Code를 실행하고 R Extension 설치\n\n\n\n\n\nR Extension 설치되면 코드 창 상단에 실행버튼이 활성화되고 Ctrl + Enter 혹은 Ctrl + Shift + Enter\n\n\n\nR 코드 실행화면"
  },
  {
    "objectID": "quarto_pdf.html#표-1",
    "href": "quarto_pdf.html#표-1",
    "title": "한글 PDF",
    "section": "표",
    "text": "표"
  },
  {
    "objectID": "quarto_pdf.html#gt-표",
    "href": "quarto_pdf.html#gt-표",
    "title": "한글 PDF",
    "section": "gt 표",
    "text": "gt 표\n\nknitr::kable(\n  mtcars[1:6, 1:10]\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n17.02\n0\n0\n3\n\n\nValiant\n18.1\n6\n225\n105\n2.76\n3.460\n20.22\n1\n0\n3"
  },
  {
    "objectID": "quarto_slideshow.html",
    "href": "quarto_slideshow.html",
    "title": "Quarto Presentations",
    "section": "",
    "text": "This presentation will show you examples of what you can do with Quarto and Reveal.js, including:\n\nPresenting code and LaTeX equations\nIncluding computations in slide output\nImage, video, and iframe backgrounds\nFancy transitions and animations\nPrinting to PDF\n\n…and much more"
  },
  {
    "objectID": "slideshow/index.html",
    "href": "slideshow/index.html",
    "title": "Quarto 데이터 사이언스",
    "section": "",
    "text": "데이터 사이언스와 디자인"
  }
]